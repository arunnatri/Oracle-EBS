--
-- XXDOINV_PITEM_PKG1  (Package Body) 
--
/* Formatted on 4/26/2023 4:39:58 PM (QP5 v5.362) */
CREATE OR REPLACE PACKAGE BODY APPS."XXDOINV_PITEM_PKG1"
IS
    /***************************************************************************
    Package Name (Latest): APPS.XXDOINV_PITEM_PKG1
    Description: This package is used for Integration of following

    a.  Item Description Messages of
        1. Style  => Creation, Modification
        2. Sku    => Creation, Modification
        3. Upc    => Creation, Modification

         with RMS using WebService call including the   Vertex tax logic
    b. Item Location Messages of
        1. Style
                a. Store     => Creation, Modification
                b. Warehouse => Creation, Modification
        2. Sku
                a. Store     => Creation, Modification
                b. Warehouse => Creation, Modification

                Creation on 2/24/2012
                Created by : Sunera Technologies
     c. Modified the Item Loc with the following
        1. Region if it is not available , also to verify at the Pricelists
        2. Update only when Description  / Status/ Region is changed

                Updated on 4-MAR-2012
                Updaet BY: Naga Pratap  Vikranth
     1)  Integration of Hongkong Region, Sanuk Brand Integratation and transmission of Store w.r.t. to Brands
     2) Redesigned Item Loc Integration Program to Improve the Performance of the Interfaces.
     3) Addition of UK3 Region.
      --------------------------------------------------------
      Changes made Vishal on 08-NOV-2012 in all procedures
      to pick even non active status items
      -------------------------------------------------------

       -------------------------------------------------------
      Changes made Reddeiah on 26 -May-2014 in all procedures
      to exclude sample items  --DFCT0010916
      -------------------------------------------------------
    /**********************************************************************************
    * History      :                                                                  *
    *                                                                                 *
    * WHO                  Version  When         Desc                                 *
    * ------------------------------------------------------------------------------- *
    * BT Technology Team   1.2      08-OCT-2015  Modified for Defect 3059             *
    * BT Technology Team   1.3      27-OCT-2015  Modified for removing price list     *
    *                                            tables                               *
    * BT Technology Team   1.4                   Price defect # 546                   *
    * BT Technology Team   1.5                   Defect 546                           *
    * BT Technology Team   2.0      17-FEB-2016  Replaced 'PROD' instance to 'EBSPROD'*
    *                                            wherever applicable                  *
    * Kranthi Bollam       2.1      22-JUN-2016  For CCR0004924 -Issue with Label     *
                                                 Printing for Kids Shoes for APAC     *
    * Infosys              3.0      30-AUG-2016  Performance Fix'                     *
    * Kranthi Bollam       3.1      20-SEP-2016  Added decode to subdivision UDA in   *
                                                ITEMSKU cursor in SKU publishing      *
                                                procedure(Send UDA tag if subdivision *
                                                exists for the SKU)                   *
    * Infosys              3.2      15-NOV-2016  Added for CCR0005159 - Style ID
             collision with existing SKU Ids      *
    **********************************************************************************/

    /*********************************************************************
    Procedure for sending Item Location for Style Creation or Updation
    **************************************************************************/
    v_def_mail_recips   apps.do_mail_utils.tbl_recips;
    l_total_recs        NUMBER;
    l_total_err_recs    NUMBER;
    l_ret_val           NUMBER := 0;
    l_primary_email     VARCHAR2 (200);
    v_out_line          VARCHAR2 (1000);
    l_counter           NUMBER := 0;

    FUNCTION get_email_recips (v_lookup_type VARCHAR2)
        RETURN apps.do_mail_utils.tbl_recips
    IS
        v_def_mail_recips   do_mail_utils.tbl_recips;

        CURSOR c_recips IS
            SELECT lookup_code, meaning, description
              FROM apps.fnd_lookup_values
             WHERE     lookup_type = v_lookup_type
                   AND enabled_flag = 'Y'
                   AND LANGUAGE = USERENV ('LANG')
                   AND SYSDATE BETWEEN TRUNC (
                                           NVL (start_date_active, SYSDATE))
                                   AND TRUNC (
                                           NVL (end_date_active, SYSDATE) + 1);
    BEGIN
        v_def_mail_recips.DELETE;

        FOR c_recip IN c_recips
        LOOP
            v_def_mail_recips (v_def_mail_recips.COUNT + 1)   :=
                c_recip.meaning;
        END LOOP;

        RETURN v_def_mail_recips;
    END;

    PROCEDURE send_email_tax_uda_proc
    IS
        CURSOR c_error_recs IS
            SELECT servicetype, item_type, operation,
                   inventory_item_id, organization_id, style,
                   color, sze, item_status,
                   vertex_tax, status_flag, processed_flag,
                   transmission_date, errorcode
              FROM xxdoinv006g_int
             WHERE     status_flag = 'VE'
                   AND parent_request_id = fnd_global.conc_request_id;
    BEGIN
        --   update xxdoinv006_int
        --          set style_status_flag = 'VE'
        --            where  parent_request_id = fnd_global.conc_request_id and rownum < 10;
        --
        --            commit;

        -- raise_application_error (-20002,'An error has occurred inserting an order.');

        -- No.of records processed
        fnd_file.put_line (
            fnd_file.LOG,
            '*** In TAX UDA Email program parent_request_id =' || fnd_global.conc_request_id);

        SELECT COUNT (*)
          INTO l_total_recs
          FROM xxdoinv006g_int
         WHERE 1 = 1 AND parent_request_id = fnd_global.conc_request_id;

        -- No.of Error records
        SELECT COUNT (*)
          INTO l_total_err_recs
          FROM xxdoinv006g_int
         WHERE     status_flag = 'VE'
               AND parent_request_id = fnd_global.conc_request_id;

        v_def_mail_recips   := get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
        apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration TAX UDA Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                             , l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Content-Type: multipart/mixed; boundary=boundarystring',
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
        apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                           l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);

        BEGIN
            SELECT meaning
              INTO l_primary_email
              FROM fnd_lookup_values_vl
             WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (apps.fnd_file.LOG,
                                        'Too many primary email addresses.');
        END;

        apps.do_mail_utils.send_mail_line (
               'Item Integration - TAX UDA Program is completed Successfully. Request ID='
            || fnd_global.conc_request_id,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of records processed = ' || l_total_recs,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of errored records = ' || l_total_err_recs,
            l_ret_val);

        IF l_total_err_recs > 0
        THEN
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'See attachment for report details.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/xls',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Disposition: attachment; filename="Item Integration TAX UDA.xls"',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                   'SERVICETYPE'
                || CHR (9)
                || 'ITEM_TYPE'
                || CHR (9)
                || 'OPERATION'
                || CHR (9)
                || 'INVENTORY_ITEM_ID'
                || CHR (9)
                || 'ORGANIZATION_ID'
                || CHR (9)
                || 'STYLE'
                || CHR (9)
                || 'COLOR'
                || CHR (9)
                || 'SIZE'
                || CHR (9)
                || 'ITEM_STATUS'
                || CHR (9)
                || 'VERTEX_TAX'
                || CHR (9)
                || 'STATUS_FLAG'
                || CHR (9)
                || 'PROCESSED_FLAG'
                || CHR (9)
                || 'TRANSMISSION_DATE'
                || CHR (9)
                || 'ERRORCODE'
                || CHR (9),
                l_ret_val);

            FOR rec IN c_error_recs
            LOOP
                v_out_line   := NULL;
                v_out_line   :=
                       rec.servicetype
                    || CHR (9)
                    || rec.operation
                    || CHR (9)
                    || rec.inventory_item_id
                    || CHR (9)
                    || rec.organization_id
                    || CHR (9)
                    || rec.style
                    || CHR (9)
                    || rec.color
                    || CHR (9)
                    || rec.sze
                    || CHR (9)
                    || rec.item_status
                    || CHR (9)
                    || rec.vertex_tax
                    || CHR (9)
                    || rec.status_flag
                    || CHR (9)
                    || rec.processed_flag
                    || CHR (9)
                    || rec.transmission_date
                    || CHR (9)
                    || rec.errorcode
                    || CHR (9);
                apps.do_mail_utils.send_mail_line (v_out_line, l_ret_val);
                l_counter    := l_counter + 1;
            END LOOP;
        END IF;

        apps.do_mail_utils.send_mail_close (l_ret_val);
    END send_email_tax_uda_proc;

    PROCEDURE send_email_proc (p_program_name VARCHAR2)
    IS
        CURSOR c_error_recs IS
            SELECT item_type, operation, organization_id,
                   style, color, sze,
                   item_status, item_description, scale_code_id,
                   department, CLASS, subclass,
                   style_status_flag, sku_status_flag, processed_flag,
                   transmission_date, errorcode, upc_value,
                   upc_status_flag
              FROM xxdoinv006_int
             WHERE     style_status_flag = 'VE'
                   AND parent_request_id = fnd_global.conc_request_id;
    BEGIN
        -- No.of records processed
        SELECT COUNT (*)
          INTO l_total_recs
          FROM xxdoinv006_int
         WHERE 1 = 1 AND parent_request_id = fnd_global.conc_request_id;

        -- No.of Error records
        SELECT COUNT (*)
          INTO l_total_err_recs
          FROM xxdoinv006_int
         WHERE     style_status_flag = 'VE'
               AND parent_request_id = fnd_global.conc_request_id;

        v_def_mail_recips   := get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
        apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, p_program_name || ' - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                             , l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Content-Type: multipart/mixed; boundary=boundarystring',
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
        apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                           l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);

        BEGIN
            SELECT meaning
              INTO l_primary_email
              FROM fnd_lookup_values_vl
             WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (apps.fnd_file.LOG,
                                        'Too many primary email addresses.');
        END;

        apps.do_mail_utils.send_mail_line (
               p_program_name
            || ' is completed Successfully. Request ID='
            || fnd_global.conc_request_id,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of records processed = ' || l_total_recs,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of errored records = ' || l_total_err_recs,
            l_ret_val);

        IF l_total_err_recs > 0
        THEN
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'See attachment for report details.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/xls',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line (
                   'Content-Disposition: attachment; filename=" '
                || p_program_name
                || '.xls"',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                   'ITEM_TYPE'
                || CHR (9)
                || 'OPERATION'
                || CHR (9)
                || 'ORGANIZATION_ID'
                || CHR (9)
                || 'STYLE'
                || CHR (9)
                || 'COLOR'
                || CHR (9)
                || 'SIZE'
                || CHR (9)
                || 'ITEM_STATUS'
                || CHR (9)
                || 'SCALE_CODE_ID'
                || CHR (9)
                || 'DEPARTMENT'
                || CHR (9)
                || 'CLASS'
                || CHR (9)
                || 'SUBCLASS'
                || CHR (9)
                || 'STYLE_STATUS_FLAG'
                || CHR (9)
                || 'SKU_STATUS_FLAG'
                || CHR (9)
                || 'PROCESSED_FLAG'
                || CHR (9)
                || 'TRANSMISSION_DATE'
                || CHR (9)
                || 'ERRORCODE'
                || CHR (9)
                || 'UPC_VALUE'
                || CHR (9)
                || 'UPC_STATUS_FLAG'
                || CHR (9),
                l_ret_val);

            FOR rec IN c_error_recs
            LOOP
                v_out_line   := NULL;
                v_out_line   :=
                       rec.item_type
                    || CHR (9)
                    || rec.operation
                    || CHR (9)
                    || rec.organization_id
                    || CHR (9)
                    || rec.style
                    || CHR (9)
                    || rec.color
                    || CHR (9)
                    || rec.sze
                    || CHR (9)
                    || rec.item_status
                    || CHR (9)
                    || rec.scale_code_id
                    || CHR (9)
                    || rec.department
                    || CHR (9)
                    || rec.CLASS
                    || CHR (9)
                    || rec.subclass
                    || CHR (9)
                    || rec.style_status_flag
                    || CHR (9)
                    || rec.sku_status_flag
                    || CHR (9)
                    || rec.processed_flag
                    || CHR (9)
                    || rec.transmission_date
                    || CHR (9)
                    || rec.errorcode
                    || CHR (9)
                    || rec.upc_value
                    || CHR (9)
                    || rec.upc_status_flag
                    || CHR (9);
                apps.do_mail_utils.send_mail_line (v_out_line, l_ret_val);
                l_counter    := l_counter + 1;
            END LOOP;
        END IF;

        apps.do_mail_utils.send_mail_close (l_ret_val);
    END send_email_proc;

    FUNCTION get_updatecat_f (pv_rundate   VARCHAR2,
                              pn_item_id   NUMBER,
                              pn_org_id    NUMBER)
        RETURN VARCHAR2
    IS
        lv_number    NUMBER (10) := NULL;
        lv_sysdate   VARCHAR2 (20);
    BEGIN
        IF pv_rundate IS NULL
        THEN
            BEGIN
                lv_number   := NULL;

                SELECT COUNT (1)
                  INTO lv_number
                  FROM mtl_system_items msib, mtl_item_categories mic, mtl_categories mc,
                       mtl_category_sets mcs
                 WHERE     msib.inventory_item_id = mic.inventory_item_id
                       AND msib.organization_id = mic.organization_id
                       AND mic.category_id = mc.category_id
                       AND mc.structure_id = mcs.structure_id
                       --AND mic.organization_id = 7                                                    -- commented by BT Tech team
                       AND mic.organization_id =
                           (SELECT ood.organization_id
                              -- added by BT Tech team - START
                              FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                       -- added by BT Tech team - END
                       AND mcs.category_set_name IN
                               ('Inventory', 'Tax Class')
                       AND msib.inventory_item_id = pn_item_id
                       AND msib.organization_id = pn_org_id
                       AND (TRUNC (mic.last_update_date) = TRUNC (SYSDATE) OR TRUNC (mc.last_update_date) = TRUNC (SYSDATE));

                IF lv_number > 0
                THEN
                    RETURN 'Y';
                ELSE
                    RETURN 'N';
                END IF;
            EXCEPTION
                WHEN OTHERS
                THEN
                    RETURN 'N';
            END;
        ELSE
            BEGIN
                lv_number   := NULL;

                SELECT COUNT (1)
                  INTO lv_number
                  FROM mtl_system_items msib, mtl_item_categories mic, mtl_categories mc,
                       mtl_category_sets mcs
                 WHERE     msib.inventory_item_id = mic.inventory_item_id
                       AND msib.organization_id = mic.organization_id
                       AND mic.category_id = mc.category_id
                       AND mc.structure_id = mcs.structure_id
                       --AND mic.organization_id = 7                                                    -- commented by BT Tech team
                       AND mic.organization_id =
                           (SELECT ood.organization_id
                              -- added by BT Tech team - START
                              FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                       -- added by BT Tech team - END
                       AND mcs.category_set_name IN
                               ('Inventory', 'Tax Class')
                       AND msib.inventory_item_id = pn_item_id
                       AND msib.organization_id = pn_org_id
                       AND (TRUNC (fnd_date.canonical_to_date (mic.last_update_date)) = TRUNC (fnd_date.canonical_to_date (pv_rundate)) OR TRUNC (fnd_date.canonical_to_date (mc.last_update_date)) = TRUNC (fnd_date.canonical_to_date (pv_rundate)));

                IF lv_number > 0
                THEN
                    RETURN 'Y';
                ELSE
                    RETURN 'N';
                END IF;
            EXCEPTION
                WHEN OTHERS
                THEN
                    RETURN 'N';
            END;
        END IF;
    END;

    FUNCTION xxdo_get_price_list (p_region VARCHAR2)
        RETURN NUMBER
    IS
        l_price_list_id   NUMBER;
        l_unit_price      NUMBER;
    BEGIN
        SELECT tag
          INTO l_price_list_id
          FROM apps.fnd_lookup_values_vl lkup
         WHERE     lookup_type = 'XXDOINV_PRICE_LIST_NAME'
               AND lookup_code = p_region
               AND enabled_flag = 'Y'
               AND ROWNUM = 1;

        RETURN l_price_list_id;
    EXCEPTION
        WHEN OTHERS
        THEN
            RETURN 0.01;
    END;

    FUNCTION xxdo_get_japan_price (p_flag    NUMBER,
                                   p_style   VARCHAR2,
                                   p_item    VARCHAR2)
        RETURN VARCHAR2
    IS
        lv_reg_val   VARCHAR2 (100) := NULL;
    BEGIN
        IF p_flag = 1
        THEN
            SELECT 'JP'
              INTO lv_reg_val
              FROM qp_pricing_attributes qpa, qp_list_lines qll, qp_list_headers qlh,
                   mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   --mtl_system_items_b msib
                   apps.xxd_common_items_v msib
             WHERE     qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                   AND qpa.product_attr_value = mc.category_id
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND msib.organization_id = 7                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qpa.product_attribute_context = 'ITEM'
                   AND qlh.NAME = 'Japan Retail Replenishment JPY'
                   --AND mcs.category_set_name = 'Styles'                                                -- commented by BT Tech team
                   AND mcs.category_set_name = 'OM Sales Category'
                   -- added by BT Tech team
                   --AND msib.segment1 = p_style                                                         -- commented by BT Tech team
                   AND msib.style_number = p_style    -- added by BT Tech team
                   AND ROWNUM <= 1;
        ELSIF p_flag = 2
        THEN
            SELECT 'JP'
              INTO lv_reg_val
              FROM qp_pricing_attributes qpa, qp_list_lines qll, qp_list_headers qlh,
                   mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   --mtl_system_items_b msib
                   apps.xxd_common_items_v msib
             WHERE     qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                   AND qpa.product_attr_value = mc.category_id
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND msib.organization_id = 7                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qpa.product_attribute_context = 'ITEM'
                   AND qlh.NAME = 'Japan Retail Replenishment JPY'
                   --AND mcs.category_set_name = 'Styles'                                                -- commented by BT Tech team
                   AND mcs.category_set_name = 'OM Sales Category'
                   -- added by BT Tech team
                   AND msib.inventory_item_id = p_item
                   AND ROWNUM <= 1;
        END IF;

        RETURN lv_reg_val;
    EXCEPTION
        WHEN OTHERS
        THEN
            RETURN NULL;
    END;

    PROCEDURE publish_itemloc_p (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                 , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    IS
        lv_wsdl_ip          VARCHAR2 (25);
        lv_wsdl_url         VARCHAR2 (4000);
        lv_namespace        VARCHAR2 (4000);
        lv_service          VARCHAR2 (4000);
        lv_port             VARCHAR2 (4000);
        lv_operation        VARCHAR2 (4000);
        lv_targetname       VARCHAR2 (4000);
        lx_xmltype_in       SYS.XMLTYPE;
        lx_xmltype_out      SYS.XMLTYPE;
        lc_return           CLOB;
        lv_region_us        VARCHAR2 (10) := 'US';
        lv_region_ca        VARCHAR2 (10);
        lv_region_cn        VARCHAR2 (10);
        lv_region_jp        VARCHAR2 (10);
        lv_region_uk        VARCHAR2 (10);
        lv_region_fr        VARCHAR2 (10);
        lv_region_hk        VARCHAR2 (10);
        lv_concept          VARCHAR2 (30);
        lv_brand            VARCHAR2 (100);
        lv_reg_val          VARCHAR2 (10);
        lv_itemlocmdflag    VARCHAR2 (1) := 'N';
        ln_itemstylecount   NUMBER;
        lv_op_mode          VARCHAR2 (60);
        lv_errmsg           VARCHAR2 (240);
        lv_style_status     VARCHAR2 (10);
        lv_counter          NUMBER := 0;

        CURSOR c_itemlocstyle IS
              --SELECT msib.segment1, msib.description, 'A' status,  msib.organization_id                                        -- commented by BT Tech team
              SELECT msib.style_number segment1, msib.item_description description, 'A' status,
                     msib.organization_id             -- added by BT Tech team
                FROM apps.qp_pricing_attributes qpa, apps.qp_list_lines qll, apps.qp_list_headers qlh,
                     apps.mtl_categories_b mc, apps.mtl_item_categories mic, --apps.mtl_system_items_b msib,                                                                            -- commented by BT Tech team
                                                                             apps.xxd_common_items_v msib, -- added by BT Tech team
                     apps.mtl_item_categories mic1, apps.mtl_categories mc1
               WHERE     qpa.list_line_id = qll.list_line_id
                     AND qll.list_header_id = qlh.list_header_id
                     AND mic.inventory_item_id = msib.inventory_item_id
                     AND mic.organization_id = msib.organization_id
                     AND mc.structure_id =
                         (SELECT structure_id
                            FROM mtl_category_sets
                           --WHERE category_set_name = 'Styles')                                                        -- commented by BT Tech team
                           WHERE category_set_name = 'OM Sales Category')
                     -- added by BT Tech team
                     AND qpa.product_attr_value = mc.category_id
                     AND mic.category_id = mc.category_id
                     --AND msib.organization_id = 7                                                                                    -- commented by BT Tech team
                     AND msib.organization_id =
                         (SELECT ood.organization_id
                            -- added by BT Tech team - START
                            FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                           WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                 AND lookup_code = 7
                                 AND flv.attribute1 = ood.organization_code
                                 AND LANGUAGE = USERENV ('LANG'))
                     -- added by BT Tech team - END
                     AND msib.inventory_item_id = mic1.inventory_item_id
                     AND msib.organization_id = mic1.organization_id
                     AND mic1.category_id = mc1.category_id
                     --AND mc1.structure_id = 101                                                                                        -- commented by BT Tech team
                     AND mc1.structure_id =
                         (SELECT structure_id
                            FROM mtl_category_sets
                           WHERE category_set_name = 'Inventory')
                     -- added by BT Tech team
                     --AND mc1.segment4 <> 'SAMPLE'      --Commented by BT Technology Team V1.1 08Mar2015
                     AND msib.item_type NOT IN
                             ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                     --AND mic1.organization_id = 7                                                                                    -- commented by BT Tech team
                     AND mic1.organization_id =
                         (SELECT ood.organization_id
                            -- added by BT Tech team - START
                            FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                           WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                 AND lookup_code = 7
                                 AND flv.attribute1 = ood.organization_code
                                 AND LANGUAGE = USERENV ('LANG'))
                     -- added by BT Tech team - END
                     AND qpa.product_attribute_context = 'ITEM'
                     AND qlh.NAME = 'Retail - US'
                     AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                     AND (TRUNC (msib.last_update_date) = NVL (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'), TRUNC (SYSDATE)) OR TRUNC (qll.creation_date) = NVL (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'), TRUNC (SYSDATE)))
                     --AND msib.segment3 <> 'ALL'                                                                                        -- commented by BT Tech team
                     AND msib.item_type <> 'GENERIC'  -- added by BT Tech team
                     --AND msib.attribute11 IS NOT NULL                                                                                -- commented by BT Tech team
                     AND msib.upc_code IS NOT NULL    -- added by BT Tech team
                     --AND msib.attribute13 IS NOT NULL                                                                                -- commented by BT Tech team
                     AND msib.size_scale_id IS NOT NULL -- aded by BT Tech team
                     AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                        msib.organization_id)
                             IS NOT NULL
                     AND EXISTS
                             (SELECT 1
                                --FROM rms13prod.item_master@rmsprod                                                                -- commented by BT Tech team
                                FROM item_master@xxdo_retail_rms
                               -- added by BT Tech team
                               --WHERE item_level = 1 AND item = msib.segment1)                                                        -- commented by BT Tech team
                               WHERE     item_level = 1
                                     AND item = msib.style_number)
            -- added by BT Tech team
            --GROUP BY msib.segment1, msib.description, msib.organization_id;                                                        -- commented by BT Tech team
            GROUP BY msib.style_number, msib.item_description, msib.organization_id; -- added by BT Tech team

        CURSOR c_itemloc_style_s (pv_segment1 VARCHAR2, pn_orgnid NUMBER, pv_brand VARCHAR2, pv_region1 VARCHAR2, pv_region2 VARCHAR2, pv_region3 VARCHAR2, pv_region4 VARCHAR2, pv_region5 VARCHAR2, pv_region6 VARCHAR2
                                  , pv_region7 VARCHAR2)
        IS
            SELECT (SELECT XMLAGG (
                               XMLELEMENT (
                                   "v1:XItemLocDesc",
                                   --XMLELEMENT ("v1:item", msib.segment1),                                                        -- commented by BT Tech team
                                   XMLELEMENT ("v1:item", msib.style_number),
                                   -- added by BT Tech team
                                   XMLELEMENT ("v1:hier_level", 'S'),
                                   (SELECT XMLAGG (XMLELEMENT (
                                                       "v1:XItemLocDtl",
                                                       --XMLELEMENT ("v1:hier_value", rms_store_id ),                                    -- commented by BT Tech team
                                                       XMLELEMENT (
                                                           "v1:hier_value",
                                                           lookup_code),
                                                       -- added by BT Tech team
                                                       XMLELEMENT (
                                                           "v1:primary_supp",
                                                           xxdoinv006_pkg.get_vendor_id_f --  (region)                                                -- commented by BT Tech team
                                                                                          (
                                                               attribute3)-- added by BT Tech team
                                                                          ),
                                                       XMLELEMENT (
                                                           "v1:primary_cntry",
                                                           --DECODE (region,'UK', 'GB',region )                                    -- commented by BT Tech team
                                                           DECODE (
                                                               attribute3,
                                                               'UK', 'GB',
                                                               attribute3)-- added by BT Tech team
                                                                          ),
                                                       XMLELEMENT (
                                                           "v1:local_item_desc",
                                                           --msib.description                                                        -- commented by BT Tech team
                                                           msib.item_description-- added by BT Tech team
                                                                                ),
                                                       XMLELEMENT (
                                                           "v1:status",
                                                           'A'),
                                                       --xxdoinv006_pkg.get_item_status(msib.segment1,msib.inventory_item_id,msib.organization_id)),
                                                       XMLELEMENT (
                                                           "v1:store_ord_mult",
                                                           'E'),
                                                       XMLELEMENT (
                                                           "v1:receive_as_type",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:taxable_ind",
                                                           NULL),
                                                       XMLELEMENT ("v1:ti",
                                                                   NULL),
                                                       XMLELEMENT ("v1:hi",
                                                                   NULL),
                                                       XMLELEMENT (
                                                           "v1:daily_waste_pct",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:local_short_desc",
                                                           --msib.description                                                        -- commented by BT Tech team
                                                           msib.item_description-- added by BT Tech team
                                                                                ),
                                                       XMLELEMENT (
                                                           "v1:uin_type",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:uin_label",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:capture_time",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:ext_uin_ind",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:source_method",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:source_wh",
                                                           NULL))
                                                   --ORDER BY region,    store_number                                            -- commented by BT Tech team
                                                   ORDER BY attribute3, lookup_code-- added by BT Tech team
                                                                                   )
                                      /*FROM stores@do_retail_datamart
                                     WHERE rms_store_id IS NOT NULL
                                       AND brand IN ('ALL', pv_brand) */
                                      FROM apps.fnd_lookup_values
                                     -- added by BT Tech team - START
                                     WHERE     lookup_type =
                                               'XXD_RETAIL_STORES'
                                           AND enabled_flag = 'Y'
                                           AND LANGUAGE = 'US'
                                           AND lookup_code IS NOT NULL
                                           AND attribute9 IN
                                                   ('GENERIC', pv_brand)
                                           -- added by BT Tech team - END
                                           --and  upper(store_type) in decode(XXDOINV006_PKG.GET_BRAND_F(msib.segment1,NULL,msib.ORGANIZATION_ID),'UGG',upper(store_type),'OUTLET')
                                           --AND region IN                                                                            -- commented by BT Tech team
                                           AND attribute3 IN -- added by BT Tech team
                                                             (pv_region1, pv_region2, pv_region3,
                                                              pv_region4, pv_region5, pv_region6,
                                                              pv_region7) --added by naga
                                                                         --             and (region in ( PV_REGION1 ) OR REGION IN ( PV_REGION2) OR region in ( PV_REGION3 ) OR REGION IN ( PV_REGION4) OR REGION IN
                                                                         --(PV_REGION5) OR REGION IN ( PV_REGION6) OR REGION IN ( PV_REGION7) )--commented by naga
                                                                         ))) xml
                      --FROM mtl_system_items_b msib                                                                            -- commented by BT Tech team
                      --WHERE msib.segment1 = pv_segment1                                                                        -- commented by BT Tech team
                      FROM xxd_common_items_v msib    -- added by BT Tech team
                     WHERE     msib.style_number = pv_segment1
                           -- added by BT Tech team
                           --msi.segment1--added by naga
                           AND msib.organization_id = pn_orgnid --msi.organization_id
                           AND ROWNUM = 1) itemloc
              FROM DUAL;

        CURSOR c_itemloc_style_wh (pv_segment1 VARCHAR2, pn_orgnid NUMBER, pv_region1 VARCHAR2, pv_region2 VARCHAR2, pv_region3 VARCHAR2, pv_region4 VARCHAR2
                                   , pv_region5 VARCHAR2, pv_region6 VARCHAR2, pv_region7 VARCHAR2)
        IS
            SELECT (SELECT XMLAGG (
                               XMLELEMENT (
                                   "v1:XItemLocDesc",
                                   --     XMLELEMENT ("v1:item", msib.segment1),                                                -- commented by BT Tech team on 05/12/2014
                                   XMLELEMENT ("v1:item", msib.style_number),
                                   --Added by BT Technology Team on 05/12/2014
                                   XMLELEMENT ("v1:hier_level", 'W'),
                                   (SELECT XMLAGG (XMLELEMENT (
                                                       "v1:XItemLocDtl",
                                                       XMLELEMENT (
                                                           "v1:hier_value",
                                                           lookup_code),
                                                       XMLELEMENT (
                                                           "v1:primary_supp",
                                                           xxdoinv006_pkg.get_vendor_id_f (
                                                               DECODE (
                                                                   description,
                                                                   'CA', 'US',
                                                                   description))),
                                                       XMLELEMENT (
                                                           "v1:primary_cntry",
                                                           DECODE (
                                                               description,
                                                               'UK', 'GB',
                                                               'CA', 'US',
                                                               description)),
                                                       XMLELEMENT (
                                                           "v1:local_item_desc",
                                                           --   msib.description                                         --commented by BT Technology team on 05/12/2014
                                                           msib.item_description--added by BT Technoloy Team on 05/12/2014
                                                                                ),
                                                       XMLELEMENT (
                                                           "v1:status",
                                                           'A'),
                                                       --xxdoinv006_pkg.get_item_status(msib.segment1,msib.inventory_item_id,msib.organization_id)),
                                                       XMLELEMENT (
                                                           "v1:store_ord_mult",
                                                           'E'),
                                                       XMLELEMENT (
                                                           "v1:receive_as_type",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:taxable_ind",
                                                           NULL),
                                                       XMLELEMENT ("v1:ti",
                                                                   NULL),
                                                       XMLELEMENT ("v1:hi",
                                                                   NULL),
                                                       XMLELEMENT (
                                                           "v1:daily_waste_pct",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:local_short_desc",
                                                           --   msib.description                                  --commented by BT Technology team on 05/12/2014
                                                           msib.item_description--added by BT Technoloy Team on 05/12/2014
                                                                                ),
                                                       XMLELEMENT (
                                                           "v1:uin_type",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:uin_label",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:capture_time",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:ext_uin_ind",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:source_method",
                                                           NULL),
                                                       XMLELEMENT (
                                                           "v1:source_wh",
                                                           NULL))
                                                   ORDER BY description, lookup_code)
                                      FROM apps.fnd_lookup_values
                                     WHERE     lookup_type = 'XXDOINV007_WH'
                                           AND enabled_flag = 'Y'
                                           AND LANGUAGE = 'US'
                                           AND (description IN (pv_region1) OR description IN (pv_region2) OR description IN (pv_region3) OR description IN (pv_region4) OR description IN (pv_region5) OR description IN (pv_region6) OR description IN (pv_region7))))) xml
                      --  FROM mtl_system_items_b msib
                      --   WHERE msib.segment1 = pv_segment1                                     --commented by BT Technology Team on 05/12/2014
                      FROM xxd_common_items_v msib
                     WHERE     msib.style_number = pv_segment1
                           --Added by BT Technology Team on 05/12/2014
                           --msi.segment1  added by naga
                           AND msib.organization_id = pn_orgnid --msi.organization_id
                           AND ROWNUM = 1) itemloc
              FROM DUAL;

        CURSOR c_itemlocpublish (pv_segment1 VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv007_int
             WHERE     status_flag = 'N'
                   AND item_type = 'STYLE'
                   AND (style_value) = (pv_segment1);          --added by naga

        CURSOR c_itemlocrepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv007_int
             WHERE     status_flag IN ('VE', 'P')
                   AND item_type = 'STYLE'
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));

        CURSOR c_item_status (p_item     VARCHAR2,
                              p_org_id   NUMBER,
                              p_sw       VARCHAR2)
        IS
              SELECT item_description, item_status, UPPER (TRIM (region))
                FROM xxdoinv007_int
               WHERE     (style_value) = (p_item)
                     AND organization_id = p_org_id
                     AND processed_flag = 'Y'
                     AND item_type = 'STYLE'
                     AND store_warehouse = p_sw                          --'S'
                     AND status_flag = 'P'
            --                    AND ROWNUM=1
            ORDER BY transmission_date DESC;

        CURSOR c_get_reg_val (p_name VARCHAR2, p_segment VARCHAR2)
        IS
            SELECT 1   AS price
              FROM qp_pricing_attributes qpa, qp_list_lines qll, qp_list_headers qlh,
                   --mtl_system_items_b msib                                                            -- commented by BT Tech team
                   xxd_common_items_v msib            -- added by BT Tech team
             WHERE     qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --AND msib.organization_id = 7                                                            -- commented by BT Tech team
                   AND msib.organization_id IN
                           (SELECT ood.organization_id -- added by BT Tech team - START
                              FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qpa.product_attribute_context = 'ITEM'
                   AND qlh.NAME = p_name
                   --AND (msib.segment1) = p_segment                                                        -- commented by BT Tech team
                   AND (msib.style_number) = p_segment -- added by BT Tech team
                   AND ROWNUM <= 1;

        CURSOR c_get_priclist IS
            SELECT meaning, lookup_code
              FROM apps.fnd_lookup_values_vl lkup
             WHERE     lookup_type = 'XXDOINV_PRICE_LIST_NAME'
                   AND enabled_flag = 'Y';

        lv_description      VARCHAR2 (240);
        lv_itemstatus       VARCHAR2 (10);
        lv_region1          VARCHAR2 (20);
        lv_price_flag       NUMBER := 0;
        lv_jp_price         VARCHAR2 (10) := NULL;
    BEGIN
        /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
        BEGIN
            SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                     --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                     'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                              apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
              INTO lv_wsdl_ip
              FROM apps.fnd_product_groups;
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Unable to fetch the File server name');
                pv_retcode   := 2;
        END;

        /* Initializing the Item loc web service variables */
        lv_wsdl_url    :=
               'http://'
            || lv_wsdl_ip
            || '/XItemLocPublishingBean/XItemLocPublishingService?WSDL';
        lv_namespace   :=
            'http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1';
        lv_service     := 'XItemLocPublishingService';
        lv_port        := 'XItemLocPublishingPort';
        lv_operation   := 'publishXItemLocCreateUsingXItemLocDesc';
        lv_targetname   :=
               'http://'
            || lv_wsdl_ip
            || '/XItemLocPublishingBean/XItemLocPublishingService';

        /* If it is Reprocess */
        IF pv_reprocess = 'Y'
        THEN
            /* Retreive the data from the Staging table based on the dates */
            FOR rec_reprocess IN c_itemlocrepublish (pv_fromdate, pv_todate)
            LOOP
                SELECT xxdoinv006_pkg.get_brand_f (rec_reprocess.style_value, NULL, rec_reprocess.organization_id)
                  INTO lv_brand
                  FROM DUAL;

                /* Verifying whether the Item Exists in the Canada Retail and setting the Region Flag */
                lv_reg_val     := NULL;
                lv_region_ca   := NULL;

                FOR pricelist_rec IN c_get_priclist
                LOOP
                    lv_price_flag   := 0;

                    FOR price_rec
                        IN c_get_reg_val (pricelist_rec.meaning,
                                          rec_reprocess.style_value)
                    LOOP
                        lv_price_flag   := price_rec.price;
                    END LOOP;

                    IF pricelist_rec.lookup_code = 'UK'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_uk   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_uk   := 'UK';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'FR'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_fr   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_fr   := 'FR';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'JP'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_jp_price   :=
                                xxdo_get_japan_price (
                                    1,
                                    rec_reprocess.style_value,
                                    NULL);

                            IF lv_jp_price IS NULL
                            THEN
                                lv_region_jp   := NULL;
                            ELSE
                                lv_region_jp   := 'JP';
                            END IF;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_jp   := 'JP';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'CA'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_ca   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_ca   := 'CA';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'CN'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_cn   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_cn   := 'CN';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'HK'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_hk   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_hk   := 'HK';
                        END IF;
                    END IF;
                END LOOP;

                lv_region_us   := 'US';

                /* *************************************************************
                Verifying whether Style already exists and setting for Reprocess of Style Store Item Loc
                **********************************************************************/
                IF rec_reprocess.operation = 'ITEMLOC_UPDATE'
                THEN
                    lv_op_mode   := 'ITEMLOC_UPDATE';
                    lv_operation   :=
                        'publishXItemLocModifyUsingXItemLocDesc';

                    /* Modify only when description / status/ Region changes */
                    BEGIN
                        lv_description   := NULL;
                        lv_itemstatus    := NULL;
                        lv_region1       := NULL;

                        SELECT item_description, item_status, region
                          INTO lv_description, lv_itemstatus, lv_region1
                          FROM xxdoinv007_int
                         WHERE     UPPER (TRIM (style_value)) =
                                   UPPER (TRIM (rec_reprocess.style_value))
                               AND organization_id =
                                   rec_reprocess.organization_id
                               AND processed_flag = 'Y'
                               AND item_type = 'STYLE'
                               AND status_flag = 'P'
                               AND store_warehouse = 'S'
                               AND ROWNUM = 1
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv007_int
                                     WHERE     UPPER (TRIM (style_value)) =
                                               UPPER (
                                                   TRIM (
                                                       rec_reprocess.style_value))
                                           AND organization_id =
                                               rec_reprocess.organization_id
                                           AND processed_flag = 'Y'
                                           AND store_warehouse = 'S'
                                           AND item_type = 'STYLE'
                                           AND status_flag = 'P');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Exception occured while retreiving the item description ');
                    END;

                    BEGIN
                        --    select XXDOINV006_PKG.GET_BRAND_F(REC_REPROCESS.STYLE_VALUE,NULL,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                        IF lv_brand <> 'UGG'
                        THEN
                            lv_region1     := 'US';
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    END;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_reprocess.item_status))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                    THEN
                        UPDATE xxdoinv007_int
                           SET status_flag = 'N', operation = 'ITEMLOC_UPDATE'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    ELSE
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'NR'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    END IF;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_reprocess.item_status))))
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';
                    END IF;
                ELSE
                    lv_op_mode   := 'ITEMLOC_CREATE';
                    lv_operation   :=
                        'publishXItemLocCreateUsingXItemLocDesc';
                END IF;

                /* Updating with the Operation Mode */
                UPDATE xxdoinv007_int
                   SET operation   = lv_op_mode
                 WHERE slno = rec_reprocess.slno AND store_warehouse = 'S';

                COMMIT;
                /* Begin the processing of Item Loc file the XML File FOR Store  */
                fnd_file.put_line (
                    fnd_file.output,
                    'Debug point 1:  Before processing the Itemloc Store Style  file loop ');

                /* Condition to verify the brand of  style */
                BEGIN
                    -- select XXDOINV006_PKG.GET_BRAND_F(REC_REPROCESS.STYLE_VALUE,NULL,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                    IF lv_brand = 'UGG'
                    THEN
                        lv_concept   := 'CONCEPT';
                    ELSE
                        lv_concept     := NULL;
                        lv_region_ca   := NULL;
                        lv_region_cn   := NULL;
                        lv_region_jp   := NULL;
                        lv_region_uk   := NULL;
                        lv_region_fr   := NULL;
                        lv_region_hk   := NULL;
                    END IF;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                            || SQLCODE
                            || SQLERRM);
                END;

                lv_region_us   := 'US';

                FOR i IN c_itemloc_style_s (rec_reprocess.style_value, rec_reprocess.organization_id, lv_brand, lv_region_us, lv_region_ca, lv_region_cn, lv_region_jp, lv_region_uk, lv_region_fr
                                            , lv_region_hk)
                LOOP
                    /*  Updating the data into staging table */
                    BEGIN
                        UPDATE xxdoinv007_int
                           SET xdata   = XMLTYPE.getclobval (i.itemloc)
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv007_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE     slno = rec_reprocess.slno
                                   AND store_warehouse = 'S';

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                    END;
                END LOOP;                           /* For Style with Store */

                /* *********************************
                 Verifying whether Style already exists for Reprocessing Item Loc Style Warehouse
                 *********************************************************/
                IF rec_reprocess.operation = 'ITEMLOC_UPDATE'
                THEN
                    lv_op_mode   := 'ITEMLOC_UPDATE';
                    lv_operation   :=
                        'publishXItemLocModifyUsingXItemLocDesc';

                    BEGIN
                        lv_description   := NULL;
                        lv_itemstatus    := NULL;
                        lv_region1       := NULL;

                        SELECT item_description, item_status, region
                          INTO lv_description, lv_itemstatus, lv_region1
                          FROM xxdoinv007_int
                         WHERE     UPPER (TRIM (style_value)) =
                                   UPPER (TRIM (rec_reprocess.style_value))
                               AND organization_id =
                                   rec_reprocess.organization_id
                               AND processed_flag = 'Y'
                               AND item_type = 'STYLE'
                               AND store_warehouse = 'WH'
                               AND status_flag = 'P'
                               AND ROWNUM = 1
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv007_int
                                     WHERE     UPPER (TRIM (style_value)) =
                                               UPPER (
                                                   TRIM (
                                                       rec_reprocess.style_value))
                                           AND organization_id =
                                               rec_reprocess.organization_id
                                           AND processed_flag = 'Y'
                                           AND item_type = 'STYLE'
                                           AND store_warehouse = 'WH'
                                           AND status_flag = 'P');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Exception occured while retrieing the item description ');
                    END;

                    BEGIN
                        -- select XXDOINV006_PKG.GET_BRAND_F(REC_REPROCESS.STYLE_VALUE,NULL,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                        IF lv_brand <> 'UGG'
                        THEN
                            lv_region1     := 'US';
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    END;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_reprocess.item_status))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                    THEN
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'N'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    ELSE
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'NR'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    END IF;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_reprocess.item_status))))
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';
                    END IF;

                    /*

                         IF (UPPER(TRIM(LV_REGION1)) != UPPER(TRIM(LV_REGION_US||' '||LV_REGION_UK||' '||LV_REGION_CA||' '||LV_REGION_CN||''||LV_REGION_JP)) ) THEN

                            LV_REGION_US:=NULL;

                            IF INSTR(UPPER(TRIM(LV_REGION1)),'CA') = 0 THEN
                                LV_REGION_CA:= 'CA';
                            ELSE
                                LV_REGION_CA:= NULL;
                            END IF;

                            IF INSTR(UPPER(TRIM(LV_REGION1)),'UK') = 0  THEN
                                LV_REGION_UK:='UK';
                            ELSE
                                LV_REGION_UK:=NULL;
                            END IF;

                            IF  INSTR(UPPER(TRIM(LV_REGION1)),'JP')= 0 THEN
                                LV_REGION_JP:='JP';
                            ELSE
                                LV_REGION_JP:=NULL;
                            END IF;

                            IF INSTR(UPPER(TRIM(LV_REGION1)),'CN') = 0 THEN
                                LV_REGION_CN:='CN';
                            ELSE
                                LV_REGION_CN:=NULL;
                            END IF;

                             LV_OP_MODE:='ITEMLOC_CREATE';
                             lv_operation  := 'publishXItemLocCreateUsingXItemLocDesc';
                         END IF;   */
                    UPDATE xxdoinv007_int
                       SET region = 'US' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk
                     WHERE     slno = rec_reprocess.slno
                           AND store_warehouse = 'WH';

                    COMMIT;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'The value of us region is ' || lv_region_us);
                ELSE
                    lv_op_mode   := 'ITEMLOC_CREATE';
                    lv_operation   :=
                        'publishXItemLocCreateUsingXItemLocDesc';
                END IF;

                /* Updating with the Operation Mode */
                UPDATE xxdoinv007_int
                   SET operation   = lv_op_mode
                 WHERE slno = rec_reprocess.slno AND store_warehouse = 'WH';

                COMMIT;
                /* Begin the processing of Item Loc file the XML File FOR Warehouse  */
                fnd_file.put_line (
                    fnd_file.output,
                    'Debug point 2:  Before processing the Itemloc Warehouse  file loop ');
                lv_region_us   := 'US';

                FOR k
                    IN c_itemloc_style_wh (rec_reprocess.style_value,
                                           rec_reprocess.organization_id,
                                           lv_region_us,
                                           lv_region_ca,
                                           lv_region_cn,
                                           lv_region_jp,
                                           lv_region_uk,
                                           lv_region_fr,
                                           lv_region_hk)
                LOOP
                    /*  Updating the data into staging table */
                    BEGIN
                        UPDATE xxdoinv007_int
                           SET xdata   = XMLTYPE.getclobval (k.itemloc)
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv007_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE     slno = rec_reprocess.slno
                                   AND store_warehouse = 'WH';

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                    END;
                END LOOP;                            /* for Style Warehouse */

                /* Publish Item Location */
                IF rec_reprocess.operation = 'ITEMLOC_CREATE'
                THEN
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemLocCreateUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">

'
                            || rec_reprocess.xdata
                            || '</publishXItemLocCreateUsingXItemLocDesc>');
                ELSE
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemLocModifyUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"


xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">'
                            || rec_reprocess.xdata
                            || '</publishXItemLocModifyUsingXItemLocDes

c>');
                END IF;

                /* Calling the webservice here */
                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);

                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        fnd_file.put_line (
                            fnd_file.output,
                            'Response is stored in the staging table  ');
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv007_int
                           SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                               transmission_date = SYSDATE
                         WHERE slno = rec_reprocess.slno;
                    ELSE
                        fnd_file.put_line (fnd_file.output,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv007_int
                           SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                         WHERE slno = rec_reprocess.slno;
                    END IF;

                    COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        /* Updating the existing record to validation error and storing the error code */
                        UPDATE xxdoinv007_int
                           SET status_flag = 'VE', errorcode = lv_errmsg
                         WHERE slno = rec_reprocess.slno;

                        COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM);
                END;                        /* End calling the webservice   */
            END LOOP;                                  /* For REPublish Loc */
        ELSE
            /* Starting the Items modified for today */
            FOR rec_itemloc IN c_itemlocstyle
            LOOP
                --  select XXDOINV006_PKG.GET_BRAND_F(REC_ITEMLOC.segment1,NULL,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;--commented by naga
                lv_brand     :=
                    xxdoinv006_pkg.get_brand_f (rec_itemloc.segment1,
                                                NULL,
                                                rec_itemloc.organization_id); --added by naga
                /* Verifying whether the Item Exists in the Canada Retail and setting the Region Flag */
                lv_reg_val   := NULL;

                -- lv_region_ca := NULL;
                BEGIN
                    FOR pricelist_rec IN c_get_priclist
                    LOOP
                        lv_price_flag   := 0;

                        FOR price_rec
                            IN c_get_reg_val (pricelist_rec.meaning,
                                              rec_itemloc.segment1)
                        LOOP
                            lv_price_flag   := price_rec.price;
                        END LOOP;

                        IF pricelist_rec.lookup_code = 'UK'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_uk   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_uk   := 'UK';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'FR'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_fr   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_fr   := 'FR';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'JP'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_jp_price   :=
                                    xxdo_get_japan_price (
                                        1,
                                        rec_itemloc.segment1,
                                        NULL);

                                IF lv_jp_price IS NULL
                                THEN
                                    lv_region_jp   := NULL;
                                ELSE
                                    lv_region_jp   := 'JP';
                                END IF;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_jp   := 'JP';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'CA'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_ca   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_ca   := 'CA';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'CN'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_cn   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_cn   := 'CN';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'HK'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_hk   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_hk   := 'HK';
                            END IF;
                        END IF;
                    END LOOP;

                    lv_region_us        := 'US';
                    /* ***********************************************************
                    Verifying whether Style already exists for Store Item loc Style
                    *********************************************************** */
                    ln_itemstylecount   := NULL;
                    lv_style_status     := NULL;

                    /*SELECT COUNT(1)
                    INTO
                    LN_ITEMSTYLECOUNT
                    FROM
                    XXDOINV007_INT
                    WHERE 1=1
            --        and UPPER(TRIM(STYLE_VALUE))=UPPER(TRIM(REC_ITEMLOC.SEGMENT1))--commented by naga
                    AND   PROCESSED_FLAG='Y'
                                AND ITEM_TYPE='STYLE'
                                AND STORE_WAREHOUSE='S'
                                AND STATUS_FLAG ='P'
                               and  (STYLE_VALUE)=(REC_ITEMLOC.SEGMENT1); */
                    SELECT COUNT (1)
                      INTO ln_itemstylecount
                      --FROM rms13prod.item_loc@rmsprod  --rms13prod.item_loc@rmsprod                                -- commented by BT Tech team
                      FROM item_loc@xxdo_retail_rms   -- added by BT Tech team
                     WHERE     item_parent IS NULL
                           AND loc_type = 'S'
                           AND item = rec_itemloc.segment1;

                    IF ln_itemstylecount >= 1
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';

                        BEGIN
                            lv_description   := NULL;
                            lv_itemstatus    := NULL;
                            lv_region1       := NULL;

                            --  added by naga
                            OPEN c_item_status (rec_itemloc.segment1,
                                                rec_itemloc.organization_id,
                                                'S');

                            FETCH c_item_status INTO lv_description, lv_itemstatus, lv_region1;

                            IF c_item_status%NOTFOUND
                            THEN
                                lv_description   := NULL;
                                lv_itemstatus    := NULL;
                                lv_region1       := NULL;
                            END IF;

                            CLOSE c_item_status;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retrieing the item description ');
                        END;

                        BEGIN
                            --           SELECT XXDOINV006_PKG.GET_BRAND_F(REC_ITEMLOC.SEGMENT1,NULL,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                            IF lv_brand <> 'UGG'
                            THEN
                                lv_region1     := 'US';
                                lv_region_ca   := NULL;
                                lv_region_cn   := NULL;
                                lv_region_jp   := NULL;
                                lv_region_uk   := NULL;
                                lv_region_fr   := NULL;
                                lv_region_hk   := NULL;
                            END IF;
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_itemloc.status))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                        THEN
                            lv_style_status   := 'N';
                        ELSE
                            lv_style_status   := 'NR';
                        END IF;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_itemloc.status))))
                        THEN
                            lv_op_mode   := 'ITEMLOC_UPDATE';
                            lv_operation   :=
                                'publishXItemLocModifyUsingXItemLocDesc';
                        END IF;
                    ELSE
                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemstylecount
                              --FROM rms13prod.item_master@rmsprod                                                -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             --rms13prod.item_master@rmsprod
                             WHERE     item = rec_itemloc.segment1
                                   AND item_level = 1;

                            IF ln_itemstylecount >= 1
                            THEN
                                lv_op_mode        := 'ITEMLOC_CREATE';
                                lv_operation      :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_style_status   := 'N';
                            ELSE
                                lv_op_mode        := 'ITEMLOC_CREATE';
                                lv_operation      :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_style_status   := 'NS';
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'Erorr while verifying style create condition for item'
                                    || rec_itemloc.segment1);
                        END;
                    END IF;

                    /* Condition to verify the brand of an item */
                    BEGIN
                        --     SELECT XXDOINV006_PKG.GET_BRAND_F(REC_ITEMLOC.SEGMENT1,NULL,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                        IF lv_brand = 'UGG'
                        THEN
                            lv_concept   := 'CONCEPT';
                        ELSE
                            lv_concept     := NULL;
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                                || SQLCODE
                                || SQLERRM);
                    END;

                    /* Begin the processing of Item Loc file the XML File FOR Store  */
                    fnd_file.put_line (
                        fnd_file.output,
                        'Debug point 1:  Before processing the Itemloc Store Style  file loop ');
                    lv_region_us        := 'US';

                    FOR i IN c_itemloc_style_s (rec_itemloc.segment1, rec_itemloc.organization_id, lv_brand, lv_region_us, lv_region_ca, lv_region_cn, lv_region_jp, lv_region_uk, lv_region_fr
                                                , lv_region_hk)
                    LOOP
                        /* Inserting the data into staging table */
                        BEGIN
                            INSERT INTO xxdoinv007_int (slno,
                                                        servicetype,
                                                        item_type,
                                                        style_value,
                                                        item_status,
                                                        item_description,
                                                        organization_id,
                                                        store_warehouse,
                                                        operation,
                                                        region,
                                                        xdata,
                                                        status_flag)
                                     VALUES (
                                                xxdoinv007_int_s.NEXTVAL,
                                                'ITEM LOCATION',
                                                'STYLE',
                                                rec_itemloc.segment1,
                                                rec_itemloc.status,
                                                rec_itemloc.description,
                                                rec_itemloc.organization_id,
                                                'S',
                                                lv_op_mode,
                                                UPPER (
                                                    TRIM (
                                                           lv_region_us
                                                        || ' '
                                                        || lv_region_uk
                                                        || ' '
                                                        || lv_region_ca
                                                        || ' '
                                                        || lv_region_cn
                                                        || ' '
                                                        || lv_region_jp
                                                        || ' '
                                                        || lv_region_fr
                                                        || ' '
                                                        || lv_region_hk)),
                                                XMLTYPE.getclobval (
                                                    i.itemloc),
                                                lv_style_status);

                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 50)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE     style_value = rec_itemloc.segment1
                                       AND TRUNC (transmission_date) =
                                           TRUNC (SYSDATE)
                                       AND servicetype = 'ITEM LOCATION'
                                       AND item_type = 'STYLE'
                                       AND store_warehouse = 'S';

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;

                    COMMIT;
                    /* Begin the processing of Item Loc file the XML File FOR Warehouse  */
                    fnd_file.put_line (
                        fnd_file.output,
                        'Debug point 2:  Before processing the Itemloc Warehouse  file loop ');
                    /**********************************************************
                     Verifying whether Style already exists for WH Item Loc Style
                     ************************************************************/
                    ln_itemstylecount   := NULL;
                    lv_style_status     := NULL;

                    SELECT COUNT (1)
                      INTO ln_itemstylecount
                      --FROM rms13prod.item_loc@rmsprod  --rms13prod.item_loc@rmsprod                                -- commented by BT Tech team
                      FROM item_loc@xxdo_retail_rms   -- added by BT Tech team
                     WHERE     item_parent IS NULL
                           AND loc_type = 'W'
                           AND item = rec_itemloc.segment1;

                    IF ln_itemstylecount >= 1
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';

                        BEGIN
                            lv_description   := NULL;
                            lv_itemstatus    := NULL;
                            lv_region1       := NULL;

                            --added by naga
                            OPEN c_item_status (rec_itemloc.segment1,
                                                rec_itemloc.organization_id,
                                                'WH');

                            FETCH c_item_status INTO lv_description, lv_itemstatus, lv_region1;

                            IF c_item_status%NOTFOUND
                            THEN
                                lv_description   := NULL;
                                lv_itemstatus    := NULL;
                                lv_region1       := NULL;
                            END IF;

                            CLOSE c_item_status;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retreiving the item description ');
                        END;

                        BEGIN
                            --  SELECT XXDOINV006_PKG.GET_BRAND_F(REC_ITEMLOC.SEGMENT1,NULL,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                            IF lv_brand <> 'UGG'
                            THEN
                                lv_region1     := 'US';
                                lv_region_ca   := NULL;
                                lv_region_cn   := NULL;
                                lv_region_jp   := NULL;
                                lv_region_uk   := NULL;
                                lv_region_fr   := NULL;
                                lv_region_hk   := NULL;
                            END IF;
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_itemloc.status))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                        THEN
                            lv_style_status   := 'N';
                        ELSE
                            lv_style_status   := 'NR';
                        END IF;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_itemloc.status))))
                        THEN
                            lv_op_mode   := 'ITEMLOC_UPDATE';
                            lv_operation   :=
                                'publishXItemLocModifyUsingXItemLocDesc';
                        END IF;
                    ELSE
                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemstylecount
                              --FROM rms13prod.item_master@rmsprod                                                -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             --rms13prod.item_master@rmsprod
                             WHERE     item = rec_itemloc.segment1
                                   AND item_level = 1;

                            IF ln_itemstylecount >= 1
                            THEN
                                lv_op_mode        := 'ITEMLOC_CREATE';
                                lv_operation      :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_style_status   := 'N';
                            ELSE
                                lv_op_mode        := 'ITEMLOC_CREATE';
                                lv_operation      :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_style_status   := 'NS';
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'Erorr while verifying style create condition for item'
                                    || rec_itemloc.segment1);
                        END;
                    END IF;

                    lv_region_us        := 'US';

                    FOR k
                        IN c_itemloc_style_wh (rec_itemloc.segment1,
                                               rec_itemloc.organization_id,
                                               lv_region_us,
                                               lv_region_ca,
                                               lv_region_cn,
                                               lv_region_jp,
                                               lv_region_uk,
                                               lv_region_fr,
                                               lv_region_hk)
                    LOOP
                        /* Inserting the data into staging table */
                        BEGIN
                            INSERT INTO xxdoinv007_int (slno,
                                                        servicetype,
                                                        item_type,
                                                        style_value,
                                                        item_status,
                                                        item_description,
                                                        organization_id,
                                                        store_warehouse,
                                                        operation,
                                                        region,
                                                        xdata,
                                                        status_flag)
                                     VALUES (
                                                xxdoinv007_int_s.NEXTVAL,
                                                'ITEM LOCATION',
                                                'STYLE',
                                                rec_itemloc.segment1,
                                                rec_itemloc.status,
                                                rec_itemloc.description,
                                                rec_itemloc.organization_id,
                                                'WH',
                                                lv_op_mode,
                                                UPPER (
                                                    TRIM (
                                                           lv_region_us
                                                        || ' '
                                                        || lv_region_uk
                                                        || ' '
                                                        || lv_region_ca
                                                        || ' '
                                                        || lv_region_cn
                                                        || ' '
                                                        || lv_region_jp
                                                        || ' '
                                                        || lv_region_fr
                                                        || ' '
                                                        || lv_region_hk)),
                                                XMLTYPE.getclobval (
                                                    k.itemloc),
                                                lv_style_status);

                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 50)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                /* Updating the existing record to validation error and storing the error code  */
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE     style_value = rec_itemloc.segment1
                                       AND TRUNC (transmission_date) =
                                           TRUNC (SYSDATE)
                                       AND servicetype = 'ITEM LOCATION'
                                       AND item_type = 'STYLE'
                                       AND store_warehouse = 'WH';

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                        /* for Style Warehouse */

                    COMMIT;

                    /* Publish Item Location */
                    FOR j IN c_itemlocpublish (rec_itemloc.segment1)
                    LOOP
                        IF j.operation = 'ITEMLOC_CREATE'
                        THEN
                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXItemLocCreateUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">

'
                                    || j.xdata
                                    || '</publishXItemLocCreateUsingXItemLocDesc>');
                        ELSE
                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXItemLocModifyUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"


xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">'
                                    || j.xdata
                                    || '</publishXItemLocModifyUsingXItemLocDesc>');
                        END IF;

                        /* Calling the webservice here */
                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv007_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = j.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv007_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = j.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = j.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                /* End calling the webservice   */
                    END LOOP;                            /* For Publish Loc */
                END LOOP;
            END LOOP;
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Loc Procedure and it is    '
                || SQLERRM);
    END;

    PROCEDURE publish_itemlocsku_p (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                    , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    IS
        lv_wsdl_ip         VARCHAR2 (25);
        lv_wsdl_url        VARCHAR2 (4000);
        lv_namespace       VARCHAR2 (4000);
        lv_service         VARCHAR2 (4000);
        lv_port            VARCHAR2 (4000);
        lv_operation       VARCHAR2 (4000);
        lv_targetname      VARCHAR2 (4000);
        lx_xmltype_in      SYS.XMLTYPE;
        lx_xmltype_out     SYS.XMLTYPE;
        lc_return          CLOB;
        lv_region_us       VARCHAR2 (10) := 'US';
        lv_region_ca       VARCHAR2 (10);
        lv_region_cn       VARCHAR2 (10);
        lv_region_jp       VARCHAR2 (10);
        lv_region_uk       VARCHAR2 (10);
        lv_region_fr       VARCHAR2 (10);
        lv_region_hk       VARCHAR2 (10);
        lv_concept         VARCHAR2 (30);
        lv_brand           VARCHAR2 (30);
        lv_reg_val         VARCHAR2 (10);
        lv_itemlocmdflag   VARCHAR2 (1) := 'N';
        ln_itemskucount    NUMBER;
        lv_op_mode         VARCHAR2 (60);
        lv_errmsg          VARCHAR2 (240);
        lv_alu             VARCHAR2 (50);
        lv_sku_status      VARCHAR2 (10);
        ln_parentcount     NUMBER;
        lv_price_flag      NUMBER := 0;
        lv_counter         NUMBER := 0;

        CURSOR c_itemlocsku IS
              SELECT --msib.segment1, msib.segment2, msib.segment3,                                            -- commented by BT Tech team
                     msib.style_number segment1, msib.color_code segment2, msib.item_size segment3, -- added by BT Tech team
                     msib.inventory_item_id, msib.organization_id, --msib.description,                                                                         -- commented by BT Tech team
                                                                   msib.item_description description,
                     -- aded by BT Tech team
                     msib.inventory_item_status_code
                FROM apps.qp_pricing_attributes qpa, apps.qp_list_lines qll, apps.qp_list_headers qlh,
                     apps.mtl_categories_b mc, apps.mtl_item_categories mic, --apps.mtl_system_items_b msib,                                                            -- commented by BT Tech team
                                                                             apps.xxd_common_items_v msib, -- added by BT Tech team
                     apps.mtl_item_categories mic1, apps.mtl_categories mc1
               WHERE     qpa.list_line_id = qll.list_line_id
                     AND qll.list_header_id = qlh.list_header_id
                     AND mic.inventory_item_id = msib.inventory_item_id
                     AND mic.organization_id = msib.organization_id
                     --AND msib.item_number = '1010467-BLK-04'--'9900100-BLK-10'
                     AND mc.structure_id =
                         (SELECT structure_id
                            FROM mtl_category_sets
                           --WHERE category_set_name = 'Styles')                                    -- commented by BT Tech team
                           WHERE category_set_name = 'OM Sales Category')
                     -- added by BT Tech team
                     AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                     AND qpa.product_attr_value = mc.category_id
                     AND mic.category_id = mc.category_id
                     --AND msib.organization_id = 7                                                                -- commented by BT Tech team
                     AND msib.organization_id IN
                             (SELECT ood.organization_id
                                -- added by BT tech team - START
                                FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                               WHERE     lookup_type =
                                         'XXD_1206_INV_ORG_MAPPING'
                                     AND lookup_code = 7
                                     AND flv.attribute1 = ood.organization_code
                                     AND LANGUAGE = USERENV ('LANG'))
                     -- added by BT tech team - END
                     AND msib.inventory_item_id = mic1.inventory_item_id
                     AND msib.organization_id = mic1.organization_id
                     AND mic1.category_id = mc1.category_id
                     --AND mc1.structure_id = 101                                                                    -- commented by BT Tech team
                     AND mc1.structure_id =
                         (SELECT structure_id -- added by BT tech team - START
                            FROM mtl_category_sets
                           WHERE category_set_name = 'Inventory')
                     -- added by BT tech team - END
                     --AND mc1.segment4 <> 'SAMPLE'   Commented by BT Technology Team V1.1 08Mar2015
                     AND msib.item_type NOT IN
                             ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                     --AND mic1.organization_id = 7                                                                -- commented by BT Tech team
                     AND mic1.organization_id =
                         (SELECT ood.organization_id
                            -- added by BT tech team - START
                            FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                           WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                 AND lookup_code = 7
                                 AND flv.attribute1 = ood.organization_code
                                 AND LANGUAGE = USERENV ('LANG'))
                     -- added by BT tech team - END
                     AND qpa.product_attribute_context = 'ITEM'
                     AND qlh.NAME = 'Retail - US'
                     AND (TRUNC (msib.last_update_date) = NVL (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'), TRUNC (SYSDATE)) OR TRUNC (qll.creation_date) = NVL (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'), TRUNC (SYSDATE)))
                     --AND msib.segment3 <> 'ALL'                                                                    -- commented by BT Tech team
                     AND msib.item_type <> 'GENERIC'  -- added by BT Tech team
                     --AND msib.attribute13 IS NOT NULL                                                            -- commented by BT Tech team
                     AND msib.size_scale_id IS NOT NULL -- added by BT Tech team
                     --AND msib.attribute11 IS NOT NULL                                                            -- commented by BT Tech team
                     AND msib.upc_code IS NOT NULL    -- added by BT Tech team
                     AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                        msib.organization_id)
                             IS NOT NULL
                     AND EXISTS
                             (SELECT 1
                                --FROM rms13prod.item_master@rmsprod                                                    -- commented by BT Tech team
                                FROM item_master@xxdo_retail_rms
                               -- added by BT Tech team
                               WHERE     item_level = 2
                                     AND item =
                                         TO_CHAR (msib.inventory_item_id))
            GROUP BY --msib.segment1, msib.segment2, msib.segment3,msib.description,                            -- commented by BT Tech team
                     msib.style_number, msib.color_code, msib.item_size,
                     msib.item_description,           -- added by BT Tech team
                                            msib.inventory_item_id, msib.organization_id,
                     msib.inventory_item_status_code;

        CURSOR c_itemloc_sku_s (pn_item_id NUMBER, pn_orgnid NUMBER, pv_brand VARCHAR2, pv_region1 VARCHAR2, pv_region2 VARCHAR2, pv_region3 VARCHAR2, pv_region4 VARCHAR2, pv_region5 VARCHAR2, pv_region6 VARCHAR2
                                , pv_region7 VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XItemLocDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT (
                                           "v1:XItemLocDtl",
                                           --  XMLELEMENT ("v1:hier_value", rms_store_id),                      --commented by BT Technology team on 05/12/2014
                                           XMLELEMENT ("v1:hier_value",
                                                       lookup_code),
                                           --Added by BT Technology Team on 05/12/2014
                                           XMLELEMENT (
                                               "v1:primary_supp",
                                               -- xxdoinv006_pkg.get_vendor_id_f (region)                       --commented by BT Technology Team on 05/12/2014
                                               xxdoinv006_pkg.get_vendor_id_f (
                                                   attribute3)--Added by BT Technology Team on 05/12/2014
                                                              ),
                                           XMLELEMENT (
                                               "v1:primary_cntry",
                                               --    DECODE (region,                                             --commented by BT Technology team on 05/12/2014
                                               DECODE (attribute3,
                                                       --Added by BT Technology Team on 05/12/2014
                                                       'UK', 'GB',
                                                       attribute3--Added by BT Technology Team on 05/12/2014
                                                                 -- region                                                 --commented by BT Technology team on 05/12/2014
                                                                 )),
                                           XMLELEMENT (
                                               "v1:local_item_desc",
                                                  /*    msib.segment1
                                                || ':'
                                                || msib.segment2
                                                || ':'
                                                || msib.segment3
                                                || ':'
                                                || msib.description
                                               ),*/
                                                  --commented by bT Technology team on 05/12/2014
                                                  msib.item_number
                                               || ':'
                                               || msib.item_description),
                                           --Added by BT Technology Team on 05/12/2014
                                           XMLELEMENT (
                                               "v1:status",
                                               DECODE (
                                                   INITCAP (
                                                       msib.inventory_item_status_code),
                                                   'Active', 'A',
                                                   'Inactive', 'I',
                                                   'C')),
                                           XMLELEMENT ("v1:store_ord_mult",
                                                       'E'),
                                           XMLELEMENT ("v1:receive_as_type",
                                                       NULL),
                                           XMLELEMENT ("v1:taxable_ind",
                                                       NULL),
                                           XMLELEMENT ("v1:ti", NULL),
                                           XMLELEMENT ("v1:hi", NULL),
                                           XMLELEMENT ("v1:daily_waste_pct",
                                                       NULL),
                                           XMLELEMENT (
                                               "v1:local_short_desc",
                                                  /*    msib.segment1
                                                 || ':'
                                                 || msib.segment2
                                                 || ':'
                                                 || msib.segment3
                                                 || ':'
                                                 || msib.description
                                                ),*/
                                                  --commented by bT Technology team on 05/12/2014
                                                  msib.style_number
                                               || ':'
                                               || msib.color_code
                                               || ':'
                                               || msib.item_size
                                               || ':'
                                               || msib.item_description),
                                           --Added by BT Technology Team on 05/12/2014
                                           XMLELEMENT ("v1:uin_type", NULL),
                                           XMLELEMENT ("v1:uin_label", NULL),
                                           XMLELEMENT ("v1:capture_time",
                                                       NULL),
                                           XMLELEMENT ("v1:ext_uin_ind",
                                                       NULL),
                                           XMLELEMENT ("v1:source_method",
                                                       NULL),
                                           XMLELEMENT ("v1:source_wh", NULL))
                                       ORDER BY attribute3, lookup_code--Added by BT Technology Team on 05/12/2014
                                                                       --    ) ORDER BY region, store_number                                                    --commented by bT Technology team on 05/12/2014
                                                                       )
                          /*  FROM stores@do_retail_datamart
                                     WHERE rms_store_id IS NOT NULL
                                       AND brand IN ('ALL', pv_brand)
                                    AND region IN*/
                          --commented by BT Technology team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_type = 'XXD_RETAIL_STORES'
                               AND enabled_flag = 'Y'
                               AND LANGUAGE = 'US'
                               AND lookup_code IS NOT NULL
                               --Added by BT Technology Team on 05/12/2014
                               --       and  upper(store_type) in decode(XXDOINV006_PKG.GET_BRAND_F(NULL,msib.inventory_item_id,msib.ORGANIZATION_ID),'UGG',upper(store_type),'OUTLET')
                               AND attribute9 IN ('GENERIC', pv_brand)
                               AND attribute3 IN (pv_region1, pv_region2, pv_region3,
                                                  pv_region4, pv_region5, pv_region6,
                                                  pv_region7)--         and (region in ( PV_REGION1 ) OR REGION IN ( PV_REGION2) OR region in ( PV_REGION3 ) OR REGION IN ( PV_REGION4) OR REGION IN (PV_REGION5) OR REGION IN (PV_REGION6)OR REGION IN (PV_REGION7)
                                                             --         )
                                                             )) itemloc
              -- FROM mtl_system_items_b msib                         --commented BY BT Technology Team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology team on 05/12/2014
             WHERE     inventory_item_id = pn_item_id
                   AND organization_id = pn_orgnid;

        CURSOR c_itemloc_sku_wh (pn_item_id   NUMBER,
                                 pn_orgnid    NUMBER,
                                 pv_region1   VARCHAR2,
                                 pv_region2   VARCHAR2,
                                 pv_region3   VARCHAR2,
                                 pv_region4   VARCHAR2,
                                 pv_region5   VARCHAR2,
                                 pv_region6   VARCHAR2,
                                 pv_region7   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XItemLocDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT (
                                           "v1:XItemLocDtl",
                                           XMLELEMENT ("v1:hier_value",
                                                       lookup_code),
                                           XMLELEMENT (
                                               "v1:primary_supp",
                                               xxdoinv006_pkg.get_vendor_id_f (
                                                   DECODE (description,
                                                           'CA', 'US',
                                                           description))),
                                           XMLELEMENT (
                                               "v1:primary_cntry",
                                               DECODE (description,
                                                       'UK', 'GB',
                                                       'CA', 'US',
                                                       description)),
                                           XMLELEMENT (
                                               "v1:local_item_desc",
                                                  /*  msib.segment1
                                              || ':'
                                              || msib.segment2
                                              || ':'
                                              || msib.segment3
                                              || ':'
                                              || msib.description*/
                                                  --commented by BT Technology team on 05/12/2014
                                                  msib.item_number
                                               || ':'
                                               || msib.item_description--Added by BT Technology Team on 05/12/2014
                                                                       ),
                                           XMLELEMENT (
                                               "v1:status",
                                               DECODE (
                                                   INITCAP (
                                                       msib.inventory_item_status_code),
                                                   'Active', 'A',
                                                   'Inactive', 'I',
                                                   'C')),
                                           XMLELEMENT ("v1:store_ord_mult",
                                                       'E'),
                                           XMLELEMENT ("v1:receive_as_type",
                                                       NULL),
                                           XMLELEMENT ("v1:taxable_ind",
                                                       NULL),
                                           XMLELEMENT ("v1:ti", NULL),
                                           XMLELEMENT ("v1:hi", NULL),
                                           XMLELEMENT ("v1:daily_waste_pct",
                                                       NULL),
                                           XMLELEMENT (
                                               "v1:local_short_desc",
                                                  /*  msib.segment1
                                              || ':'
                                              || msib.segment2
                                              || ':'
                                              || msib.segment3
                                              || ':'
                                              || msib.description*/
                                                  --commented by BT Technology team on 05/12/2014
                                                  msib.style_number
                                               || ':'
                                               || msib.color_code
                                               || ':'
                                               || msib.item_size
                                               || ':'
                                               || msib.item_description--Added by BT Technology Team on 05/12/2014
                                                                       ),
                                           XMLELEMENT ("v1:uin_type", NULL),
                                           XMLELEMENT ("v1:uin_label", NULL),
                                           XMLELEMENT ("v1:capture_time",
                                                       NULL),
                                           XMLELEMENT ("v1:ext_uin_ind",
                                                       NULL),
                                           XMLELEMENT ("v1:source_method",
                                                       NULL),
                                           XMLELEMENT ("v1:source_wh", NULL))
                                       ORDER BY description, lookup_code)
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND enabled_flag = 'Y'
                               AND LANGUAGE = 'US'
                               AND description IN (pv_region1, pv_region2, pv_region3,
                                                   pv_region4, pv_region5, pv_region6,
                                                   pv_region7)--          AND ( DESCRIPTION IN ( PV_REGION1 ) OR DESCRIPTION IN ( PV_REGION2 ) OR DESCRIPTION IN ( PV_REGION3 ) OR DESCRIPTION IN ( PV_REGION4 ) OR
                                                              --DESCRIPTION IN ( PV_REGION5 ) OR DESCRIPTION IN ( PV_REGION6 ) OR DESCRIPTION IN ( PV_REGION7 )
                                                              --)
                                                              )) itemloc
              -- FROM mtl_system_items_b msib                         --commented BY BT Technology Team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology team on 05/12/2014
             WHERE     inventory_item_id = pn_item_id
                   AND organization_id = pn_orgnid;

        CURSOR c_itemlocpublish (pv_item_id VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv007_int
             WHERE     status_flag = 'N'
                   AND item_type = 'SKU'
                   AND inventory_item_id = pv_item_id; --PV_SEGMENT1 added by naga;

        CURSOR c_itemlocrepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv007_int
             WHERE     status_flag IN ('VE', 'P')
                   AND item_type = 'SKU'
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));

        CURSOR c_get_reg_val (p_name VARCHAR2, p_item_id NUMBER)
        IS
            SELECT 1   AS price
              FROM qp_pricing_attributes qpa, qp_list_lines qll, qp_list_headers qlh,
                   --mtl_system_items_b msib                                                                    -- commented by BT Tech team
                   apps.xxd_common_items_v msib       -- added by BT Tech team
             WHERE     qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --AND msib.organization_id = 7                                                                    -- commented by BT Tech team
                   AND msib.organization_id IN
                           (SELECT ood.organization_id -- added by BT tech team - START
                              FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT tech team - END
                   --and msib.inventory_item_status_code = 'Active'
                   AND qpa.product_attribute_context = 'ITEM'
                   AND qlh.NAME = p_name        --'Retail China Replenishment'
                   AND msib.inventory_item_id = p_item_id
                   --REC_ITEMLOC.INVENTORY_ITEM_ID
                   AND ROWNUM <= 1;

        CURSOR c_get_priclist IS
            SELECT meaning, lookup_code
              FROM apps.fnd_lookup_values_vl lkup
             WHERE     lookup_type = 'XXDOINV_PRICE_LIST_NAME'
                   AND enabled_flag = 'Y';

        lv_description     VARCHAR2 (240);
        lv_itemstatus      VARCHAR2 (40);
        lv_itemstatus1     VARCHAR2 (40);
        lv_region1         VARCHAR2 (20);
        lv_jp_price        VARCHAR2 (50) := NULL;
    BEGIN
        /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
        BEGIN
            SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                     --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                     'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                              apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
              INTO lv_wsdl_ip
              FROM apps.fnd_product_groups;
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Unable to fetch the File server name');
                pv_retcode   := 2;
        END;

        /* Initializing the Item loc web service variables */
        lv_wsdl_url    :=
               'http://'
            || lv_wsdl_ip
            || '/XItemLocPublishingBean/XItemLocPublishingService?WSDL';
        lv_namespace   :=
            'http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1';
        lv_service     := 'XItemLocPublishingService';
        lv_port        := 'XItemLocPublishingPort';
        lv_operation   := 'publishXItemLocCreateUsingXItemLocDesc';
        lv_targetname   :=
               'http://'
            || lv_wsdl_ip
            || '/XItemLocPublishingBean/XItemLocPublishingService';

        /* If it is Reprocess */
        IF pv_reprocess = 'Y'
        THEN
            /* Retreive the data from the Staging table based on the dates */
            FOR rec_reprocess IN c_itemlocrepublish (pv_fromdate, pv_todate)
            LOOP
                /* Verifying whether the Item Exists in the Canada Retail and setting the Region Flag */
                SELECT xxdoinv006_pkg.get_brand_f (NULL, rec_reprocess.inventory_item_id, rec_reprocess.organization_id)
                  INTO lv_brand
                  FROM DUAL;

                BEGIN
                    lv_alu   := NULL;

                    --SELECT    UPPER (TRIM (segment1)) || '-'|| UPPER (TRIM (segment2))|| '-'|| UPPER (TRIM (segment3))                 -- commented by BT Tech team
                    SELECT UPPER (TRIM (style_number)) || '-' || UPPER (TRIM (color_code)) || '-' || UPPER (TRIM (item_size)) -- added by BT Tech team
                      INTO lv_alu
                      --FROM mtl_system_items                                                                                            -- commented by BT Tech team
                      FROM xxd_common_items_v         -- added by BT Tech team
                     WHERE     inventory_item_id =
                               rec_reprocess.inventory_item_id
                           --AND organization_id = 7;                                                                                        -- commented by BT Tech team
                           AND organization_id IN
                                   (SELECT ood.organization_id
                                      -- added by BT tech team - START
                                      FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                                     WHERE     lookup_type =
                                               'XXD_1206_INV_ORG_MAPPING'
                                           AND lookup_code = 7
                                           AND flv.attribute1 =
                                               ood.organization_code
                                           AND LANGUAGE = USERENV ('LANG'));
                -- added by BT tech team - END
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_alu   := NULL;
                END;

                FOR pricelist_rec IN c_get_priclist
                LOOP
                    lv_price_flag   := 0;

                    FOR price_rec
                        IN c_get_reg_val (pricelist_rec.meaning,
                                          rec_reprocess.inventory_item_id)
                    LOOP
                        lv_price_flag   := price_rec.price;
                    END LOOP;

                    IF pricelist_rec.lookup_code = 'UK'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_uk   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_uk   := 'UK';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'FR'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_fr   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_fr   := 'FR';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'JP'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_jp_price   :=
                                xxdo_get_japan_price (
                                    2,
                                    NULL,
                                    rec_reprocess.inventory_item_id);

                            IF lv_jp_price IS NULL
                            THEN
                                lv_region_jp   := NULL;
                            ELSE
                                lv_region_jp   := 'JP';
                            END IF;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_jp   := 'JP';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'CA'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_ca   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_ca   := 'CA';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'CN'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_cn   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_cn   := 'CN';
                        END IF;
                    ELSIF pricelist_rec.lookup_code = 'HK'
                    THEN
                        IF lv_price_flag = 0
                        THEN
                            lv_region_hk   := NULL;
                        ELSIF lv_price_flag = 1
                        THEN
                            lv_region_hk   := 'HK';
                        END IF;
                    END IF;
                END LOOP;

                lv_region_us   := 'US';

                IF rec_reprocess.operation = 'ITEMLOC_UPDATE'
                THEN
                    lv_op_mode   := 'ITEMLOC_UPDATE';
                    lv_operation   :=
                        'publishXItemLocModifyUsingXItemLocDesc';

                    /* Modify only when description / status/ Region changes */
                    BEGIN
                        lv_description   := NULL;
                        lv_itemstatus    := NULL;
                        lv_region1       := NULL;

                        SELECT item_description, item_status, region
                          INTO lv_description, lv_itemstatus, lv_region1
                          FROM xxdoinv007_int
                         WHERE     UPPER (TRIM (inventory_item_id)) =
                                   UPPER (
                                       TRIM (rec_reprocess.inventory_item_id))
                               AND organization_id =
                                   rec_reprocess.organization_id
                               AND processed_flag = 'Y'
                               AND item_type = 'SKU'
                               AND status_flag = 'P'
                               AND store_warehouse = 'S'
                               AND ROWNUM = 1
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv007_int
                                     WHERE     UPPER (
                                                   TRIM (inventory_item_id)) =
                                               UPPER (
                                                   TRIM (
                                                       rec_reprocess.inventory_item_id))
                                           AND organization_id =
                                               rec_reprocess.organization_id
                                           AND processed_flag = 'Y'
                                           AND store_warehouse = 'S'
                                           AND item_type = 'SKU'
                                           AND status_flag = 'P');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Exception occured while retreiving the item description ');
                    END;

                    BEGIN
                        --  LV_BRAND := NULL;

                        --  select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_REPROCESS.INVENTORY_ITEM_ID,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                        IF lv_brand <> 'UGG'
                        THEN
                            lv_region1     := 'US';
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    END;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_reprocess.item_status))) OR (NVL (UPPER (TRIM (lv_region1)), '0') <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || '' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                    THEN
                        UPDATE xxdoinv007_int
                           SET status_flag = 'N', operation = 'ITEMLOC_UPDATE'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    ELSE
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'NR'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    END IF;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_reprocess.item_status))))
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';
                    END IF;
                ELSE
                    lv_op_mode   := 'ITEMLOC_CREATE';
                    lv_operation   :=
                        'publishXItemLocCreateUsingXItemLocDesc';
                END IF;

                /* Updating with the Operation Mode */
                UPDATE xxdoinv007_int
                   SET operation   = lv_op_mode
                 WHERE slno = rec_reprocess.slno AND store_warehouse = 'S';

                COMMIT;

                /*  condition to verify the brand of an item */
                BEGIN
                    -- LV_BRAND := NULL;
                    -- LV_CONCEPT := NULL;
                    -- select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_REPROCESS.INVENTORY_ITEM_ID,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                    IF lv_brand = 'UGG'
                    THEN
                        lv_concept   := 'CONCEPT';
                    ELSE
                        lv_concept     := NULL;
                        lv_region_ca   := NULL;
                        lv_region_cn   := NULL;
                        lv_region_jp   := NULL;
                        lv_region_uk   := NULL;
                        lv_region_fr   := NULL;
                        lv_region_hk   := NULL;
                    END IF;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                            || SQLCODE
                            || SQLERRM);
                END;

                /* Begin the processing of Item Loc file the XML File FOR Store  */
                fnd_file.put_line (
                    fnd_file.output,
                    'Debug point 1:  Before processing the Itemloc Store Style  file loop ');
                lv_region_us   := 'US';

                FOR i IN c_itemloc_sku_s (rec_reprocess.inventory_item_id, rec_reprocess.organization_id, lv_brand, lv_region_us, lv_region_ca, lv_region_cn, lv_region_jp, lv_region_uk, lv_region_fr
                                          , lv_region_hk)
                LOOP
                    /*  Updating the data into staging table */
                    BEGIN
                        UPDATE xxdoinv007_int
                           SET xdata   = XMLTYPE.getclobval (i.itemloc)
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'S';

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv007_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE     slno = rec_reprocess.slno
                                   AND store_warehouse = 'S';

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                    END;
                END LOOP;                           /* For Style with Store */

                /* *********************************
                 Verifying whether Style already exists for Reprocessing Item Loc Style Warehouse
                 *********************************************************/
                IF rec_reprocess.operation = 'ITEMLOC_UPDATE'
                THEN
                    lv_op_mode   := 'ITEMLOC_UPDATE';
                    lv_operation   :=
                        'publishXItemLocModifyUsingXItemLocDesc';

                    BEGIN
                        lv_description   := NULL;
                        lv_itemstatus    := NULL;
                        lv_region1       := NULL;

                        SELECT item_description, item_status, region
                          INTO lv_description, lv_itemstatus, lv_region1
                          FROM xxdoinv007_int
                         WHERE     UPPER (TRIM (inventory_item_id)) =
                                   UPPER (
                                       TRIM (rec_reprocess.inventory_item_id))
                               AND organization_id =
                                   rec_reprocess.organization_id
                               AND processed_flag = 'Y'
                               AND item_type = 'SKU'
                               AND store_warehouse = 'WH'
                               AND status_flag = 'P'
                               AND ROWNUM = 1
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv007_int
                                     WHERE     UPPER (
                                                   TRIM (inventory_item_id)) =
                                               UPPER (
                                                   TRIM (
                                                       rec_reprocess.inventory_item_id))
                                           AND organization_id =
                                               rec_reprocess.organization_id
                                           AND processed_flag = 'Y'
                                           AND item_type = 'SKU'
                                           AND store_warehouse = 'WH'
                                           AND status_flag = 'P');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Exception occured while retrieing the item description ');
                    END;

                    BEGIN
                        --   LV_BRAND := NULL;

                        --   select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_REPROCESS.INVENTORY_ITEM_ID,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                        IF lv_brand <> 'UGG'
                        THEN
                            lv_region1     := 'US';
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    END;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_reprocess.item_status))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                    THEN
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'N'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    ELSE
                        UPDATE xxdoinv007_int
                           SET status_flag   = 'NR'
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    END IF;

                    IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_reprocess.item_description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_reprocess.item_status))))
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';
                    END IF;

                    UPDATE xxdoinv007_int
                       SET region = lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk
                     WHERE     slno = rec_reprocess.slno
                           AND store_warehouse = 'WH';

                    COMMIT;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'The value of us region is ' || lv_region_us);
                ELSE
                    lv_op_mode   := 'ITEMLOC_CREATE';
                    lv_operation   :=
                        'publishXItemLocCreateUsingXItemLocDesc';
                END IF;

                /* Updating with the Operation Mode */
                UPDATE xxdoinv007_int
                   SET operation   = lv_op_mode
                 WHERE slno = rec_reprocess.slno AND store_warehouse = 'WH';

                COMMIT;
                /* Begin the processing of Item Loc file the XML File FOR Warehouse  */
                fnd_file.put_line (
                    fnd_file.output,
                    'Debug point 2:  Before processing the Itemloc Warehouse  file loop ');
                lv_region_us   := 'US';

                FOR k
                    IN c_itemloc_sku_wh (rec_reprocess.inventory_item_id,
                                         rec_reprocess.organization_id,
                                         lv_region_us,
                                         lv_region_ca,
                                         lv_region_cn,
                                         lv_region_jp,
                                         lv_region_uk,
                                         lv_region_fr,
                                         lv_region_hk)
                LOOP
                    /*  Updating the data into staging table */
                    BEGIN
                        UPDATE xxdoinv007_int
                           SET xdata   = XMLTYPE.getclobval (k.itemloc)
                         WHERE     slno = rec_reprocess.slno
                               AND store_warehouse = 'WH';

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv007_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE     slno = rec_reprocess.slno
                                   AND store_warehouse = 'WH';

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                    END;
                END LOOP;                            /* for Style Warehouse */

                /* Publish Item Location */
                IF rec_reprocess.operation = 'ITEMLOC_CREATE'
                THEN
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemLocCreateUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">

'
                            || rec_reprocess.xdata
                            || '</publishXItemLocCreateUsingXItemLocDesc>');
                ELSE
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemLocModifyUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"


xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">'
                            || rec_reprocess.xdata
                            || '</publishXItemLocModifyUsingXItemLocDes

c>');
                END IF;

                /* Calling the webservice here */
                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);

                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        fnd_file.put_line (
                            fnd_file.output,
                            'Response is stored in the staging table  ');
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv007_int
                           SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                               transmission_date = SYSDATE
                         WHERE slno = rec_reprocess.slno;
                    ELSE
                        fnd_file.put_line (fnd_file.output,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv007_int
                           SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                         WHERE slno = rec_reprocess.slno;
                    END IF;

                    COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        /* Updating the existing record to validation error and storing the error code */
                        UPDATE xxdoinv007_int
                           SET status_flag = 'VE', errorcode = lv_errmsg
                         WHERE slno = rec_reprocess.slno;

                        COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM);
                END;                        /* End calling the webservice   */
            END LOOP;                                  /* For REPublish Loc */
        ELSE
            /* Starting the Items modified for today */
            FOR rec_itemloc IN c_itemlocsku
            LOOP
                SELECT xxdoinv006_pkg.get_brand_f (NULL, rec_itemloc.inventory_item_id, rec_itemloc.organization_id)
                  INTO lv_brand
                  FROM DUAL;

                /* Verifying whether the Item Exists in the Canada Retail and setting the Region Flag */
                lv_reg_val     := NULL;
                lv_region_ca   := NULL;

                BEGIN
                    FOR pricelist_rec IN c_get_priclist
                    LOOP
                        lv_price_flag   := 0;

                        FOR price_rec
                            IN c_get_reg_val (pricelist_rec.meaning,
                                              rec_itemloc.inventory_item_id)
                        LOOP
                            lv_price_flag   := price_rec.price;
                        END LOOP;

                        IF pricelist_rec.lookup_code = 'UK'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_uk   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_uk   := 'UK';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'FR'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_fr   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_fr   := 'FR';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'JP'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_jp_price   :=
                                    xxdo_get_japan_price (
                                        2,
                                        NULL,
                                        rec_itemloc.inventory_item_id);

                                IF lv_jp_price IS NULL
                                THEN
                                    lv_region_jp   := NULL;
                                ELSE
                                    lv_region_jp   := 'JP';
                                END IF;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_jp   := 'JP';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'CA'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_ca   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_ca   := 'CA';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'CN'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_cn   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_cn   := 'CN';
                            END IF;
                        ELSIF pricelist_rec.lookup_code = 'HK'
                        THEN
                            IF lv_price_flag = 0
                            THEN
                                lv_region_hk   := NULL;
                            ELSIF lv_price_flag = 1
                            THEN
                                lv_region_hk   := 'HK';
                            END IF;
                        END IF;
                    END LOOP;

                    lv_region_us      := 'US';
                    /* ***********************************************************
                    Verifying whether Style already exists for Store Item loc Style
                    *********************************************************** */
                    ln_itemskucount   := NULL;
                    lv_sku_status     := NULL;

                    SELECT COUNT (1)
                      INTO ln_itemskucount
                      --FROM rms13prod.item_loc@rmsprod  --rms13prod.item_loc@rmsprod                                    -- commented by BT Tech team
                      FROM item_loc@xxdo_retail_rms   -- added by BT Tech team
                     WHERE     item_parent IS NOT NULL
                           AND loc_type = 'S'
                           AND item = TO_CHAR (rec_itemloc.inventory_item_id);

                    IF ln_itemskucount >= 1
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';

                        BEGIN
                            lv_description   := NULL;
                            lv_itemstatus    := NULL;
                            lv_region1       := NULL;

                            SELECT item_description, item_status, region
                              INTO lv_description, lv_itemstatus, lv_region1
                              FROM xxdoinv007_int
                             WHERE     1 = 1
                                   AND organization_id =
                                       rec_itemloc.organization_id
                                   AND processed_flag = 'Y'
                                   AND item_type = 'SKU'
                                   AND store_warehouse = 'S'
                                   AND status_flag = 'P'
                                   AND inventory_item_id =
                                       rec_itemloc.inventory_item_id
                                   AND ROWNUM = 1
                                   AND transmission_date =
                                       (SELECT MAX (transmission_date)
                                          FROM xxdoinv007_int
                                         WHERE     1 = 1
                                               AND organization_id =
                                                   rec_itemloc.organization_id
                                               AND processed_flag = 'Y'
                                               AND store_warehouse = 'S'
                                               AND item_type = 'SKU'
                                               AND status_flag = 'P'
                                               AND inventory_item_id =
                                                   rec_itemloc.inventory_item_id);
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retrieing the item description ');
                        END;

                        BEGIN
                            -- LV_BRAND := NULL;

                            --    SELECT XXDOINV006_PKG.GET_BRAND_F(NULL,REC_ITEMLOC.INVENTORY_ITEM_ID,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                            IF lv_brand <> 'UGG'
                            THEN
                                lv_region1     := 'US';
                                lv_region_ca   := NULL;
                                lv_region_cn   := NULL;
                                lv_region_jp   := NULL;
                                lv_region_uk   := NULL;
                                lv_region_fr   := NULL;
                                lv_region_hk   := NULL;
                            END IF;
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_itemloc.inventory_item_status_code))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                        THEN
                            lv_sku_status   := 'N';
                        ELSE
                            lv_sku_status   := 'NR';
                        END IF;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_itemloc.inventory_item_status_code))))
                        THEN
                            lv_op_mode   := 'ITEMLOC_UPDATE';
                            lv_operation   :=
                                'publishXItemLocModifyUsingXItemLocDesc';
                        END IF;
                    ELSE
                        ln_parentcount   := NULL;

                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemskucount
                              --FROM rms13prod.item_master@rmsprod    rms13prod.item_master@rmsprod                                    -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (
                                           rec_itemloc.inventory_item_id)
                                   AND item_level = 2;

                            IF ln_itemskucount >= 1
                            THEN
                                BEGIN
                                    SELECT COUNT (1)
                                      INTO ln_parentcount
                                      --FROM rms13prod.item_loc@rmsprod --rms13prod.item_loc@rmsprod                                    -- commented by BT Tech team
                                      FROM item_loc@xxdo_retail_rms
                                     -- added by BT Tech team
                                     WHERE     item_parent IS NULL
                                           AND loc_type = 'S'
                                           AND item = rec_itemloc.segment1;

                                    IF ln_parentcount >= 1
                                    THEN
                                        lv_op_mode      := 'ITEMLOC_CREATE';
                                        lv_operation    :=
                                            'publishXItemLocCreateUsingXItemLocDesc';
                                        lv_sku_status   := 'N';
                                    ELSE
                                        lv_op_mode      := 'ITEMLOC_CREATE';
                                        lv_operation    :=
                                            'publishXItemLocCreateUsingXItemLocDesc';
                                        lv_sku_status   := 'NP';
                                    END IF;
                                END;
                            ELSE
                                lv_op_mode      := 'ITEMLOC_CREATE';
                                lv_operation    :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_sku_status   := 'NSK';
                            END IF;
                        END;
                    END IF;

                    /* Updating with the Operation Mode */
                    BEGIN
                        IF lv_brand = 'UGG'
                        THEN
                            lv_concept   := 'CONCEPT';
                        ELSE
                            lv_concept     := NULL;
                            lv_region_ca   := NULL;
                            lv_region_cn   := NULL;
                            lv_region_jp   := NULL;
                            lv_region_uk   := NULL;
                            lv_region_fr   := NULL;
                            lv_region_hk   := NULL;
                        END IF;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                                || SQLCODE
                                || SQLERRM);
                    END;

                    fnd_file.put_line (
                        fnd_file.output,
                        'Debug point 1:  Before processing the Itemloc Store Style  file loop ');
                    fnd_file.put_line (
                        fnd_file.output,
                           'REGIONS BEFORE STORE CURSOR'
                        || lv_region_us
                        || ' '
                        || lv_region_ca
                        || ' '
                        || lv_region_cn
                        || ' '
                        || lv_region_jp
                        || ' '
                        || lv_region_uk
                        || ' '
                        || lv_region_fr);
                    lv_region_us      := 'US';
                    fnd_file.put_line (
                        fnd_file.output,
                        '***** Debug point 1:  Before inserting data into staging table ');

                    FOR i IN c_itemloc_sku_s (rec_itemloc.inventory_item_id, rec_itemloc.organization_id, lv_brand, lv_region_us, lv_region_ca, lv_region_cn, lv_region_jp, lv_region_uk, lv_region_fr
                                              , lv_region_hk)
                    LOOP
                        fnd_file.put_line (
                            fnd_file.output,
                            '***** Debug point 1:  inserting data into staging table ');

                        BEGIN
                            INSERT INTO xxdoinv007_int (slno,
                                                        servicetype,
                                                        item_type,
                                                        inventory_item_id,
                                                        item_status,
                                                        item_description,
                                                        organization_id,
                                                        store_warehouse,
                                                        operation,
                                                        region,
                                                        xdata,
                                                        status_flag)
                                     VALUES (
                                                xxdoinv007_int_s.NEXTVAL,
                                                'ITEM LOCATION',
                                                'SKU',
                                                rec_itemloc.inventory_item_id,
                                                rec_itemloc.inventory_item_status_code,
                                                rec_itemloc.description,
                                                rec_itemloc.organization_id,
                                                'S',
                                                lv_op_mode,
                                                UPPER (
                                                    TRIM (
                                                           lv_region_us
                                                        || ' '
                                                        || lv_region_uk
                                                        || ' '
                                                        || lv_region_ca
                                                        || ' '
                                                        || lv_region_cn
                                                        || ' '
                                                        || lv_region_jp
                                                        || ' '
                                                        || lv_region_fr
                                                        || ' '
                                                        || lv_region_hk)),
                                                XMLTYPE.getclobval (
                                                    i.itemloc),
                                                lv_sku_status);

                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 100)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE     inventory_item_id =
                                           rec_itemloc.inventory_item_id
                                       AND TRUNC (transmission_date) =
                                           TRUNC (SYSDATE)
                                       AND servicetype = 'ITEM LOCATION'
                                       AND item_type = 'SKU'
                                       AND store_warehouse = 'S';

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;

                    COMMIT;
                    /* Begin the processing of Item Loc file the XML File FOR Warehouse  */
                    fnd_file.put_line (
                        fnd_file.output,
                        'Debug point 2:  Before processing the Itemloc Warehouse  file loop ');
                    /**********************************************************
                     Verifying whether Style already exists for WH Item Loc Style
                     ************************************************************/
                    ln_itemskucount   := NULL;
                    lv_sku_status     := NULL;

                    /*SELECT COUNT(1)
                    INTO
                    LN_ITEMSKUCOUNT
                    FROM
                    XXDOINV007_INT
                    WHERE 1=1
                    AND STORE_WAREHOUSE='WH'
                    AND PROCESSED_FLAG='Y'
                    AND ITEM_TYPE='SKU'
                    AND STATUS_FLAG ='P'
                    AND INVENTORY_ITEM_ID=REC_ITEMLOC.INVENTORY_ITEM_ID; */
                    SELECT COUNT (1)
                      INTO ln_itemskucount
                      --FROM rms13prod.item_loc@rmsprod  --rms13prod.item_loc@rmsprod                                -- commented by BT Tech team
                      FROM item_loc@xxdo_retail_rms   -- added by BT Tech team
                     WHERE     item_parent IS NOT NULL
                           AND loc_type = 'W'
                           AND item = TO_CHAR (rec_itemloc.inventory_item_id);

                    IF ln_itemskucount >= 1
                    THEN
                        lv_op_mode   := 'ITEMLOC_UPDATE';
                        lv_operation   :=
                            'publishXItemLocModifyUsingXItemLocDesc';

                        BEGIN
                            lv_description   := NULL;
                            lv_itemstatus    := NULL;
                            lv_region1       := NULL;

                            SELECT item_description, item_status, region
                              INTO lv_description, lv_itemstatus, lv_region1
                              FROM xxdoinv007_int
                             WHERE     1 = 1
                                   AND organization_id =
                                       rec_itemloc.organization_id
                                   AND processed_flag = 'Y'
                                   AND item_type = 'SKU'
                                   AND store_warehouse = 'WH'
                                   AND status_flag = 'P'
                                   AND inventory_item_id =
                                       rec_itemloc.inventory_item_id
                                   AND ROWNUM = 1
                                   AND transmission_date =
                                       (SELECT MAX (transmission_date)
                                          FROM xxdoinv007_int
                                         WHERE     1 = 1
                                               AND organization_id =
                                                   rec_itemloc.organization_id
                                               AND processed_flag = 'Y'
                                               AND store_warehouse = 'WH'
                                               AND item_type = 'SKU'
                                               AND status_flag = 'P'
                                               AND inventory_item_id =
                                                   rec_itemloc.inventory_item_id);
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retreiving the item description ');
                        END;

                        BEGIN
                            --LV_BRAND := NULL;

                            -- SELECT XXDOINV006_PKG.GET_BRAND_F(NULL,REC_ITEMLOC.INVENTORY_ITEM_ID,REC_ITEMLOC.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                            IF lv_brand <> 'UGG'
                            THEN
                                lv_region1     := 'US';
                                lv_region_ca   := NULL;
                                lv_region_cn   := NULL;
                                lv_region_jp   := NULL;
                                lv_region_uk   := NULL;
                                lv_region_fr   := NULL;
                                lv_region_hk   := NULL;
                            END IF;
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') <> UPPER (TRIM (rec_itemloc.inventory_item_status_code))) OR (UPPER (TRIM (lv_region1)) <> UPPER (TRIM (lv_region_us || ' ' || lv_region_uk || ' ' || lv_region_ca || ' ' || lv_region_cn || ' ' || lv_region_jp || ' ' || lv_region_fr || ' ' || lv_region_hk))))
                        THEN
                            lv_sku_status   := 'N';
                        ELSE
                            lv_sku_status   := 'NR';
                        /* UPDATE XXDOINV007_INT
                         SET STATUS_FLAG='NR'
                         WHERE INVENTORY_ITEM_ID=REC_ITEMLOC.INVENTORY_ITEM_ID
                         AND TRUNC(TRANSMISSION_DATE)=NVL(TRUNC(FND_DATE.canonical_to_date(PV_RUNDATE)),TRUNC(SYSDATE))
                         AND SERVICETYPE='ITEM LOCATION'
                         AND ITEM_TYPE='SKU'
                         AND STORE_WAREHOUSE='WH'; COMMIT;

                 ELSE

                         UPDATE XXDOINV007_INT
                         SET STATUS_FLAG='N'
                         WHERE INVENTORY_ITEM_ID=REC_ITEMLOC.INVENTORY_ITEM_ID
                         AND TRUNC(TRANSMISSION_DATE)=NVL(TRUNC(FND_DATE.canonical_to_date(PV_RUNDATE)),TRUNC(SYSDATE))
                         AND SERVICETYPE='ITEM LOCATION'
                         AND ITEM_TYPE='SKU'
                         AND STORE_WAREHOUSE='WH'; COMMIT;  */
                        END IF;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') != UPPER (TRIM (rec_itemloc.description))) OR (NVL (UPPER (TRIM (lv_itemstatus)), '0') != UPPER (TRIM (rec_itemloc.inventory_item_status_code))))
                        THEN
                            lv_op_mode   := 'ITEMLOC_UPDATE';
                            lv_operation   :=
                                'publishXItemLocModifyUsingXItemLocDesc';
                        END IF;
                    /*

                        IF (UPPER(TRIM(LV_REGION1)) != UPPER(TRIM(LV_REGION_US||' '||LV_REGION_UK||' '||LV_REGION_CA||' '||LV_REGION_CN||' '||LV_REGION_JP)) ) THEN

                           LV_REGION_US:=NULL;

                           FND_FILE.PUT_LINE(FND_FILE.LOG,'US  region is changed to null');

                           IF INSTR(UPPER(TRIM(LV_REGION1)),'CA') = 0 THEN
                               LV_REGION_CA:= 'CA';
                           ELSE
                               LV_REGION_CA:= NULL;
                           END IF;

                           IF INSTR(UPPER(TRIM(LV_REGION1)),'UK') = 0  THEN
                               LV_REGION_UK:='UK';
                           ELSE
                               LV_REGION_UK:=NULL;
                           END IF;

                           IF  INSTR(UPPER(TRIM(LV_REGION1)),'JP')= 0 THEN
                               LV_REGION_JP:='JP';
                           ELSE
                               LV_REGION_JP:=NULL;
                           END IF;

                           IF INSTR(UPPER(TRIM(LV_REGION1)),'CN') = 0 THEN
                               LV_REGION_CN:='CN';
                           ELSE
                               LV_REGION_CN:=NULL;
                           END IF;

                            LV_OP_MODE:='ITEMLOC_CREATE';
                            lv_operation  := 'publishXItemLocCreateUsingXItemLocDesc';

                    UPDATE XXDOINV007_INT
                      SET REGION=LV_REGION_UK||' '||LV_REGION_CA||' '||LV_REGION_CN||' '||LV_REGION_JP
                       WHERE UPPER(TRIM(INVENTORY_ITEM_ID))= UPPER(TRIM(REC_ITEMLOC.INVENTORY_ITEM_ID))
                               AND TRUNC(TRANSMISSION_DATE)=NVL(TRUNC(FND_DATE.canonical_to_date(PV_RUNDATE)),TRUNC(SYSDATE))
                               AND SERVICETYPE='ITEM LOCATION'
                               AND ITEM_TYPE='SKU'
                               AND STORE_WAREHOUSE='WH';
                        END IF;  */
                    ELSE
                        ln_parentcount   := NULL;

                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemskucount
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                            -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (
                                           rec_itemloc.inventory_item_id)
                                   AND item_level = 2;

                            IF ln_itemskucount >= 1
                            THEN
                                BEGIN
                                    SELECT COUNT (1)
                                      INTO ln_parentcount
                                      --FROM rms13prod.item_loc@rmsprod  --rms13prod.item_loc@rmsprod                            -- commented by BT Tech team
                                      FROM item_loc@xxdo_retail_rms
                                     -- added by BT Tech team
                                     WHERE     item_parent IS NULL
                                           AND loc_type = 'W'
                                           AND item = rec_itemloc.segment1;

                                    IF ln_parentcount >= 1
                                    THEN
                                        lv_op_mode      := 'ITEMLOC_CREATE';
                                        lv_operation    :=
                                            'publishXItemLocCreateUsingXItemLocDesc';
                                        lv_sku_status   := 'N';
                                    ELSE
                                        lv_op_mode      := 'ITEMLOC_CREATE';
                                        lv_operation    :=
                                            'publishXItemLocCreateUsingXItemLocDesc';
                                        lv_sku_status   := 'NP';
                                    END IF;
                                END;
                            ELSE
                                lv_op_mode      := 'ITEMLOC_CREATE';
                                lv_operation    :=
                                    'publishXItemLocCreateUsingXItemLocDesc';
                                lv_sku_status   := 'NSK';
                            END IF;
                        END;
                    END IF;

                    /* Updating with the Operation Mode */

                    /*    UPDATE XXDOINV007_INT
                        SET OPERATION=LV_OP_MODE
                        WHERE UPPER(TRIM(INVENTORY_ITEM_ID))= UPPER(TRIM(REC_ITEMLOC.INVENTORY_ITEM_ID))
                             AND TRUNC(TRANSMISSION_DATE)=NVL(TRUNC(FND_DATE.canonical_to_date(PV_RUNDATE)),TRUNC(SYSDATE))
                             AND SERVICETYPE='ITEM LOCATION'
                             AND ITEM_TYPE='SKU'
                             AND STORE_WAREHOUSE='WH'; */
                    --COMMENTED BY NAGA

                    --COMMIT;
                    fnd_file.put_line (
                        fnd_file.output,
                           'REGIONS BEFORE WAREHOUSE CURSOR'
                        || lv_region_us
                        || ' '
                        || lv_region_ca
                        || ' '
                        || lv_region_cn
                        || ' '
                        || lv_region_jp
                        || ' '
                        || lv_region_uk
                        || ' '
                        || lv_region_fr
                        || ' '
                        || lv_region_hk);
                    lv_region_us      := 'US';

                    FOR k
                        IN c_itemloc_sku_wh (rec_itemloc.inventory_item_id,
                                             rec_itemloc.organization_id,
                                             lv_region_us,
                                             lv_region_ca,
                                             lv_region_cn,
                                             lv_region_jp,
                                             lv_region_uk,
                                             lv_region_fr,
                                             lv_region_hk)
                    LOOP
                        /* Inserting the data into staging table */
                        BEGIN
                            INSERT INTO xxdoinv007_int (slno,
                                                        servicetype,
                                                        item_type,
                                                        inventory_item_id,
                                                        item_status,
                                                        item_description,
                                                        organization_id,
                                                        store_warehouse,
                                                        operation,
                                                        region,
                                                        xdata,
                                                        status_flag)
                                     VALUES (
                                                xxdoinv007_int_s.NEXTVAL,
                                                'ITEM LOCATION',
                                                'SKU',
                                                rec_itemloc.inventory_item_id,
                                                rec_itemloc.inventory_item_status_code,
                                                rec_itemloc.description,
                                                rec_itemloc.organization_id,
                                                'WH',
                                                lv_op_mode,
                                                UPPER (
                                                    TRIM (
                                                           lv_region_us
                                                        || ' '
                                                        || lv_region_uk
                                                        || ' '
                                                        || lv_region_ca
                                                        || ' '
                                                        || lv_region_cn
                                                        || ' '
                                                        || lv_region_jp
                                                        || ' '
                                                        || lv_region_fr
                                                        || ' '
                                                        || lv_region_hk)),
                                                XMLTYPE.getclobval (
                                                    k.itemloc),
                                                lv_sku_status);

                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 100)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                /* Updating the existing record to validation error and storing the error code  */
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE     inventory_item_id =
                                           rec_itemloc.inventory_item_id
                                       AND TRUNC (transmission_date) =
                                           TRUNC (SYSDATE)
                                       AND servicetype = 'ITEM LOCATION'
                                       AND item_type = 'SKU'
                                       AND store_warehouse = 'WH';

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;

                    COMMIT;

                    /* Publish Item Location */
                    FOR j IN c_itemlocpublish (rec_itemloc.inventory_item_id)
                    LOOP
                        IF j.operation = 'ITEMLOC_CREATE'
                        THEN
                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXItemLocCreateUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">

'
                                    || j.xdata
                                    || '</publishXItemLocCreateUsingXItemLocDesc>');
                        ELSE
                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXItemLocModifyUsingXItemLocDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemLocPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemLocDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemLocDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemLocDesc/v1"

xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemLocDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemLocDesc/v1"

xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemLocDesc/v1"


xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemLocDesc/v1">'
                                    || j.xdata
                                    || '</publishXItemLocModifyUsingXItemLocDesc>');
                        END IF;

                        /* Calling the webservice here */
                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv007_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = j.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv007_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = j.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv007_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = j.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                /* End calling the webservice   */
                    END LOOP;                            /* For Publish Loc */
                END LOOP;
            END LOOP;
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Loc SKU Procedure and it is    '
                || SQLERRM);
    END;

    PROCEDURE publish_item_p (pv_errorbuf    OUT VARCHAR2,
                              pv_retcode     OUT VARCHAR2,
                              pv_rundate         VARCHAR2,
                              pv_reprocess       VARCHAR2,
                              pv_fromdate        VARCHAR2,
                              pv_todate          VARCHAR2)
    IS
        lv_wsdl_ip             VARCHAR2 (25);
        lv_wsdl_url            VARCHAR2 (4000);
        lv_namespace           VARCHAR2 (4000);
        lv_service             VARCHAR2 (4000);
        lv_port                VARCHAR2 (4000);
        lv_operation           VARCHAR2 (4000);
        lv_targetname          VARCHAR2 (4000);
        lx_xmltype_in          SYS.XMLTYPE;
        lx_xmltype_out         SYS.XMLTYPE;
        lc_return              CLOB;
        lv_item_mdflag         VARCHAR2 (1) := 'N';
        ln_itemstylecount      NUMBER;
        lv_op_mode             VARCHAR2 (60);
        lv_errmsg              VARCHAR2 (240);
        lv_style_status        VARCHAR2 (10) := 'N';
        /* Modification variables test */
        lv_description         xxdoinv006_int.item_description%TYPE;
        lv_itemstatus          xxdoinv006_int.item_status%TYPE;
        lv_vertex              xxdoinv006_int.vertex_tax%TYPE;
        lv_subclass            xxdoinv006_int.subclass%TYPE;
        lv_counter             NUMBER := 0;
        lv_rec_count           NUMBER;
        lv_min_slno            NUMBER;
        lv_max_slno            NUMBER;
        lv_from_slno           NUMBER;
        lv_to_slno             NUMBER;
        lv_batch_count         NUMBER;
        ln_request_id          NUMBER;
        lv_request_id          NUMBER := fnd_global.conc_request_id;
        lv_noof_items          NUMBER := 0;
        lv_item_cost           NUMBER := 0;
        lv_req_phase           VARCHAR2 (100);
        lv_req_status          VARCHAR2 (100);
        lv_req_dev_phase       VARCHAR2 (1000);
        lv_req_dev_status      VARCHAR2 (100);
        lv_req_message         VARCHAR2 (2400);
        lv_req_return_status   BOOLEAN;
        req_data               VARCHAR2 (20);
        l_batch_size           NUMBER := 1;
        l_rundate              DATE := NULL;
        ln_styledupcount       NUMBER;             -- Added for 3.2 by Infosys
        l_style                VARCHAR2 (50);      -- Added for 3.2 by Infosys

        CURSOR c_item IS
            SELECT organization_id, style, description,
                   scale_code_id, transmit_item_rms, dept,
                   CLASS, subclass, subclass_create_date,
                   subclass_update_date, subclass_updatedby, vertex_tax,
                   vertex_create_date, vertex_update_date, vertex_updatedby,
                   us_region_cost, uk_region_cost, jp_region_cost,
                   ca_region_cost, cn_region_cost, fr_region_cost,
                   hk_region_cost, us_region_price, ca_region_price,
                   uk_region_price, cn_region_price, jp_region_price,
                   fr_region_price, hk_region_price, row_num
              /*FROM (SELECT msib.organization_id, msib.segment1 style,                                        -- commented by BT Tech team - START
                           msib.description, msib.attribute13 scale_code_id,
                           msib.attribute27 transmit_item_rms, */
              -- commented by BT Tech team - END
              FROM (SELECT msib.organization_id, msib.style_number style, -- added by BT Tech team - START
                                                                          msib.item_description description,
                           msib.size_scale_id scale_code_id, msib.item_type transmit_item_rms, -- added by BT Tech team - END
                                                                                               xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id, msib.organization_id) dept,
                           xxdoinv006_pkg.get_class_f (msib.inventory_item_id, msib.organization_id) CLASS, -- Start modification by BT Technology Team on 01/07/15
                                                                                                            --                        xxdoinv006_pkg.get_class_f
                                                                                                            -- End modification by BT Technology Team on 01/07/15
                                                                                                            xxdoinv006_pkg.get_sub_class_f (msib.inventory_item_id, msib.organization_id) subclass, NULL subclass_create_date,
                           NULL subclass_update_date, NULL subclass_updatedby, xxdoinv006_pkg.get_vertex_tax_f (msib.inventory_item_id, msib.organization_id) vertex_tax,
                           NULL vertex_create_date, NULL vertex_update_date, NULL vertex_updatedby,
                           0.01 us_region_cost, 0.01 uk_region_cost, 0.01 jp_region_cost,
                           0.01 ca_region_cost, 0.01 cn_region_cost, 0.01 fr_region_cost,
                           0.01 hk_region_cost, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('USRU'), msib.inventory_item_id), 0.01) us_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CAR'), msib.inventory_item_id), 0.01) ca_region_price,
                           NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('UKR'), msib.inventory_item_id), 0.01) uk_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CNR'), msib.inventory_item_id), 0.01) cn_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('JPR'), msib.inventory_item_id), 0.01) jp_region_price,
                           NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('FRR'), msib.inventory_item_id), 0.01) fr_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('HKR'), msib.inventory_item_id), 0.01) hk_region_price, --RANK () OVER (PARTITION BY msib.segment1 ORDER BY msib.inventory_item_id) row_num                    -- commented by BT Tech team
                                                                                                                                                                                                                                                                     RANK () OVER (PARTITION BY msib.style_number ORDER BY msib.inventory_item_id) row_num
                      -- added by BT Tech team
                      FROM apps.mtl_categories_b mc, apps.mtl_item_categories mic, --apps.mtl_system_items_b msib,                                                                        -- commented by BT Tech team
                                                                                   apps.xxd_common_items_v msib -- added by BT Tech team
                     --                       ,apps.mtl_item_categories mic1,-- Commented for v1.3*
                     --                        apps.mtl_categories mc1 -- Commented for v1.3*
                     WHERE     1 = 1
                           AND mic.inventory_item_id = msib.inventory_item_id
                           AND mic.organization_id = msib.organization_id
                           AND mic.category_id = mc.category_id
                           --AND mc.structure_id = 50202                                                                            -- commented by BT Tech team
                           AND mc.structure_id =
                               (SELECT structure_id
                                  -- added by BT Tech team - START
                                  FROM mtl_category_sets
                                 WHERE category_set_name =
                                       'OM Sales Category')
                           -- added by BT Tech team - END
                           --AND msib.organization_id = 7                                                                            -- commented by BT Tech team
                           AND msib.organization_id IN
                                   (SELECT ood.organization_id
                                      -- added by BT Tech team - START
                                      FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                                     WHERE     lookup_type =
                                               'XXD_1206_INV_ORG_MAPPING'
                                           AND lookup_code = 7
                                           AND flv.attribute1 =
                                               ood.organization_code
                                           AND LANGUAGE = USERENV ('LANG'))
                           -- added by BT Tech team - END
                           --                    AND msib.inventory_item_id = mic1.inventory_item_id -- Commented for v1.3*
                           --                    AND msib.organization_id = mic1.organization_id -- Commented for v1.3*
                           --                    AND mic1.category_id = mc1.category_id -- Commented for v1.3*
                           --AND mc1.structure_id = 101                                                                            -- commented by BT Tech team
                           -- Commented for v1.3*
                           /*
                                               AND mc1.structure_id =
                                                                 (SELECT structure_id
                                                                    -- added by BT Tech team - START
                                                                  FROM   mtl_category_sets
                                                                   WHERE category_set_name = 'Inventory')
                           */
                           -- added by BT Tech team - END
                           --AND mc1.segment4 <> 'SAMPLE'    --Commented by BT Technology Team V1.1 08Mar2015
                           AND msib.item_type NOT IN
                                   ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                           --AND mic1.organization_id = 7                                                                            -- commented by BT Tech team
                           -- Commented for v1.3*
                           /*
                                               AND mic1.organization_id =
                                                      (SELECT ood.organization_id
                                                         -- added by BT Tech team - START
                                                       FROM   apps.fnd_lookup_values flv,
                                                              apps.org_organization_definitions ood
                                                        WHERE lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                                          AND lookup_code = 7
                                                          AND flv.attribute1 = ood.organization_code
                                                          AND LANGUAGE = USERENV ('LANG'))
                           */
                           -- added by BT Tech team - END
                           --AND msib.segment3 <> 'ALL'                                                                            -- commented by BT Tech team
                           AND NVL (msib.item_type, 'X') <> 'GENERIC'
                           -- added by BT Tech team
                           --AND msib.attribute13 IS NOT NULL                                                                        -- commented by BT Tech team
                           AND msib.size_scale_id IS NOT NULL
                           -- added by BT Tech team
                           --AND msib.attribute11 IS NOT NULL                                                                        -- commented by BT Tech team
                           AND msib.upc_code IS NOT NULL -- added by BT Tech team
                           ----------------------------------------------------------------------------------------------------------
                           AND TRUNC (msib.last_update_date) =
                               NVL (l_rundate, TRUNC (SYSDATE))
                           -----------------------------------------------------------------------------------------------------------
                           AND xxdoinv006_pkg.get_dept_num_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)
                                   IS NOT NULL
                           AND NOT EXISTS
                                   (SELECT 1
                                      FROM apps.fnd_lookup_values
                                     WHERE     lookup_type =
                                               'XXDOINV007_STYLE'
                                           AND enabled_flag = 'Y'
                                           AND LANGUAGE = 'US'
                                           --AND description = msib.segment1)                            -- commented by BT Tech team
                                           AND description =
                                               msib.style_number)--Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                 /*AND EXISTS (
                                                                        SELECT 1
                                                                          FROM apps.qp_pricing_attributes qpa,
                                                                               apps.qp_list_lines qll,
                                                                               apps.qp_list_headers qlh
                                                                         WHERE 1 = 1
                                                                           AND qpa.list_line_id = qll.list_line_id
                                                                           AND qll.list_header_id = qlh.list_header_id
                                                                           AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                                                                           AND qpa.product_attr_value = mc.category_id
                                                                           AND qpa.product_attribute_context = 'ITEM'
                                                                           AND qlh.NAME = 'Retail - US')
                                                                           */
                                                                 --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                 )
             WHERE row_num = 1;

        CURSOR c_itemstyle (pv_segment1 VARCHAR2, pv_style VARCHAR2, -- Added for 3.2 by Infosys
                                                                     pn_orgn_id NUMBER, pv_us_region_cost NUMBER, pv_us_region_price NUMBER, pv_uk_region_cost NUMBER, pv_uk_region_price NUMBER, pv_ca_region_cost NUMBER, pv_ca_region_price NUMBER, pv_cn_region_cost NUMBER, pv_cn_region_price NUMBER, pv_jp_region_cost NUMBER, pv_jp_region_price NUMBER, pv_fr_region_cost NUMBER, pv_fr_region_price NUMBER, pv_hk_region_cost NUMBER, pv_hk_region_price NUMBER, pv_dept NUMBER
                            , pv_class VARCHAR2-- Start modification by BT Technology Team on 01/07/15
                                               , pv_subclass VARCHAR2-- End modification by BT Technology Team on 01/07/15
                                                                     )
        IS
            SELECT                                                   --XMLAGG(
                   XMLELEMENT (
                       "v1:XItemDesc",
                       xmlattributes (
                           'http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1'
                               AS "xmlns:v1"),
                       --XMLELEMENT ("v1:item", msib.segment1),                                                            -- commented by BT Tech team
                       --XMLELEMENT ("v1:item", msib.style_number),       -- commented for 3.2 by Infosys
                       XMLELEMENT ("v1:item", pv_style), -- Added for 3.2 by Infosys
                       -- added by BT Tech team
                       XMLELEMENT ("v1:item_parent", ''),
                       XMLELEMENT ("v1:item_grandparent", ''),
                       XMLELEMENT ("v1:pack_ind", 'N'),
                       XMLELEMENT ("v1:item_level", 1),
                       XMLELEMENT ("v1:tran_level", 2),
                       XMLELEMENT ("v1:diff_1", 'ALL COLORS'),
                       --XMLELEMENT ("v1:diff_2", msib.attribute13),                                                        -- commented by BT Tech team
                       -- Start modification by BT Team for CR 96
                       --                    XMLELEMENT ("v1:diff_2", msib.size_scale_id),
                       XMLELEMENT ("v1:diff_2", '9999'),
                       -- End modification by BT Team for CR 96
                       -- added by BT Tech team
                       XMLELEMENT ("v1:diff_3", ''),
                       XMLELEMENT ("v1:diff_4", ''),
                       XMLELEMENT ("v1:dept", pv_dept),
                       -- XXDOINV006_PKG.get_dept_num_f (msib.inventory_item_id, msib.organization_id )),
                       XMLELEMENT ("v1:class", pv_class),
                       --XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       -- Start modification by BT Technology Team on 01/07/15
                       --                    XMLELEMENT ("v1:subclass", pv_class),
                       XMLELEMENT ("v1:subclass", pv_subclass),
                       -- End modification by BT Technology Team on 01/07/15
                       --XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       --XMLELEMENT ("v1:item_desc", msib.description),                                                    -- commented by BT Tech team
                       XMLELEMENT ("v1:item_desc", msib.item_description),
                       -- added by BT Tech team
                       XMLELEMENT ("v1:iscloc_hier_level", 'RE'),
                       XMLELEMENT ("v1:izp_hier_level", 'RE'),
                       --XMLELEMENT ("v1:item_desc", msib.description),                                                    -- commented by BT Tech team
                       XMLELEMENT ("v1:short_desc", msib.item_description),
                       -- added by BT Tech team
                       XMLELEMENT ("v1:retail_zone_group_id", 1),
                       XMLELEMENT ("v1:cost_zone_group_id", 1000),
                       XMLELEMENT ("v1:standard_uom", 'EA'),
                       XMLELEMENT ("v1:store_ord_mult", 'E'),
                       XMLELEMENT ("v1:forecast_ind", 'N'),
                       XMLELEMENT ("v1:simple_pack_ind", 'N'),
                       XMLELEMENT ("v1:contains_inner_ind", 'N'),
                       XMLELEMENT ("v1:sellable_ind", 'Y'),
                       XMLELEMENT ("v1:orderable_ind", 'Y'),
                       XMLELEMENT ("v1:pack_type", ''),
                       XMLELEMENT ("v1:order_as_type", ''),
                       XMLELEMENT ("v1:create_datetime", ''),
                       XMLELEMENT ("v1:XItemCtryDesc",
                                   XMLELEMENT ("v1:country_id", 'US')),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('FR')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'FR'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_fr_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_fr_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('FR')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('HK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'HK'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_hk_region_cost),
                               -- XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_hk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('HK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('UK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'GB'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_uk_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_uk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupctydesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('UK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('JP')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'JP'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_jp_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_jp_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupctydesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('JP')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CA')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CA'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_ca_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_ca_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CA')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CN')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CN'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_cn_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_cn_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       UPPER (NVL (msib.weight_uom_code, ''))),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')),
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CN')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('US')),
                           XMLELEMENT ("v1:primary_supp_ind", 'Y'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'US'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_us_region_cost),
                               --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_us_region_cost),
                                   --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_us_region_cost),
                                   --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_us_region_cost),
                                   --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_us_region_cost)),
                               --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('US')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemVatDesc",
                           XMLELEMENT ("v1:vat_type", 'B'),
                           XMLELEMENT ("v1:vat_region", '1000'),
                           XMLELEMENT ("v1:vat_code", 'S'),
                           XMLELEMENT (
                               "v1:active_date",
                                  TO_CHAR (SYSDATE, 'YYYY-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS'))),
                       --xmlitemzpdesc
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '212'),                            -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('FR')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_fr_region_price-- End modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('FR')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '102'),                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CA')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_ca_region_price),
                           --XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CA')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '200'),                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('UK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_uk_region_price),
                           -- XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('UK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '301'),                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CN')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_cn_region_price),
                           --  XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CN')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '300'),                                        -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('JP')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_jp_region_price),
                           --XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('JP')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '101'),                                            -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_us_region_price),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '305'),                                            -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('HK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_hk_region_price-- End modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('HK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 1),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_vertex_tax_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_vertex_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_vertex_updatedate_f --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                          )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_vertex_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 2),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_sub_group_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_sub_group_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_sub_group_updatedate_f --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                         )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_sub_group_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT ("v1:status", 'A'),
                       XMLELEMENT ("v1:uom_conv_factor", ''),
                       XMLELEMENT ("v1:package_size", 1),
                       XMLELEMENT ("v1:handling_temp", ''),
                       XMLELEMENT ("v1:handling_sensitivity", ''),
                       XMLELEMENT ("v1:mfg_rec_retail", ''),
                       XMLELEMENT ("v1:waste_type", ''),
                       XMLELEMENT ("v1:waste_pct", ''),
                       XMLELEMENT ("v1:item_number_type", 'MANL'),
                       XMLELEMENT ("v1:catch_weight_ind", 'N'),
                       XMLELEMENT ("v1:const_dimen_ind", 'N'),
                       XMLELEMENT ("v1:gift_wrap_ind", 'N'),
                       XMLELEMENT ("v1:ship_alone_ind", 'N'),
                       XMLELEMENT ("v1:ext_source_system", ''),
                       XMLELEMENT ("v1:size_group1", ''),
                       XMLELEMENT ("v1:size_group2", ''),
                       XMLELEMENT ("v1:size1", ''),
                       XMLELEMENT ("v1:size2", ''),
                       XMLELEMENT ("v1:color", ''),
                       XMLELEMENT ("v1:system_ind", ''),
                       XMLELEMENT ("v1:upc_supplement", ''),
                       XMLELEMENT ("v1:upc_type", ''),
                       XMLELEMENT ("v1:primary_upc_ind", ''),
                       XMLELEMENT ("v1:primary_repl_ind", ''),
                       XMLELEMENT ("v1:item_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_1_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_2_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_3_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_4_aggregate_ind", ''),
                       XMLELEMENT ("v1:perishable_ind", 'N'),
                       XMLELEMENT ("v1:notional_pack_ind", 'N'),
                       XMLELEMENT ("v1:soh_inquiry_at_pack_ind", 'N'),
                       XMLELEMENT ("v1:aip_case_type", ''),
                       XMLELEMENT ("v1:banded_item_ind", 'N'),
                       XMLELEMENT ("v1:order_type", ''),
                       XMLELEMENT ("v1:sale_type", ''),
                       XMLELEMENT ("v1:catch_weight_uom", ''),
                       XMLELEMENT ("v1:deposit_item_type", ''),
                       XMLELEMENT ("v1:inventory_ind", 'Y'),
                       XMLELEMENT ("v1:item_xform_ind", 'N'),
                       XMLELEMENT ("v1:container_item", ''),
                       XMLELEMENT ("v1:package_uom", '')) itemxml
              FROM --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   /*qp_pricing_attributes qpa,
                   qp_list_lines qll,
                   qp_list_headers qlh,*/
                   --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   --                mtl_categories_b mc, --Commented for v1.3*
                   --                mtl_category_sets mcs, --Commented for v1.3*
                   --                mtl_item_categories mic, --Commented for v1.3*
                   --mtl_system_items_b msib,                                                                        -- commented by BT Tech team
                   apps.xxd_common_items_v msib
             --                ,         -- added by BT Tech team --Commented for v1.3*
             --                apps.mtl_item_categories mic1,   --Commented for v1.3*
             --Added by Reddeiah #DFCT0010916
             --                apps.mtl_categories mc1       --Added by Reddeiah #DFCT0010916   --Commented for v1.3*
             WHERE     --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                       1 = 1
                   /*qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id*/
                   --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   --            AND mic.inventory_item_id = msib.inventory_item_id --Commented for v1.3*
                   --            AND mic.organization_id = msib.organization_id  --Commented for v1.3*
                   --             and mc.structure_id   = mcs.structure_id --Commented for v1.3*
                   --AND qpa.product_attribute = 'PRICING_ATTRIBUTE2' --Commented for v1.3
                   --AND qpa.product_attr_value = mc.category_id --Commented for v1.3
                   --and qpa.product_attr_value = to_char(mc.category_id) --Commented for v1.3
                   --            AND mic.category_id = mc.category_id  --Commented for v1.3*
                   --             and mic.category_set_id = mcs.category_set_id  --Commented for v1.3*
                   --AND msib.organization_id = 7                                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   --            AND msib.inventory_item_id = mic1.inventory_item_id   --Commented for v1.3*
                   --Added by Reddeiah #DFCT0010916
                   --            AND msib.organization_id = mic1.organization_id   --Commented for v1.3*
                   --Added by Reddeiah #DFCT0010916
                   --            AND mic1.category_id = mc1.category_id   --Commented for v1.3*
                   --Added by Reddeiah #DFCT0010916
                   --AND mc1.structure_id = 101        --Added by Reddeiah #DFCT0010916                                 -- commented by BT Tech team
                   /*
                     --Commented for v1.3*
                               AND mc1.structure_id =
                                           (SELECT structure_id  -- added by BT Tech team - START
                                              FROM mtl_category_sets
                                             WHERE category_set_name = 'Inventory')
                   */
                   -- added by BT Tech team - END
                   --AND mc1.segment4 <> 'SAMPLE'  --Commented by BT Technology Team V1.1 08Mar2015    --Added by Reddeiah #DFCT0010916
                   AND msib.item_type NOT IN
                           ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                   --AND mic1.organization_id = 7      --Added by Reddeiah #DFCT0010916                                -- commented by BT Tech team
                   --Commented for v1.3*
                   /*
                               AND mic1.organization_id =
                                      (SELECT ood.organization_id
                                         -- added by BT Tech team - START
                                       FROM   apps.fnd_lookup_values flv,
                                              apps.org_organization_definitions ood
                                        WHERE lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                          AND lookup_code = 7
                                          AND flv.attribute1 = ood.organization_code
                                          AND LANGUAGE = USERENV ('LANG'))
                   */
                   -- added by BT Tech team - END
                   -- and msib.inventory_item_status_code = 'Active'
                   --AND qpa.product_attribute_context = 'ITEM' --Commented for v1.3
                   --AND msib.segment1 = pv_segment1                                                                    -- commented by BT Tech team
                   AND msib.style_number = pv_segment1 -- added by BT Tech team
                   AND msib.organization_id = pn_orgn_id
                   -- and msib.segment1= msi.segment1
                   -- and msib.organization_id=msi.organization_id
                   --AND qlh.NAME = 'Retail - US' -- Commented for CRP3 Unit testing till setup will be done --Commented for v1.3
                   --AND mc.structure_id = 50202                                                                        -- commented by BT Tech team
                   /*
                    --Commented for v1.3*
                               AND mc.structure_id =
                                           (SELECT structure_id  -- added by BT Tech team - START
                                              FROM mtl_category_sets
                                             WHERE category_set_name = 'OM Sales Category')
                   */
                   -- added by BT Tech team - END
                   -- and mcs.category_set_name='Styles'
                   --   AND msib.segment1 NOT LIKE 'S%L' --Commented by Reddeiah #DFCT0010916
                   --   AND msib.segment1 NOT LIKE 'S%R' --Commented by Reddeiah #DFCT0010916
                   --AND msib.segment3 <> 'ALL'                                                                        -- commented by BT Tech team
                   AND msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND ROWNUM = 1;

        CURSOR c_itempublish (pv_segment1 VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006_int
             WHERE     style_status_flag = 'N'
                   AND item_type = 'STYLE'
                   AND style = pv_segment1;

        CURSOR c_itemrepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006_int
             WHERE     style_status_flag IN ('VE', 'P')
                   AND item_type = 'STYLE'
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        req_data    := fnd_conc_global.request_data;
        l_rundate   := TRUNC (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'));

        IF (req_data IS NULL)
        THEN
            BEGIN
                SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                         --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                         'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                                  apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
                  INTO lv_wsdl_ip
                  FROM apps.fnd_product_groups;

                apps.fnd_file.put_line (apps.fnd_file.LOG,
                                        'lv_wsdl_ip' || lv_wsdl_ip);
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the File server name');
                    pv_retcode   := 2;
            END;

            /* Initializing the Item loc web service variables */
            lv_wsdl_url      :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService?WSDL';
            lv_namespace     :=
                'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
            lv_service       := 'XItemPublishingService';
            lv_port          := 'XItemPublishingPort';
            lv_operation     := 'publishXItemCreateUsingXItemDesc';
            lv_targetname    :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService';

            -- Reprocess
            IF pv_reprocess = 'Y'
            THEN
                FOR rec_reprocess IN c_itemrepublish (pv_fromdate, pv_todate)
                LOOP
                    l_style   := NULL;             -- Added for 3.2 by Infosys
                    l_style   :=
                        SUBSTR (rec_reprocess.style,
                                INSTR (rec_reprocess.style, '-', 1) + 1); -- Added for 3.2 by Infosys

                    fnd_file.put_line (fnd_file.LOG,
                                       'reprocess-l_style ' || l_style);
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'rec_reprocess.style ' || rec_reprocess.style);

                    FOR i
                        IN c_itemstyle (l_style,   -- Added for 3.2 by Infosys
                                        rec_reprocess.style,
                                        rec_reprocess.organization_id,
                                        rec_reprocess.us_region_cost,
                                        rec_reprocess.us_region_price,
                                        rec_reprocess.uk_region_cost,
                                        rec_reprocess.uk_region_price,
                                        rec_reprocess.ca_region_cost,
                                        rec_reprocess.ca_region_price,
                                        rec_reprocess.cn_region_cost,
                                        rec_reprocess.cn_region_price,
                                        rec_reprocess.jp_region_cost,
                                        rec_reprocess.jp_region_price,
                                        rec_reprocess.fr_region_cost,
                                        rec_reprocess.fr_region_price,
                                        rec_reprocess.hk_region_cost,
                                        rec_reprocess.hk_region_price,
                                        rec_reprocess.department,
                                        rec_reprocess.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                           ,
                                        rec_reprocess.subCLASS-- Start modification by BT Technology Team on 01/07/15
                                                              )
                    LOOP
                        BEGIN
                            UPDATE xxdoinv006_int
                               SET xdata   = XMLTYPE.getclobval (i.itemxml)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv006_int
                                   SET style_status_flag = 'VE', errorcode = lv_errmsg, xdata = XMLTYPE.getclobval (i.itemxml)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */

                    /* Publish Item  */
                    IF rec_reprocess.operation = 'ITEM_CREATE'
                    THEN
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemCreateUsingXItemDesc
                          xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                          xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                          xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                          xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                          xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                          xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                          xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                          xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                          xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                          xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                          xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXItemCreateUsingXItemDesc>');
                    ELSE
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemModifyUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXItemModifyUsingXItemDesc>');
                    END IF;

                    /* Calling the webservice here */
                    BEGIN
                        lx_xmltype_out   :=
                            xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                      , lx_xmltype_in);

                        IF lx_xmltype_out IS NOT NULL
                        THEN
                            fnd_file.put_line (
                                fnd_file.output,
                                'Response is stored in the staging table  ');
                            lc_return   :=
                                XMLTYPE.getclobval (lx_xmltype_out);

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', style_status_flag = 'P',
                                   transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        ELSE
                            fnd_file.put_line (fnd_file.output,
                                               'Response is NULL  ');
                            lc_return   := NULL;

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, style_status_flag = 'VE', transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        END IF;

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv006_int
                               SET style_status_flag = 'VE', errorcode = lv_errmsg
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                || SQLERRM);
                    END;                    /* End calling the webservice   */
                END LOOP;                                 /* For REPublish  */
            ELSE
                FOR rec_item IN c_item
                LOOP
                    /* Start-3.2 Added Validation of duplicate style*/
                    ln_styledupcount    := NULL;
                    l_style             := NULL;


                    SELECT COUNT (1)
                      INTO ln_styledupcount
                      FROM mtl_system_items_b
                     WHERE TO_CHAR (inventory_item_id) = rec_item.style;


                    IF ln_styledupcount <> 0
                    THEN
                        l_style   := 'RMS-' || (rec_item.style);
                    ELSE
                        l_style   := rec_item.style;
                    END IF;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_styledupcount ' || ln_styledupcount);

                    fnd_file.put_line (fnd_file.LOG, 'l_style ' || l_style);
                    /*End-3.2 */

                    /* Validating the Mandatory data */
                    ln_itemstylecount   := NULL;

                    SELECT COUNT (1)
                      INTO ln_itemstylecount
                      -- FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                -- commented by BT Tech team
                      FROM item_master@xxdo_retail_rms -- added by BT Tech team
                     --WHERE item = (rec_item.style)  --commented for 3.2 by Infosys
                     WHERE item = l_style          -- Added for 3.2 by Infosys
                                          AND item_level = 1;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_itemstylecount ' || ln_itemstylecount);

                    IF ln_itemstylecount >= 1
                    THEN
                        lv_op_mode     := 'ITEM_UPDATE';
                        lv_operation   := 'publishXItemModifyUsingXItemDesc';

                        /* Fetching the processed record of the Max transmission date */
                        BEGIN
                            --------------------------------------------------------------------------------------------
                            SELECT item_desc
                              INTO lv_description
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                            -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE item_level = 1 --AND item = rec_item.style;   --commented for 3.2 by Infosys
                                                  AND item = l_style; -- Added for 3.2 by Infosys
                        ----------------------------------------------------------------------------------------------
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retrieing the item description ');
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_item.description))))
                        THEN
                            lv_style_status   := 'N';
                        ELSE
                            lv_style_status   := 'NR';
                        END IF;
                    ELSE
                        lv_op_mode        := 'ITEM_CREATE';
                        lv_operation      := 'publishXItemCreateUsingXItemDesc';
                        lv_style_status   := 'N';
                        fnd_file.put_line (fnd_file.LOG,
                                           'In ELSE ' || ln_itemstylecount);
                    END IF;

                    IF    rec_item.dept IS NULL
                       OR rec_item.CLASS IS NULL
                       OR rec_item.scale_code_id IS NULL
                       -- Start modification by BT Technology Team on 01/07/15
                       OR rec_item.subclass IS NULL
                    -- Start modification by BT Technology Team on 01/07/15
                    THEN
                        lv_style_status   := 'NOCLASS';
                        fnd_file.put_line (fnd_file.LOG, 'Mandatory columns like Department, Class, Scale Code id either one or all of them is missing  for Style
        ' || rec_item.style);
                    END IF;

                    /* Inserting the data into Staging table using the code */
                    FOR i
                        IN c_itemstyle (rec_item.style, l_style, -- Added for 3.2 by Infosys
                                                                 rec_item.organization_id, rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, rec_item.dept
                                        , rec_item.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                        , rec_item.SUBCLASS-- End modification by BT Technology Team on 01/07/15
                                                                           )
                    LOOP
                        BEGIN
                            INSERT INTO xxdoinv006_int (
                                            slno,
                                            servicetype,
                                            item_type,
                                            operation,
                                            organization_id,
                                            style,
                                            item_status,
                                            item_description,
                                            scale_code_id,
                                            department,
                                            CLASS,
                                            subclass,
                                            subclass_creation_date,
                                            subclass_update_date,
                                            subclass_updatedby,
                                            vertex_tax,
                                            vertex_creation_date,
                                            vertex_update_date,
                                            vertex_updatedby,
                                            us_region_cost,
                                            us_region_price,
                                            uk_region_cost,
                                            uk_region_price,
                                            ca_region_cost,
                                            ca_region_price,
                                            cn_region_cost,
                                            cn_region_price,
                                            jp_region_cost,
                                            jp_region_price,
                                            fr_region_cost,
                                            fr_region_price,
                                            hk_region_cost,
                                            hk_region_price,
                                            style_status_flag,
                                            xdata,
                                            parent_request_id)
                                     VALUES (xxdoinv006_int_s.NEXTVAL,
                                             'ITEM ',
                                             'STYLE',
                                             lv_op_mode,
                                             rec_item.organization_id,
                                             --rec_item.style,         --Commented for 3.2 by Infosys
                                             l_style, --Changed for 3.2 by Infosys
                                             'Active',
                                             rec_item.description,
                                             rec_item.scale_code_id,
                                             rec_item.dept,
                                             rec_item.CLASS,
                                             rec_item.subclass,
                                             rec_item.subclass_create_date,
                                             rec_item.subclass_update_date,
                                             rec_item.subclass_updatedby,
                                             rec_item.vertex_tax,
                                             rec_item.vertex_create_date,
                                             rec_item.vertex_update_date,
                                             rec_item.vertex_updatedby,
                                             rec_item.us_region_cost,
                                             rec_item.us_region_price,
                                             rec_item.uk_region_cost,
                                             rec_item.uk_region_price,
                                             rec_item.ca_region_cost,
                                             rec_item.ca_region_price,
                                             rec_item.cn_region_cost,
                                             rec_item.cn_region_price,
                                             rec_item.jp_region_cost,
                                             rec_item.jp_region_price,
                                             rec_item.fr_region_cost,
                                             rec_item.fr_region_price,
                                             rec_item.hk_region_cost,
                                             rec_item.hk_region_price,
                                             lv_style_status,
                                             XMLTYPE.getclobval (i.itemxml),
                                             lv_request_id);

                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 50)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                INSERT INTO xxdoinv006_int (
                                                servicetype,
                                                item_type,
                                                operation,
                                                organization_id,
                                                style,
                                                item_status,
                                                item_description,
                                                scale_code_id,
                                                department,
                                                CLASS,
                                                subclass,
                                                subclass_creation_date,
                                                subclass_update_date,
                                                subclass_updatedby,
                                                vertex_tax,
                                                vertex_creation_date,
                                                vertex_update_date,
                                                vertex_updatedby,
                                                us_region_cost,
                                                us_region_price,
                                                uk_region_cost,
                                                uk_region_price,
                                                ca_region_cost,
                                                ca_region_price,
                                                cn_region_cost,
                                                cn_region_price,
                                                jp_region_cost,
                                                jp_region_price,
                                                fr_region_cost,
                                                fr_region_price,
                                                hk_region_cost,
                                                hk_region_price,
                                                style_status_flag,
                                                errorcode,
                                                xdata,
                                                parent_request_id)
                                         VALUES (
                                                    'ITEM ',
                                                    'STYLE',
                                                    lv_op_mode,
                                                    rec_item.organization_id,
                                                    --rec_item.style,         --Commented for 3.2 by Infosys
                                                    l_style, --Changed for 3.2 by Infosys
                                                    'Active',
                                                    --REC_ITEM.ITEM_STATUS,
                                                    rec_item.description,
                                                    rec_item.scale_code_id,
                                                    rec_item.dept,
                                                    rec_item.CLASS,
                                                    rec_item.subclass,
                                                    rec_item.subclass_create_date,
                                                    rec_item.subclass_update_date,
                                                    rec_item.subclass_updatedby,
                                                    rec_item.vertex_tax,
                                                    rec_item.vertex_create_date,
                                                    rec_item.vertex_update_date,
                                                    rec_item.vertex_updatedby,
                                                    rec_item.us_region_cost,
                                                    rec_item.us_region_price,
                                                    rec_item.uk_region_cost,
                                                    rec_item.uk_region_price,
                                                    rec_item.ca_region_cost,
                                                    rec_item.ca_region_price,
                                                    rec_item.cn_region_cost,
                                                    rec_item.cn_region_price,
                                                    rec_item.jp_region_cost,
                                                    rec_item.jp_region_price,
                                                    rec_item.fr_region_cost,
                                                    rec_item.fr_region_price,
                                                    rec_item.hk_region_cost,
                                                    rec_item.hk_region_price,
                                                    'VE',
                                                    lv_errmsg,
                                                    XMLTYPE.getclobval (
                                                        i.itemxml),
                                                    lv_request_id);

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;

                    COMMIT;
                /*
                  FOR j IN c_itempublish (rec_item.style)
                  LOOP
                     IF j.operation = 'ITEM_CREATE'
                     THEN
                        lx_xmltype_in :=
                           SYS.XMLTYPE
                              (   '<publishXItemCreateUsingXItemDesc
                                xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                                xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                                xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                                xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                                xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                                xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                                xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                                xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                                xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                                xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                                xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                                xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                                xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                                xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                                xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                               || j.xdata
                               || '</publishXItemCreateUsingXItemDesc>'
                              );
                     ELSE
                        lx_xmltype_in :=
                           SYS.XMLTYPE
                              (   '<publishXItemModifyUsingXItemDesc
                                 xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                                 xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                                 xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                                 xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                                 xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                                 xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                                 xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                                 xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                                 xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                                 xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                                 xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                                 xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                                 xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                                 xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                                 xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                               || j.xdata
                               || '</publishXItemModifyUsingXItemDesc>'
                              );
                     END IF;



                     BEGIN

                        lx_xmltype_out :=
                           xxdo_invoke_webservice_f (lv_wsdl_url,
                                                     lv_namespace,
                                                     lv_targetname,
                                                     lv_service,
                                                     lv_port,
                                                     lv_operation,
                                                     lx_xmltype_in
                                                    );

                        IF lx_xmltype_out IS NOT NULL
                        THEN

                           lc_return := XMLTYPE.getclobval (lx_xmltype_out);

                           UPDATE xxdoinv006_int
                              SET retval = lc_return,
                                  processed_flag = 'Y',
                                  style_status_flag = 'P',
                                  transmission_date = SYSDATE
                            WHERE slno = j.slno;

                        ELSE
                           fnd_file.put_line (fnd_file.output,
                                              'Response is NULL  ');
                           lc_return := NULL;

                           UPDATE xxdoinv006_int
                              SET retval = lc_return,
                                  style_status_flag = 'VE',
                                  transmission_date = SYSDATE
                            WHERE slno = j.slno;
                        END IF;

                        COMMIT;
                     EXCEPTION
                        WHEN OTHERS
                        THEN
                           lv_errmsg := SQLERRM;


                           UPDATE xxdoinv006_int
                              SET style_status_flag = 'VE',
                                  errorcode = lv_errmsg
                            WHERE slno = j.slno;

                           COMMIT;
                           fnd_file.put_line
                              (fnd_file.LOG,
                                  'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                               || SQLERRM
                              );
                     END;

                  END LOOP;          */
                END LOOP;
            END IF;

            /***********************************************************************************************************************************/
            fnd_file.put_line (fnd_file.LOG, '***Batching Started ***');

            BEGIN
                SELECT COUNT (*)
                  INTO lv_rec_count
                  FROM xxdoinv006_int
                 --WHERE processed_flag = 'N'
                 WHERE     NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Code :' || SQLCODE);
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_rec_count=' || lv_rec_count);

            BEGIN
                SELECT MIN (slno)
                  INTO lv_min_slno
                  FROM xxdoinv006_int
                 --WHERE processed_flag = 'N'
                 WHERE     NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            BEGIN
                SELECT MAX (slno)
                  INTO lv_max_slno
                  FROM xxdoinv006_int
                 --WHERE processed_flag = 'N'
                 WHERE     NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_min_slno=' || lv_min_slno);
            --l_batch_size := 2;  -- NVL (apps.fnd_profile.VALUE ('XXDO_RETAIL_ITEM_P_SIZE'), 1);
            lv_batch_count   :=
                NVL (apps.fnd_profile.VALUE ('XXDO_ITEM_INT_CHILD_REQ'), 1);
            l_batch_size     := CEIL (lv_rec_count / lv_batch_count);

            --         IF l_batch_size = 1
            --         THEN
            --            lv_batch_count := 1;
            --         END IF;
            IF l_batch_size = 1
            THEN
                IF lv_rec_count = 1
                THEN
                    l_batch_size   := 1;
                ELSIF lv_rec_count = 2
                THEN
                    l_batch_size   := 2;
                END IF;

                lv_batch_count   := 1;
            END IF;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:l_batch_size=' || l_batch_size);

            FOR i IN 1 .. lv_batch_count
            LOOP
                IF i = 1
                THEN
                    lv_from_slno   := lv_min_slno;
                    lv_to_slno     := lv_from_slno + l_batch_size - 1;
                    fnd_file.put_line (
                        fnd_file.LOG,
                           '*** i=1 lv_from_slno'
                        || lv_from_slno
                        || ' AND lv_to_slno='
                        || lv_to_slno
                        || ' AND l_batch_size='
                        || l_batch_size);
                ELSE
                    lv_from_slno   := lv_to_slno + 1;
                    lv_to_slno     := lv_from_slno + l_batch_size;
                    fnd_file.put_line (
                        fnd_file.LOG,
                           '*** i not 1 lv_from_slno'
                        || lv_from_slno
                        || ' AND lv_to_slno='
                        || lv_to_slno
                        || ' AND l_batch_size='
                        || l_batch_size);
                END IF;

                IF lv_to_slno >= lv_max_slno
                THEN
                    lv_to_slno   := lv_max_slno;
                    fnd_file.put_line (
                        fnd_file.LOG,
                           '*** lv_to_slno > lv_max_slno :: lv_to_slno='
                        || lv_to_slno);
                END IF;

                fnd_file.put_line (fnd_file.LOG,
                                   'lv_from_slno' || lv_from_slno);
                fnd_file.put_line (fnd_file.LOG, 'lv_to_slno' || lv_to_slno);
                ln_request_id   :=
                    apps.fnd_request.submit_request (
                        application   => 'XXDO',
                        program       => 'XXDOINV006_ITEM_CALL_WEBSRV',
                        description   =>
                               'Child Request - Call Style WEB Service - Deckers('
                            || i
                            || ')',
                        start_time    => SYSDATE,
                        sub_request   => TRUE,
                        argument1     => lv_from_slno,
                        argument2     => lv_to_slno,
                        argument3     => lv_request_id,
                        argument4     => 'ITEM_STYLE');
                fnd_file.put_line (
                    fnd_file.LOG,
                    'Submitted BATCH ' || i || 'Request id ' || ln_request_id);

                IF ln_request_id IS NOT NULL
                THEN
                    COMMIT;
                ELSE
                    ROLLBACK;
                END IF;
            END LOOP;

            IF lv_batch_count > 0
            THEN
                apps.fnd_conc_global.set_req_globals (
                    conc_status    => 'PAUSED',
                    request_data   => TO_CHAR (ln_request_id));
            END IF;
        /***********************************************************************************************************************************/
        END IF;

        IF req_data IS NOT NULL
        THEN
            send_email_proc ('Item Integration Style Program');
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Procedure and it is    '
                || SQLERRM);
            -- Email when program error out
            v_def_mail_recips   :=
                get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
            apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration Style Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                                 , l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Type: multipart/mixed; boundary=boundarystring',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);

            BEGIN
                SELECT meaning
                  INTO l_primary_email
                  FROM fnd_lookup_values_vl
                 WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Too many primary email addresses.');
            END;

            apps.do_mail_utils.send_mail_line (
                   'Item Integration - Style Program is completed with Error/Warning. Request ID='
                || fnd_global.conc_request_id,
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_close (l_ret_val);
    -- End Emial code
    END;

    PROCEDURE publish_itemsku_p (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                 , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    IS
        lv_wsdl_ip             VARCHAR2 (25);
        lv_wsdl_url            VARCHAR2 (4000);
        lv_namespace           VARCHAR2 (4000);
        lv_service             VARCHAR2 (4000);
        lv_port                VARCHAR2 (4000);
        lv_operation           VARCHAR2 (4000);
        lv_targetname          VARCHAR2 (4000);
        lx_xmltype_in          SYS.XMLTYPE;
        lx_xmltype_out         SYS.XMLTYPE;
        lc_return              CLOB;
        lv_item_mdflag         VARCHAR2 (1) := 'N';
        ln_itemskucount        NUMBER;
        lv_op_mode             VARCHAR2 (60);
        lv_errmsg              VARCHAR2 (240);
        lv_sku_status          VARCHAR2 (10) := 'N';
        lv_counter             NUMBER;
        /* Modification variables test */
        lv_description         xxdoinv006_int.item_description%TYPE;
        lv_itemstatus          xxdoinv006_int.item_status%TYPE;
        lv_vertex              xxdoinv006_int.vertex_tax%TYPE;
        lv_subclass            xxdoinv006_int.subclass%TYPE;
        lv_rec_count           NUMBER;
        lv_min_slno            NUMBER;
        lv_max_slno            NUMBER;
        lv_from_slno           NUMBER;
        lv_to_slno             NUMBER;
        lv_batch_count         NUMBER;
        ln_request_id          NUMBER;
        lv_request_id          NUMBER := fnd_global.conc_request_id;
        lv_noof_items          NUMBER := 0;
        lv_item_cost           NUMBER := 0;
        lv_req_phase           VARCHAR2 (100);
        lv_req_status          VARCHAR2 (100);
        lv_req_dev_phase       VARCHAR2 (1000);
        lv_req_dev_status      VARCHAR2 (100);
        lv_req_message         VARCHAR2 (2400);
        lv_req_return_status   BOOLEAN;
        req_data               VARCHAR2 (20);
        l_batch_size           NUMBER := 1;
        l_rundate              DATE := NULL;
        ln_styledupcount       NUMBER;             -- Added for 3.2 by Infosys
        l_style                VARCHAR2 (50);      -- Added for 3.2 by Infosys

        CURSOR c_item IS
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                            -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              msib.inventory_item_status_code item_status,
                   --msib.description, msib.attribute13 scale_code_id,msib.attribute27 transmit_item_rms,                    -- commented by BT Tech team
                   msib.item_description description, msib.size_scale_id scale_code_id, msib.item_type transmit_item_rms, -- added by BT Tech team
                   xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id, msib.organization_id) dept, xxdoinv006_pkg.get_class_f (msib.inventory_item_id, msib.organization_id) CLASS, -- Start modification by BT Technology Team on 01/07/15
                                                                                                                                                                                       --                xxdoinv006_pkg.get_class_f (msib.inventory_item_id,
                                                                                                                                                                                       -- End modification by BT Technology Team on 01/07/15
                                                                                                                                                                                       xxdoinv006_pkg.get_sub_class_f (msib.inventory_item_id, msib.organization_id) subclass,
                   NULL subclass_create_date, NULL subclass_update_date, NULL subclass_updatedby,
                   xxdoinv006_pkg.get_vertex_tax_f (msib.inventory_item_id, msib.organization_id) vertex_tax, NULL vertex_create_date, NULL vertex_update_date,
                   NULL vertex_updatedby, xxdoinv006_pkg.get_cost_us_f (msib.inventory_item_id, msib.organization_id) us_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('UK'), msib.inventory_item_id), 0.01) uk_region_cost,
                   NVL (hsoe.get_price_list_value (xxdo_get_price_list ('JP'), msib.inventory_item_id), 0.01) jp_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('CA'), msib.inventory_item_id), 0.01) ca_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('CN'), msib.inventory_item_id), 0.01) cn_region_cost,
                   NVL (hsoe.get_price_list_value (xxdo_get_price_list ('FR'), msib.inventory_item_id), 0.01) fr_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('HK'), msib.inventory_item_id), 0.01) hk_region_cost, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('USRU'), msib.inventory_item_id), 0.01) us_region_price,
                   NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CAR'), msib.inventory_item_id), 0.01) ca_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('UKR'), msib.inventory_item_id), 0.01) uk_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CNR'), msib.inventory_item_id), 0.01) cn_region_price,
                   NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('JPR'), msib.inventory_item_id), 0.01) jp_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('FRR'), msib.inventory_item_id), 0.01) fr_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('HKR'), msib.inventory_item_id), 0.01) hk_region_price,
                   xxdoinv_pitem_pkg1.get_item_sub_division (msib.inventory_item_id, msib.organization_id) sub_division --Added for change 2.1
              FROM apps.mtl_categories_b mc, apps.mtl_item_categories mic, --apps.mtl_system_items_b msib,                                                                                -- commented by BT Tech team
                                                                           apps.xxd_common_items_v msib -- added by BT Tech team
             --               , apps.mtl_item_categories mic1, -- Commented or v1.3*
             --Added by Reddeiah #DFCT0010916
             --                apps.mtl_categories mc1       --Added by Reddeiah #DFCT0010916 -- Commented or v1.3*
             WHERE     1 = 1
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   --AND mc.structure_id = 50202                                                                                    -- commented by BT Tech team
                   AND mc.structure_id =
                       (SELECT structure_id   -- added by BT Tech team - START
                          FROM mtl_category_sets
                         WHERE category_set_name = 'OM Sales Category')
                   -- added by BT Tech team - END
                   AND mic.category_id = mc.category_id
                   --AND msib.organization_id = 7                                                                                    -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   /* -- Commented or v1.3*
                   --            AND msib.inventory_item_id = mic1.inventory_item_id
                   --            AND msib.organization_id = mic1.organization_id
                   --            AND mic1.category_id = mc1.category_id
                               --AND mc1.structure_id = 101        --Added by Reddeiah #DFCT0010916                                            -- commented by BT Tech team
                               AND mc1.structure_id =
                                           (SELECT structure_id  -- added by BT Tech team - START
                                              FROM mtl_category_sets
                                             WHERE category_set_name = 'Inventory')
                   */
                   -- added by BT Tech team - END
                   --AND mc1.segment4 <> 'SAMPLE' --Commented by BT Technology Team V1.1 08Mar2015     --Added by Reddeiah #DFCT0010916
                   AND msib.item_type NOT IN
                           ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                   --AND mic1.organization_id = 7      --Added by Reddeiah #DFCT0010916                                            -- commented by BT Tech team
                   /*
                   -- Commented or v1.3*
                               AND mic1.organization_id =
                                      (SELECT ood.organization_id
                                         -- added by BT Tech team - START
                                       FROM   apps.fnd_lookup_values flv,
                                              apps.org_organization_definitions ood
                                        WHERE lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                          AND lookup_code = 7
                                          AND flv.attribute1 = ood.organization_code
                                          AND LANGUAGE = USERENV ('LANG'))
                   */
                   -- added by BT Tech team - END
                   --AND msib.segment3 <> 'ALL'                                                                                    -- commented by BT Tech team
                   AND msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   --AND msib.attribute13 IS NOT NULL                                                                                -- commented by BT Tech team
                   AND msib.size_scale_id IS NOT NULL -- added by BT Tech team
                   AND TRUNC (msib.last_update_date) =
                       NVL (l_rundate, TRUNC (SYSDATE))
                   AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                      msib.organization_id)
                           IS NOT NULL
                   AND NOT EXISTS
                           (SELECT 1
                              FROM apps.fnd_lookup_values
                             WHERE     lookup_type = 'XXDOINV007_STYLE'
                                   AND enabled_flag = 'Y'
                                   AND LANGUAGE = 'US'
                                   --AND description = msib.segment1)                                                                    -- commented by BT Tech team
                                   AND description = msib.style_number)-- added by BT Tech team
                                                                       --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                       /*AND EXISTS (
                                                                              SELECT 1
                                                                                FROM apps.qp_pricing_attributes qpa,
                                                                                     apps.qp_list_lines qll,
                                                                                     apps.qp_list_headers qlh
                                                                               WHERE 1 = 1
                                                                                 AND qpa.list_line_id = qll.list_line_id
                                                                                 AND qll.list_header_id = qlh.list_header_id
                                                                                 AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                                                                                 AND qpa.product_attr_value = mc.category_id
                                                                                 AND qpa.product_attribute_context = 'ITEM'
                                                                                 AND qlh.NAME = 'Retail - US'
                                                                                 )*/
                                                                       --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                       ;

        CURSOR c_itemsku (pn_item_id NUMBER, pv_style VARCHAR2, --Added for 3.2 by Infosys
                                                                pn_orgn_id NUMBER, pv_us_region_cost NUMBER, pv_us_region_price NUMBER, pv_uk_region_cost NUMBER, pv_uk_region_price NUMBER, pv_ca_region_cost NUMBER, pv_ca_region_price NUMBER, pv_cn_region_cost NUMBER, pv_cn_region_price NUMBER, pv_jp_region_cost NUMBER, pv_jp_region_price NUMBER, pv_fr_region_cost NUMBER, pv_fr_region_price NUMBER, pv_hk_region_cost NUMBER, pv_hk_region_price NUMBER, pv_dept NUMBER
                          , pv_class VARCHAR2-- Start modification by BT Technology Team on 01/07/15
                                             , pv_subclass VARCHAR2-- End modification by BT Technology Team on 01/07/15
                                                                   )
        IS
            SELECT XMLELEMENT (
                       "v1:XItemDesc",
                       xmlattributes (
                           'http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1'
                               AS "xmlns:v1"),
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       --XMLELEMENT ("v1:item_parent", msib.segment1),                                                        -- commented by BT Tech team
                       --XMLELEMENT ("v1:item_parent", msib.style_number),         --commented for 3.2 by Infosys
                       XMLELEMENT ("v1:item_parent", pv_style), --Added for 3.2 by Infosys
                       -- added by BT Tech team
                       XMLELEMENT ("v1:item_grandparent", ''),
                       XMLELEMENT ("v1:pack_ind", 'N'),
                       XMLELEMENT ("v1:item_level", 2),
                       XMLELEMENT ("v1:tran_level", 2),
                       XMLELEMENT (
                           "v1:diff_1",
                           --xxdoinv006_pkg.get_color_flex_id_f (msib.segment2)                                        -- commented by BT Tech team
                           xxdoinv006_pkg.get_color_flex_id_f (
                               msib.color_code)-- added by BT Tech team
                                               ),
                       --XMLELEMENT ("v1:diff_2", msib.segment3),                                                            -- commented by BT Tech team
                       XMLELEMENT ("v1:diff_2", msib.item_size),
                       -- added by BT Tech team
                       XMLELEMENT ("v1:diff_3", ''),
                       XMLELEMENT ("v1:diff_4", ''),
                       XMLELEMENT ("v1:dept", pv_dept),
                       --XXDOINV006_PKG.get_dept_num_f (msib.inventory_item_id, msib.organization_id )),
                       XMLELEMENT ("v1:class", pv_class),
                       --XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       -- Start modification by BT Technology Team on 01/07/15
                       --                    XMLELEMENT ("v1:subclass", pv_class),
                       XMLELEMENT ("v1:subclass", pv_subclass),
                       -- Start modification by BT Technology Team on 01/07/15

                       --XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       XMLELEMENT (
                           "v1:item_desc",
                           --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                            -- commented by BT Tech team
                           msib.item_number           -- added by BT Tech team
                                            || ':' --|| msib.description                                                                    -- commented by BT Tech team
                                                   || msib.item_description -- added by BT Tech team
                                                                           ),
                       XMLELEMENT ("v1:iscloc_hier_level", 'RE'),
                       XMLELEMENT ("v1:izp_hier_level", 'RE'),
                       XMLELEMENT (
                           "v1:short_desc",
                              --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                            -- commented by BT Tech team
                              --msib.style_number ||        --commented for 3.2 by Infosys
                              pv_style
                           ||                       --added for 3.2 by Infosys
                              ':'
                           || msib.color_code
                           || ':'
                           || item_size               -- added by BT Tech team
                           || ':'
                           --|| msib.description                                                                    -- commented by BT Tech team
                           || msib.item_description   -- added by BT Tech team
                                                   ),
                       XMLELEMENT ("v1:retail_zone_group_id", 1),
                       XMLELEMENT ("v1:cost_zone_group_id", 1000),
                       XMLELEMENT ("v1:standard_uom", 'EA'),
                       XMLELEMENT ("v1:store_ord_mult", 'E'),
                       XMLELEMENT ("v1:forecast_ind", 'N'),
                       XMLELEMENT ("v1:simple_pack_ind", 'N'),
                       XMLELEMENT ("v1:contains_inner_ind", 'N'),
                       XMLELEMENT ("v1:sellable_ind", 'Y'),
                       XMLELEMENT ("v1:orderable_ind", 'Y'),
                       XMLELEMENT ("v1:pack_type", ''),
                       XMLELEMENT ("v1:order_as_type", ''),
                       XMLELEMENT ("v1:create_datetime", ''),
                       XMLELEMENT ("v1:XItemCtryDesc",
                                   XMLELEMENT ("v1:country_id", 'US')),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('US')),
                           XMLELEMENT ("v1:primary_supp_ind", 'Y'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'US'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_us_region_cost),
                               -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_us_region_cost),
                                   -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_us_region_cost),
                                   -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_us_region_cost),
                                   -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_us_region_cost)),
                               -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc,
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('US')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('UK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'GB'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_uk_region_cost),
                               -- XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_uk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('UK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('JP')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'JP'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_jp_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_jp_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('JP')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CA')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CA'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_ca_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_ca_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CA')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CN')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''), --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CN'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_cn_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_cn_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       UPPER (NVL (msib.weight_uom_code, ''))),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')),
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CN')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('HK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'HK'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_hk_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_hk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('HK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('FR')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'FR'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_fr_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_fr_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('FR')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemVATDesc",
                           XMLELEMENT ("v1:vat_type", 'B'),
                           XMLELEMENT ("v1:vat_region", '1000'),
                           XMLELEMENT ("v1:vat_code", 'S'),
                           XMLELEMENT (
                               "v1:active_date",
                                  TO_CHAR (SYSDATE, 'YYYY-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS'))),
                       --xmlitemzpdesc
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '101'),                                                 -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_us_region_price),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '102'),                                                 -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CA')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_ca_region_price),
                           --  XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CA')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '200'),                                                 -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('UK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_uk_region_price),
                           --  XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('UK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '301'),                                                 -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CN')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_cn_region_price),
                           --    XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CN')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '300'),-- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('JP')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_jp_region_price),
                           --  XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('JP')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '212'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('FR')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_fr_region_price-- End modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('FR')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '305'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('HK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_hk_region_price-- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('HK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 1),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_vertex_tax_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_vertex_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_vertex_updatedate_f --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                          )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_vertex_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 2),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_sub_group_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_sub_group_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_sub_group_updatedate_f --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                          )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_sub_group_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       --Added CASE on top of the change 2.1 to only create this UDA tag if Subdivision exists for the item
                       --Added subdivision UDA for change 2.1 --Start
                       CASE
                           WHEN xxdoinv_pitem_pkg1.get_item_sub_division --Added for change 3.1
                                                                         (
                                    msib.inventory_item_id, --Added for change 3.1
                                    msib.organization_id --Added for change 3.1
                                                        ) --Added for change 3.1
                                    IS NOT NULL         --Added for change 3.1
                           THEN                         --Added for change 3.1
                               XMLELEMENT (
                                   "v1:XItemUDADtl",
                                   XMLELEMENT ("v1:uda_id", 103),
                                   XMLELEMENT ("v1:display_type", 'FF'),
                                   XMLELEMENT ("v1:uda_date", SYSDATE),
                                   XMLELEMENT ("v1:uda_value", NULL),
                                   XMLELEMENT (
                                       "v1:uda_text",
                                       xxdoinv_pitem_pkg1.get_item_sub_division (
                                           msib.inventory_item_id,
                                           msib.organization_id)),
                                   XMLELEMENT (
                                       "v1:create_datetime",
                                          TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                                       || 'T'
                                       || TO_CHAR (SYSDATE, 'HH24:MI:SS')--                            xxdoinv_pitem_pkg1.get_item_sub_div_cre_dt
                                                                         --                                                      (msib.inventory_item_id,
                                                                         --                                                       msib.organization_id
                                                                         --                                                      )
                                                                         ),
                                   XMLELEMENT (
                                       "v1:last_update_datetime",
                                          TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                                       || 'T'
                                       || TO_CHAR (SYSDATE, 'HH24:MI:SS')),
                                   XMLELEMENT (
                                       "v1:last_update_id",
                                       xxdoinv_pitem_pkg1.get_item_sub_div_last_upd_by (
                                           msib.inventory_item_id,
                                           msib.organization_id)))
                       END,                             --Added for change 3.1
                       --Added subdivision UDA for change 2.1 --End
                       XMLELEMENT ("v1:status", 'A'),
                       XMLELEMENT ("v1:uom_conv_factor", ''),
                       XMLELEMENT ("v1:package_size", 1),
                       XMLELEMENT ("v1:handling_temp", ''),
                       XMLELEMENT ("v1:handling_sensitivity", ''),
                       XMLELEMENT ("v1:mfg_rec_retail", ''),
                       XMLELEMENT ("v1:waste_type", ''),
                       XMLELEMENT ("v1:waste_pct", ''),
                       XMLELEMENT ("v1:item_number_type", 'MANL'),
                       XMLELEMENT ("v1:catch_weight_ind", 'N'),
                       XMLELEMENT ("v1:const_dimen_ind", 'N'),
                       XMLELEMENT ("v1:gift_wrap_ind", 'N'),
                       XMLELEMENT ("v1:ship_alone_ind", 'N'),
                       XMLELEMENT ("v1:ext_source_system", ''),
                       XMLELEMENT ("v1:size_group1", ''),
                       XMLELEMENT ("v1:size_group2", ''),
                       XMLELEMENT ("v1:size1", ''),
                       XMLELEMENT ("v1:size2", ''),
                       XMLELEMENT ("v1:color", ''),
                       XMLELEMENT ("v1:system_ind", ''),
                       XMLELEMENT ("v1:upc_supplement", ''),
                       XMLELEMENT ("v1:upc_type", ''),
                       XMLELEMENT ("v1:primary_upc_ind", ''),
                       XMLELEMENT ("v1:primary_repl_ind", ''),
                       XMLELEMENT ("v1:item_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_1_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_2_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_3_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_4_aggregate_ind", ''),
                       XMLELEMENT ("v1:perishable_ind", 'N'),
                       XMLELEMENT ("v1:notional_pack_ind", 'N'),
                       XMLELEMENT ("v1:soh_inquiry_at_pack_ind", 'N'),
                       XMLELEMENT ("v1:aip_case_type", ''),
                       XMLELEMENT ("v1:banded_item_ind", 'N'),
                       XMLELEMENT ("v1:order_type", ''),
                       XMLELEMENT ("v1:sale_type", ''),
                       XMLELEMENT ("v1:catch_weight_uom", ''),
                       XMLELEMENT ("v1:deposit_item_type", ''),
                       XMLELEMENT ("v1:inventory_ind", 'Y'),
                       XMLELEMENT ("v1:item_xform_ind", 'N'),
                       XMLELEMENT ("v1:container_item", ''),
                       XMLELEMENT ("v1:package_uom", '')) itemxml
              /*  FROM apps.mtl_system_items_b msib,                                                           -- commented By BT Tech team - START
                   apps.mtl_item_categories mic, --Added by Reddeiah #DFCT0010916
                   apps.mtl_categories mc        --Added by Reddeiah #DFCT0010916
             WHERE msib.organization_id = 7
               --AND msib.inventory_item_status_code = 'Active'
               AND msib.segment3 <> 'ALL'
               AND msib.inventory_item_id = mic.inventory_item_id
               --Added by Reddeiah #DFCT0010916
               AND msib.organization_id = mic.organization_id
               --Added by Reddeiah #DFCT0010916
               AND mic.category_id = mc.category_id
               --Added by Reddeiah #DFCT0010916
               AND mc.structure_id = 101         --Added by Reddeiah #DFCT0010916
               AND mc.segment4 <> 'SAMPLE'       --Added by Reddeiah #DFCT0010916
               AND mic.organization_id = 7       --Added by Reddeiah #DFCT0010916*/
              --   AND msib.segment1 NOT LIKE 'S%L'                  --Commented by Reddeiah #DFCT0010916
              --   AND msib.segment1 NOT LIKE 'S%R'                  --Commented by Reddeiah #DFCT0010916
              -- AND(TRIM(MSIB.SEGMENT1))=UPPER(TRIM(PV_SEGMENT1))                                                           -- commented by BT Tech team - END
              FROM apps.xxd_common_items_v msib -- added by BT Tech team - START
             WHERE     msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   AND NVL (msib.item_type, 'X') <> 'GENERIC'
                   --AND msib.master_class <> 'SAMPLE'  --Commented by BT Technology Team V1.1 08Mar2015
                   AND msib.item_type NOT IN
                           ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                   AND msib.inventory_item_id = pn_item_id
                   AND msib.organization_id = pn_orgn_id;

        -- added by BT Tech team - END

        --CURSOR C_ITEMPUBLISH ( PN_ITEM_ID NUMBER) IS
        CURSOR c_itempublish IS
            SELECT slno, operation, xdata
              FROM xxdoinv006_int
             WHERE sku_status_flag = 'N' AND item_type = 'SKU';

        --AND UPPER(TRIM(STYLE))=UPPER(TRIM(PV_SEGMENT1))
        --AND INVENTORY_ITEM_ID = PN_ITEM_ID;
        CURSOR c_itemskurepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006_int
             WHERE     sku_status_flag IN ('VE', 'P')
                   AND item_type = 'SKU'
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        req_data    := fnd_conc_global.request_data;
        l_rundate   := TRUNC (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'));

        IF (req_data IS NULL)
        THEN
            BEGIN
                SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                         --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                         'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                                  apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
                  INTO lv_wsdl_ip
                  FROM apps.fnd_product_groups;
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the File server name');
                    pv_retcode   := 2;
            END;

            /* Initializing the Item loc web service variables */
            lv_wsdl_url      :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService?WSDL';
            lv_namespace     :=
                'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
            lv_service       := 'XItemPublishingService';
            lv_port          := 'XItemPublishingPort';
            lv_operation     := 'publishXItemCreateUsingXItemDesc';
            lv_targetname    :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService';

            IF pv_reprocess = 'Y'
            THEN
                FOR rec_reprocess
                    IN c_itemskurepublish (pv_fromdate, pv_todate)
                LOOP
                    /* Inserting the data into Staging table using the code */
                    FOR i
                        IN c_itemsku (rec_reprocess.inventory_item_id,
                                      rec_reprocess.style, --Added for 3.2 by Infosys
                                      rec_reprocess.organization_id,
                                      rec_reprocess.us_region_cost,
                                      rec_reprocess.us_region_price,
                                      rec_reprocess.uk_region_cost,
                                      rec_reprocess.uk_region_price,
                                      rec_reprocess.ca_region_cost,
                                      rec_reprocess.ca_region_price,
                                      rec_reprocess.cn_region_cost,
                                      rec_reprocess.cn_region_price,
                                      rec_reprocess.jp_region_cost,
                                      rec_reprocess.jp_region_price,
                                      rec_reprocess.fr_region_cost,
                                      rec_reprocess.fr_region_price,
                                      rec_reprocess.hk_region_cost,
                                      rec_reprocess.hk_region_price,
                                      rec_reprocess.department,
                                      rec_reprocess.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                         ,
                                      rec_reprocess.SUBCLASS-- End modification by BT Technology Team on 01/07/15
                                                            )
                    LOOP
                        BEGIN
                            UPDATE xxdoinv006_int
                               SET xdata   = XMLTYPE.getclobval (i.itemxml)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv006_int
                                   SET sku_status_flag = 'VE', errorcode = lv_errmsg, xdata = XMLTYPE.getclobval (i.itemxml)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */

                    /* Publish Item  */
                    IF rec_reprocess.operation = 'ITEM_CREATE'
                    THEN
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemCreateUsingXItemDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
          xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
          xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
          xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
          xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
          xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
          xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
          xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
          xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
          xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">

'
                                || rec_reprocess.xdata
                                || '</publishXItemCreateUsingXItemDesc>');
                    ELSE
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemModifyUsingXItemDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"


xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXItemModifyUsingXItemDesc>');
                    END IF;

                    /* Calling the webservice here */
                    BEGIN
                        lx_xmltype_out   :=
                            xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                      , lx_xmltype_in);

                        IF lx_xmltype_out IS NOT NULL
                        THEN
                            fnd_file.put_line (
                                fnd_file.output,
                                'Response is stored in the staging table  ');
                            lc_return   :=
                                XMLTYPE.getclobval (lx_xmltype_out);

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', sku_status_flag = 'P',
                                   transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        ELSE
                            fnd_file.put_line (fnd_file.output,
                                               'Response is NULL  ');
                            lc_return   := NULL;

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, sku_status_flag = 'VE', transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        END IF;

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv006_int
                               SET sku_status_flag = 'VE', errorcode = lv_errmsg
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                || SQLERRM);
                    END;                    /* End calling the webservice   */
                END LOOP;                                 /* For REPublish  */
            ELSE
                FOR rec_item IN c_item
                LOOP
                    /* Start-3.2 Added Validation of duplicate style*/
                    ln_styledupcount   := NULL;
                    l_style            := NULL;


                    SELECT COUNT (1)
                      INTO ln_styledupcount
                      FROM mtl_system_items_b
                     WHERE TO_CHAR (inventory_item_id) = rec_item.style;


                    IF ln_styledupcount <> 0
                    THEN
                        l_style   := 'RMS-' || (rec_item.style);
                    ELSE
                        l_style   := rec_item.style;
                    END IF;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_styledupcount ' || ln_styledupcount);

                    fnd_file.put_line (fnd_file.LOG, 'l_style ' || l_style);

                    /*End-3.2 */

                    ln_itemskucount    := NULL;

                    SELECT COUNT (1)
                      INTO ln_itemskucount
                      --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                        -- commented by BT Tech team
                      FROM item_master@xxdo_retail_rms -- added by BT Tech team
                     WHERE     item = TO_CHAR (rec_item.inventory_item_id)
                           AND item_level = 2;

                    IF ln_itemskucount >= 1
                    THEN
                        lv_op_mode     := 'ITEM_UPDATE';
                        lv_operation   := 'publishXItemModifyUsingXItemDesc';

                        BEGIN
                            SELECT SUBSTR (item_desc, (INSTR (item_desc, ':', -1) + 1)), status
                              INTO lv_description, lv_itemstatus
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                    -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (rec_item.inventory_item_id)
                                   AND item_level = 2;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retrieing the item description ');
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_item.description)))--  ( nvl(UPPER(TRIM(LV_VERTEX)),'0') <> UPPER(TRIM(REC_ITEM.VERTEX_TAX)) ) OR
                                                                                                             --  ( nvl(UPPER(TRIM(LV_SUBCLASS)),'0') <> UPPER(TRIM(REC_ITEM.SUBCLASS)))
                                                                                                             )
                        THEN
                            lv_sku_status   := 'N';
                        ELSE
                            lv_sku_status   := 'NR';
                        END IF;
                    ELSE
                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemskucount
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                    -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             --WHERE  item = rec_item.style       --commented for 3.2 by Infosys
                             WHERE item = l_style   --Added for 3.2 by Infosys
                                                  AND item_level = 1;

                            IF ln_itemskucount >= 1
                            THEN
                                lv_op_mode      := 'ITEM_CREATE';
                                lv_operation    :=
                                    'publishXItemCreateUsingXItemDesc';
                                lv_sku_status   := 'N';
                            ELSE
                                lv_op_mode      := 'ITEM_CREATE';
                                lv_operation    :=
                                    'publishXItemCreateUsingXItemDesc';
                                lv_sku_status   := 'NP';
                            END IF;
                        END;
                    END IF;

                    IF    rec_item.dept IS NULL
                       OR rec_item.CLASS IS NULL
                       OR rec_item.scale_code_id IS NULL
                       -- Start modification by BT Technology Team on 01/07/15
                       OR rec_item.SUBCLASS IS NULL
                    -- End modification by BT Technology Team on 01/07/15
                    THEN
                        lv_sku_status   := 'NOCLASS';
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'Mandatory columns like Department, Class, Scale Code id either one or all of them is missing  for Item'
                            || rec_item.inventory_item_id);
                    END IF;

                    /* Inserting the data into Staging table using the code */

                    --          fnd_file.put_line(fnd_file.log, 'Before c_itemstyle cursor'|| systimestamp);

                    FOR i IN c_itemsku (rec_item.inventory_item_id, l_style, --Added for 3.2 by Infosys
                                                                             rec_item.organization_id, rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, rec_item.dept
                                        , rec_item.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                        , rec_item.SUBCLASS-- End modification by BT Technology Team on 01/07/15
                                                                           )
                    LOOP
                        BEGIN
                            lv_counter   := lv_counter + 1;

                            IF (lv_counter = 500)
                            THEN
                                COMMIT;
                                lv_counter   := 0;
                            END IF;

                            INSERT INTO xxdoinv006_int (slno, servicetype, item_type, operation, inventory_item_id, organization_id, style, color, sze, item_status, item_description, scale_code_id, department, CLASS, subclass, subclass_creation_date, subclass_update_date, subclass_updatedby, vertex_tax, vertex_creation_date, vertex_update_date, vertex_updatedby, us_region_cost, us_region_price, uk_region_cost, uk_region_price, ca_region_cost, ca_region_price, cn_region_cost, cn_region_price, jp_region_cost, jp_region_price, fr_region_cost, fr_region_price, hk_region_cost, hk_region_price, sku_status_flag, xdata, parent_request_id
                                                        , sub_division --Added for change 2.1
                                                                      )
                                 VALUES (xxdoinv006_int_s.NEXTVAL, 'ITEM ', 'SKU', lv_op_mode, rec_item.inventory_item_id, rec_item.organization_id, --rec_item.style,           --Commented for 3.2 by Infosys
                                                                                                                                                     l_style, --Added for 3.2 by Infosys
                                                                                                                                                              rec_item.color, rec_item.sze, rec_item.item_status, rec_item.description, rec_item.scale_code_id, rec_item.dept, rec_item.CLASS, rec_item.subclass, rec_item.subclass_create_date, rec_item.subclass_update_date, rec_item.subclass_updatedby, rec_item.vertex_tax, NVL (rec_item.vertex_create_date, NULL), NVL (rec_item.vertex_update_date, NULL), NVL (rec_item.vertex_updatedby, NULL), rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, lv_sku_status, XMLTYPE.getclobval (i.itemxml), lv_request_id
                                         , rec_item.sub_division --Added for change 2.1
                                                                );
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                INSERT INTO xxdoinv006_int (
                                                servicetype,
                                                item_type,
                                                operation,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                item_status,
                                                item_description,
                                                scale_code_id,
                                                department,
                                                CLASS,
                                                subclass,
                                                subclass_creation_date,
                                                subclass_update_date,
                                                subclass_updatedby,
                                                vertex_tax,
                                                vertex_creation_date,
                                                vertex_update_date,
                                                vertex_updatedby,
                                                us_region_cost,
                                                us_region_price,
                                                uk_region_cost,
                                                uk_region_price,
                                                ca_region_cost,
                                                ca_region_price,
                                                cn_region_cost,
                                                cn_region_price,
                                                jp_region_cost,
                                                jp_region_price,
                                                fr_region_cost,
                                                fr_region_price,
                                                hk_region_cost,
                                                hk_region_price,
                                                sku_status_flag,
                                                errorcode,
                                                xdata)
                                         VALUES (
                                                    'ITEM ',
                                                    'SKU',
                                                    lv_op_mode,
                                                    rec_item.inventory_item_id,
                                                    rec_item.organization_id,
                                                    --rec_item.style,           --commented for 3.2 by Infosys
                                                    l_style, --Added for 3.2 by Infosys
                                                    rec_item.color,
                                                    rec_item.sze,
                                                    rec_item.item_status,
                                                    rec_item.description,
                                                    rec_item.scale_code_id,
                                                    rec_item.dept,
                                                    rec_item.CLASS,
                                                    rec_item.subclass,
                                                    rec_item.subclass_create_date,
                                                    rec_item.subclass_update_date,
                                                    rec_item.subclass_updatedby,
                                                    rec_item.vertex_tax,
                                                    NVL (
                                                        rec_item.vertex_create_date,
                                                        NULL),
                                                    NVL (
                                                        rec_item.vertex_update_date,
                                                        NULL),
                                                    NVL (
                                                        rec_item.vertex_updatedby,
                                                        NULL),
                                                    rec_item.us_region_cost,
                                                    rec_item.us_region_price,
                                                    rec_item.uk_region_cost,
                                                    rec_item.uk_region_price,
                                                    rec_item.ca_region_cost,
                                                    rec_item.ca_region_price,
                                                    rec_item.cn_region_cost,
                                                    rec_item.cn_region_price,
                                                    rec_item.jp_region_cost,
                                                    rec_item.jp_region_price,
                                                    rec_item.fr_region_cost,
                                                    rec_item.fr_region_price,
                                                    rec_item.hk_region_cost,
                                                    rec_item.hk_region_price,
                                                    'VE',
                                                    lv_errmsg,
                                                    XMLTYPE.getclobval (
                                                        i.itemxml));

                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */
                END LOOP;

                COMMIT;
            /*   FOR j IN c_itempublish
               LOOP
                  IF j.operation = 'ITEM_CREATE'
                  THEN
                     lx_xmltype_in :=
                        SYS.XMLTYPE
                           (   '<publishXItemCreateUsingXItemDesc
                                xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                                xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                                xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                                xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                                xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                                xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                                xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                                xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                                xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                                xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                                xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                                xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                                xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                                xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                                xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || j.xdata
                            || '</publishXItemCreateUsingXItemDesc>'
                           );
                  ELSE
                     lx_xmltype_in :=
                        SYS.XMLTYPE
                           (   '<publishXItemModifyUsingXItemDesc
                                 xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                                 xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                                 xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                                 xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                                 xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                                 xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                                 xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                                 xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                                 xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                                 xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                                 xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                                 xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                                 xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                                 xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                                 xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || j.xdata
                            || '</publishXItemModifyUsingXItemDesc>'
                           );
                  END IF;

                  BEGIN
                     lx_xmltype_out :=
                        xxdo_invoke_webservice_f (lv_wsdl_url,
                                                  lv_namespace,
                                                  lv_targetname,
                                                  lv_service,
                                                  lv_port,
                                                  lv_operation,
                                                  lx_xmltype_in
                                                 );

                     IF lx_xmltype_out IS NOT NULL
                     THEN
                        lc_return := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv006_int
                           SET retval = lc_return,
                               processed_flag = 'Y',
                               sku_status_flag = 'P',
                               transmission_date = SYSDATE
                         WHERE slno = j.slno;
                     ELSE
                        fnd_file.put_line (fnd_file.output, 'Response is NULL  ');
                        lc_return := NULL;

                        UPDATE xxdoinv006_int
                           SET retval = lc_return,
                               sku_status_flag = 'VE',
                               transmission_date = SYSDATE
                         WHERE slno = j.slno;
                     END IF;

                     lv_counter := lv_counter + 1;

                     IF (lv_counter = 500)
                     THEN
                        COMMIT;
                        lv_counter := 0;
                     END IF;

                  EXCEPTION
                     WHEN OTHERS
                     THEN
                        lv_errmsg := SQLERRM;

                        UPDATE xxdoinv006_int
                           SET sku_status_flag = 'VE',
                               errorcode = lv_errmsg
                         WHERE slno = j.slno;

                        fnd_file.put_line
                           (fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM
                           );
                  END;
               END LOOP;   */

            -- COMMIT;
            END IF;

            /***********************************************************************************************************************************/
            fnd_file.put_line (fnd_file.LOG, '***Batching Started ***');

            BEGIN
                SELECT COUNT (*)
                  INTO lv_rec_count
                  FROM xxdoinv006_int
                 WHERE                                  --processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Code :' || SQLCODE);
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_rec_count=' || lv_rec_count);

            BEGIN
                SELECT MIN (slno)
                  INTO lv_min_slno
                  FROM xxdoinv006_int
                 WHERE                                  --processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            BEGIN
                SELECT MAX (slno)
                  INTO lv_max_slno
                  FROM xxdoinv006_int
                 WHERE                                 -- processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_min_slno=' || lv_min_slno);
            lv_batch_count   :=
                NVL (apps.fnd_profile.VALUE ('XXDO_ITEM_INT_CHILD_REQ'), 1);
            l_batch_size     := CEIL (lv_rec_count / lv_batch_count);

            --         IF l_batch_size = 1
            --         THEN
            --            lv_batch_count := 1;
            --         END IF;
            IF l_batch_size = 1
            THEN
                IF lv_rec_count = 1
                THEN
                    l_batch_size   := 1;
                ELSIF lv_rec_count = 2
                THEN
                    l_batch_size   := 2;
                END IF;

                lv_batch_count   := 1;
            END IF;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_batch_count=' || lv_batch_count);

            FOR i IN 1 .. lv_batch_count
            LOOP
                IF i = 1
                THEN
                    lv_from_slno   := lv_min_slno;
                    lv_to_slno     := lv_from_slno + l_batch_size;
                ELSE
                    lv_from_slno   := lv_to_slno + 1;
                    lv_to_slno     := lv_from_slno + l_batch_size;
                END IF;

                IF lv_to_slno > lv_max_slno
                THEN
                    lv_to_slno   := lv_max_slno;
                END IF;

                fnd_file.put_line (fnd_file.LOG,
                                   'lv_from_slno' || lv_from_slno);
                fnd_file.put_line (fnd_file.LOG, 'lv_to_slno' || lv_to_slno);
                ln_request_id   :=
                    apps.fnd_request.submit_request (
                        application   => 'XXDO',
                        program       => 'XXDOINV006_ITEM_CALL_WEBSRV',
                        description   =>
                               'Child Request - Call SKU WEB Service - Deckers('
                            || i
                            || ')',
                        start_time    => SYSDATE,
                        sub_request   => TRUE,
                        argument1     => lv_from_slno,
                        argument2     => lv_to_slno,
                        argument3     => lv_request_id,
                        argument4     => 'ITEM_SKU');
                fnd_file.put_line (
                    fnd_file.LOG,
                    'Submitted BATCH ' || i || 'Request id ' || ln_request_id);

                IF ln_request_id IS NOT NULL
                THEN
                    COMMIT;
                ELSE
                    ROLLBACK;
                END IF;
            END LOOP;

            IF lv_batch_count > 0
            THEN
                apps.fnd_conc_global.set_req_globals (
                    conc_status    => 'PAUSED',
                    request_data   => TO_CHAR (ln_request_id));
            END IF;
        /***********************************************************************************************************************************/
        END IF;

        IF req_data IS NOT NULL
        THEN
            send_email_proc ('Item Integration SKU Program');
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Procedure and it is    '
                || SQLERRM);
            -- Email when program error out
            v_def_mail_recips   :=
                get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
            apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration SKU Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                                 , l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Type: multipart/mixed; boundary=boundarystring',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);

            BEGIN
                SELECT meaning
                  INTO l_primary_email
                  FROM fnd_lookup_values_vl
                 WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Too many primary email addresses.');
            END;

            apps.do_mail_utils.send_mail_line (
                   'Item Integration - SKU Program is completed with Error/Warning. Request ID='
                || fnd_global.conc_request_id,
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_close (l_ret_val);
    -- End Emial code
    END;

    PROCEDURE publish_itemupc_p (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                 , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    IS
        lv_wsdl_ip             VARCHAR2 (25);
        lv_wsdl_url            VARCHAR2 (4000);
        lv_namespace           VARCHAR2 (4000);
        lv_service             VARCHAR2 (4000);
        lv_port                VARCHAR2 (4000);
        lv_operation           VARCHAR2 (4000);
        lv_targetname          VARCHAR2 (4000);
        lx_xmltype_in          SYS.XMLTYPE;
        lx_xmltype_out         SYS.XMLTYPE;
        lc_return              CLOB;
        lv_item_mdflag         VARCHAR2 (1) := 'N';
        ln_itemupccount        NUMBER;
        lv_op_mode             VARCHAR2 (60);
        lv_errmsg              VARCHAR2 (240);
        lv_upc_status          VARCHAR2 (10) := 'N';
        lv_counter             NUMBER;
        /* Modification variables test */
        lv_description         xxdoinv006_int.item_description%TYPE;
        lv_itemstatus          xxdoinv006_int.item_status%TYPE;
        lv_vertex              xxdoinv006_int.vertex_tax%TYPE;
        lv_subclass            xxdoinv006_int.subclass%TYPE;
        lv_rec_count           NUMBER;
        lv_min_slno            NUMBER;
        lv_max_slno            NUMBER;
        lv_from_slno           NUMBER;
        lv_to_slno             NUMBER;
        lv_batch_count         NUMBER;
        ln_request_id          NUMBER;
        lv_request_id          NUMBER := fnd_global.conc_request_id;
        lv_noof_items          NUMBER := 0;
        lv_item_cost           NUMBER := 0;
        lv_req_phase           VARCHAR2 (100);
        lv_req_status          VARCHAR2 (100);
        lv_req_dev_phase       VARCHAR2 (1000);
        lv_req_dev_status      VARCHAR2 (100);
        lv_req_message         VARCHAR2 (2400);
        lv_req_return_status   BOOLEAN;
        req_data               VARCHAR2 (20);
        l_batch_size           NUMBER := 1;
        l_rundate              DATE := NULL;
        ln_styledupcount       NUMBER;             -- Added for 3.2 by Infosys
        l_style                VARCHAR2 (50);      -- Added for 3.2 by Infosys

        CURSOR c_item IS
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                    -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              msib.inventory_item_status_code item_status,
                   /*msib.description, msib.attribute13 scale_code_id,                                                                -- commented by BT Tech team - START
                   msib.attribute11 upc_code,
                   msib.attribute27 transmit_item_rms, */
                   -- commented by BT Tech team - END
                   msib.item_description description, msib.size_scale_id scale_code_id, -- added by BT Tech team - START
                                                                                        msib.upc_code upc_code,
                   msib.item_type transmit_item_rms, -- added by BT Tech team - END
                                                     xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id, msib.organization_id) dept, xxdoinv006_pkg.get_class_f (msib.inventory_item_id, msib.organization_id) CLASS,
                   -- Start modification by BT Technology Team on 01/07/15
                   --                xxdoinv006_pkg.get_class_f (msib.inventory_item_id,
                   xxdoinv006_pkg.get_sub_class_f (msib.inventory_item_id, -- End modification by BT Technology Team on 01/07/15
                                                                           msib.organization_id) subclass, NULL subclass_create_date, NULL subclass_update_date,
                   NULL subclass_updatedby, xxdoinv006_pkg.get_vertex_tax_f (msib.inventory_item_id, msib.organization_id) vertex_tax, NULL vertex_create_date,
                   NULL vertex_update_date, NULL vertex_updatedby, xxdoinv006_pkg.get_cost_us_f (msib.inventory_item_id, msib.organization_id) us_region_cost,
                   NVL (hsoe.get_price_list_value (xxdo_get_price_list ('UK'), msib.inventory_item_id), 0.01) uk_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('JP'), msib.inventory_item_id), 0.01) jp_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('CA'), msib.inventory_item_id), 0.01) ca_region_cost,
                   NVL (hsoe.get_price_list_value (xxdo_get_price_list ('CN'), msib.inventory_item_id), 0.01) cn_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('FR'), msib.inventory_item_id), 0.01) fr_region_cost, NVL (hsoe.get_price_list_value (xxdo_get_price_list ('HK'), msib.inventory_item_id), 0.01) hk_region_cost,
                   NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('USRU'), msib.inventory_item_id), 0.01) us_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CAR'), msib.inventory_item_id), 0.01) ca_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('UKR'), msib.inventory_item_id), 0.01) uk_region_price,
                   NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('CNR'), msib.inventory_item_id), 0.01) cn_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('JPR'), msib.inventory_item_id), 0.01) jp_region_price, NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('FRR'), msib.inventory_item_id), 0.01) fr_region_price,
                   NVL (do_custom.do_get_price_list_value (xxdo_get_price_list ('HKR'), msib.inventory_item_id), 0.01) hk_region_price
              FROM apps.mtl_categories_b mc, apps.mtl_item_categories mic, --apps.mtl_system_items_b msib,                                                                                    -- commented by BT Tech team
                                                                           apps.xxd_common_items_v msib -- added by BT Tech team
             --               , apps.mtl_item_categories mic1, -- Commented by v1.3*
             --Added by Reddeiah #DFCT0010916
             --                apps.mtl_categories mc1       --Added by Reddeiah #DFCT0010916  -- Commented by v1.3*
             WHERE     1 = 1
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mic.category_id = mc.category_id
                   --AND mc.structure_id = 50202                                                                                        -- commented by BT Tech team
                   AND mc.structure_id =
                       (SELECT structure_id   -- added by BT Tech team - START
                          FROM mtl_category_sets
                         WHERE category_set_name = 'OM Sales Category')
                   -- added by BT Tech team - END
                   --AND msib.organization_id = 7                                                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   /*  -- Commented by v1.3*
                   --            AND msib.inventory_item_id = mic1.inventory_item_id
                   --            AND msib.organization_id = mic1.organization_id
                   --            AND mic1.category_id = mc1.category_id
                               --AND mc1.structure_id = 101        --Added by Reddeiah #DFCT0010916                                                -- commented by BT Tech team
                               AND mc1.structure_id =
                                           (SELECT structure_id  -- added by BT Tech team - START
                                              FROM mtl_category_sets
                                             WHERE category_set_name = 'Inventory')
                   */
                   -- added by BT Tech team - END
                   --AND mc1.segment4 <> 'SAMPLE' --Commented by BT Technology Team V1.1 08Mar2015     --Added by Reddeiah #DFCT0010916
                   AND msib.item_type NOT IN
                           ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                   --AND mic1.organization_id = 7      --Added by Reddeiah #DFCT0010916                                                -- commented by BT Tech team
                   /*
                    -- Commented by v1.3*
                               AND mic1.organization_id =
                                      (SELECT ood.organization_id
                                         -- added by BT Tech team - START
                                       FROM   apps.fnd_lookup_values flv,
                                              apps.org_organization_definitions ood
                                        WHERE lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                                          AND lookup_code = 7
                                          AND flv.attribute1 = ood.organization_code
                                          AND LANGUAGE = USERENV ('LANG'))
                   */
                   -- added by BT Tech team - END
                   --AND msib.segment3 <> 'ALL'                                                                                        -- commented by BT Tech team
                   AND msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   --AND msib.attribute13 IS NOT NULL                                                                                    -- commented by BT Tech team
                   AND msib.size_scale_id IS NOT NULL -- added by BT Tech team
                   --AND msib.attribute11 IS NOT NULL                                                                                    -- commented by BT Tech team
                   AND msib.upc_code IS NOT NULL      -- added by BT Tech team
                   AND TRUNC (msib.last_update_date) =
                       NVL (l_rundate, TRUNC (SYSDATE))
                   AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                      msib.organization_id)
                           IS NOT NULL
                   AND NOT EXISTS
                           (SELECT 1
                              FROM apps.fnd_lookup_values
                             WHERE     lookup_type = 'XXDOINV007_STYLE'
                                   AND enabled_flag = 'Y'
                                   AND LANGUAGE = 'US'
                                   --AND description = msib.segment1)                                                                        -- commented by BT Tech team
                                   AND description = msib.style_number)-- added by BT Tech team
                                                                       --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                       /*AND EXISTS (
                                                                              SELECT 1
                                                                                FROM apps.qp_pricing_attributes qpa,
                                                                                     apps.qp_list_lines qll,
                                                                                     apps.qp_list_headers qlh
                                                                               WHERE 1 = 1
                                                                                 AND qpa.list_line_id = qll.list_line_id
                                                                                 AND qll.list_header_id = qlh.list_header_id
                                                                                 AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                                                                                 AND qpa.product_attr_value = mc.category_id
                                                                                 AND qpa.product_attribute_context = 'ITEM'
                                                                                 AND qlh.NAME = 'Retail - US'
                                                                                 )*/
                                                                       --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                       ;

        CURSOR c_itemupc (pn_item_id NUMBER, pn_orgn_id NUMBER, pv_style VARCHAR2, --Added for 3.2 by Infosys
                                                                                   pv_us_region_cost NUMBER, pv_us_region_price NUMBER, pv_uk_region_cost NUMBER, pv_uk_region_price NUMBER, pv_ca_region_cost NUMBER, pv_ca_region_price NUMBER, pv_cn_region_cost NUMBER, pv_cn_region_price NUMBER, pv_jp_region_cost NUMBER, pv_jp_region_price NUMBER, pv_fr_region_cost NUMBER, pv_fr_region_price NUMBER, pv_hk_region_cost NUMBER, pv_hk_region_price NUMBER, pv_dept NUMBER
                          , pv_class VARCHAR2-- Start modification by BT Technology Team on 01/07/15
                                             , pv_subclass VARCHAR2-- End modification by BT Technology Team on 01/07/15
                                                                   )
        IS
            SELECT XMLELEMENT (
                       "v1:XItemDesc",
                       xmlattributes (
                           'http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1'
                               AS "xmlns:v1"),
                       /*  XMLELEMENT ("v1:item",                                             --Start commenting by BT Technology team on 1/12/2014
                                    DECODE ((SUBSTR (msib.attribute11,
                                                     LENGTH (msib.attribute11)
                                                    )
                                            ),
                                            'I', (SUBSTR
                                                        (msib.attribute11,
                                                         1,
                                                           LENGTH
                                                                 (msib.attribute11)
                                                         - 2
                                                        )
                                             ),
                                            msib.attribute11
                                           )
                                   ),*/
                       --END commenting BY BT Technology Team on 1/12/2014
                       XMLELEMENT (
                           "v1:item",
                           --Start Adding by BT Technology team on 1/12/2014
                           DECODE (
                               (SUBSTR (msib.upc_code, LENGTH (msib.upc_code))),
                               'I', (SUBSTR (msib.upc_code, 1, LENGTH (msib.upc_code) - 2)),
                               msib.upc_code) --End Adding by BT Technology Team on 1/12/2014
                                             ),
                       XMLELEMENT ("v1:item_parent", msib.inventory_item_id),
                       --  XMLELEMENT ("v1:item_grandparent", msib.segment1),                           --commented by BT Technology team on 1/12/2014
                       --XMLELEMENT ("v1:item_grandparent", msib.style_number),     --commented for 3.2 by Infosys
                       XMLELEMENT ("v1:item_grandparent", pv_style), --Added for 3.2 by Infosys
                       --Added by BT Technology team on 1/12/2014
                       XMLELEMENT ("v1:pack_ind", 'N'),
                       XMLELEMENT ("v1:item_level", 3),
                       XMLELEMENT ("v1:tran_level", 2),
                       XMLELEMENT (
                           "v1:diff_1",
                           --    xxdoinv006_pkg.get_color_flex_id_f (msib.segment2)                  --commented by BT Technology Team on 1/12/2014
                           xxdoinv006_pkg.get_color_flex_id_f (
                               msib.color_code)--Added by  BT Technology Team on 1/12/2014
                                               ),
                       -- XMLELEMENT ("v1:diff_2", msib.segment3),                                        --commented by BT Technology Team on 1/12/2014
                       XMLELEMENT ("v1:diff_2", msib.item_size),
                       --Added by  BT Technology Team on 1/12/2014
                       XMLELEMENT ("v1:diff_3", ''),
                       XMLELEMENT ("v1:diff_4", ''),
                       XMLELEMENT ("v1:dept", pv_dept),
                       --XXDOINV006_PKG.get_dept_num_f (msib.inventory_item_id, msib.organization_id )),
                       XMLELEMENT ("v1:class", pv_class),
                       --XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       -- Start modification by BT Technology Team on 01/07/15
                       --                    XMLELEMENT ("v1:subclass", pv_class),
                       XMLELEMENT ("v1:subclass", pv_subclass),
                       -- End modification by BT Technology Team on 01/07/15
                       -- XXDOINV006_PKG.get_class_f (msib.inventory_item_id, msib.organization_id )),
                       /* XMLELEMENT ("v1:item_desc",                                    --Start commenting by BT Technology team on 1/12/2014
                                     msib.segment1
                                  || ':'
                                  || msib.segment2
                                  || ':'
                                  || msib.segment3
                                  || ':'
                                  || msib.description
                                 ),*/
                       --END commenting by BT Technology Team on 1/12/2014
                       XMLELEMENT (
                           "v1:item_desc",
                           --Start Adding by BT Technology team on 1/12/2014
                           msib.item_number || ':' || msib.item_description),
                       --end Adding by BT Technology team on 1/12/2014
                       XMLELEMENT ("v1:iscloc_hier_level", 'RE'),
                       XMLELEMENT ("v1:izp_hier_level", 'RE'),
                       /* XMLELEMENT ("v1:short_desc",                                    --Start commenting by BT Technology team on 1/12/2014
                                     msib.segment1
                                  || ':'
                                  || msib.segment2
                                  || ':'
                                  || msib.segment3
                                  || ':'
                                  || msib.description
                                 ),    */
                       --END commenting by BT Technology Team on 1/12/2014
                       XMLELEMENT (
                           "v1:short_desc",
                              --Start Adding by BT Technology team on 1/12/2014
                              --msib.style_number      --commented for 3.2 by Infosys
                              pv_style              --Added for 3.2 by Infosys
                           || ':'
                           || msib.color_code
                           || ':'
                           || msib.item_size
                           || ':'
                           || msib.item_description),
                       --End Adding by BT Technology team on 1/12/2014
                       XMLELEMENT ("v1:retail_zone_group_id", 1),
                       XMLELEMENT ("v1:cost_zone_group_id", 1000),
                       XMLELEMENT ("v1:standard_uom", 'EA'),
                       XMLELEMENT ("v1:store_ord_mult", 'E'),
                       XMLELEMENT ("v1:forecast_ind", 'N'),
                       XMLELEMENT ("v1:simple_pack_ind", 'N'),
                       XMLELEMENT ("v1:contains_inner_ind", 'N'),
                       XMLELEMENT ("v1:sellable_ind", 'Y'),
                       XMLELEMENT ("v1:orderable_ind", 'Y'),
                       XMLELEMENT ("v1:pack_type", ''),
                       XMLELEMENT ("v1:order_as_type", ''),
                       XMLELEMENT ("v1:create_datetime", ''),
                       XMLELEMENT ("v1:XItemCtryDesc",
                                   XMLELEMENT ("v1:country_id", 'US')),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('US')),
                           XMLELEMENT ("v1:primary_supp_ind", 'Y'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'US'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_us_region_cost),
                               --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_us_region_cost),
                                   --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_us_region_cost),
                                   -- XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_us_region_cost),
                                   --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_us_region_cost)),
                               --XXDOINV006_PKG.get_cost_us_f(msib.inventory_item_id,msib.organization_id)) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('US')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('UK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'GB'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_uk_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_uk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_uk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'UK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupctydesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('UK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('JP')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'JP'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_jp_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_jp_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_jp_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'JP')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupctydesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('JP')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CA')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CA'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_ca_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_ca_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_ca_region_cost)),
                               -- XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CA')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CN')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CN'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_cn_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_cn_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_cn_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CN')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')),
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CN')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('HK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'HK'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_hk_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_hk_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_hk_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'HK')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('HK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('FR')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'FR'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", pv_fr_region_cost),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               pv_fr_region_cost),
                                   --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               pv_fr_region_cost)),
                               --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'FR')) ),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('FR')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemVATDesc",
                           XMLELEMENT ("v1:vat_type", 'B'),
                           XMLELEMENT ("v1:vat_region", '1000'),
                           XMLELEMENT ("v1:vat_code", 'S'),
                           XMLELEMENT (
                               "v1:active_date",
                                  TO_CHAR (SYSDATE, 'YYYY-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS'))),
                       --xmlitemzpdesc
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '101'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_us_region_price),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '102'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CA')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_ca_region_price),
                           -- XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CA')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '200'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('UK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_uk_region_price),
                           --XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'UK')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('UK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '301'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CN')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_cn_region_price),
                           --  XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'CN')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CN')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '300'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('JP')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       pv_jp_region_price),
                           --XXDOINV006_PKG.get_region_price_f(msib.segment1,msib.segment2,msib.segment3,'JP')),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('JP')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '305'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('HK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_hk_region_price-- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('HK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '212'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('FR')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail",
                                       -- Start modification by BT Technology Team on 11-Nov-15 v1.5
                                       --                                         pv_us_region_price
                                       pv_fr_region_price-- End modification by BT Technology Team on 11-Nov-15 v1.5
                                                         ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('FR')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 1),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_vertex_tax_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_vertex_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_vertex_updatedate_f   --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                          )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_vertex_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 2),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_sub_group_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_sub_group_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS') --Added for change 2.1(Business wants SYSDATE)
                                                                 --xxdoinv006_pkg.get_sub_group_updatedate_f   --Commented for change 2.1(Needed sysdate)
                                                                 --                          (msib.inventory_item_id,
                                                                 --                           msib.organization_id
                                                                 --                          )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_sub_group_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT ("v1:status", 'A'),
                       XMLELEMENT ("v1:uom_conv_factor", ''),
                       XMLELEMENT ("v1:package_size", 1),
                       XMLELEMENT ("v1:handling_temp", ''),
                       XMLELEMENT ("v1:handling_sensitivity", ''),
                       XMLELEMENT ("v1:mfg_rec_retail", ''),
                       XMLELEMENT ("v1:waste_type", ''),
                       XMLELEMENT ("v1:waste_pct", ''),
                       XMLELEMENT ("v1:item_number_type", 'UPC-A'),
                       XMLELEMENT ("v1:catch_weight_ind", 'N'),
                       XMLELEMENT ("v1:const_dimen_ind", 'N'),
                       XMLELEMENT ("v1:gift_wrap_ind", 'N'),
                       XMLELEMENT ("v1:ship_alone_ind", 'N'),
                       XMLELEMENT ("v1:ext_source_system", ''),
                       XMLELEMENT ("v1:size_group1", ''),
                       XMLELEMENT ("v1:size_group2", ''),
                       XMLELEMENT ("v1:size1", ''),
                       XMLELEMENT ("v1:size2", ''),
                       XMLELEMENT ("v1:color", ''),
                       XMLELEMENT ("v1:system_ind", ''),
                       XMLELEMENT ("v1:upc_supplement", ''),
                       XMLELEMENT ("v1:upc_type", ''),
                       XMLELEMENT ("v1:primary_upc_ind", ''),
                       XMLELEMENT ("v1:primary_repl_ind", ''),
                       XMLELEMENT ("v1:item_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_1_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_2_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_3_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_4_aggregate_ind", ''),
                       XMLELEMENT ("v1:perishable_ind", 'N'),
                       XMLELEMENT ("v1:notional_pack_ind", 'N'),
                       XMLELEMENT ("v1:soh_inquiry_at_pack_ind", 'N'),
                       XMLELEMENT ("v1:aip_case_type", ''),
                       XMLELEMENT ("v1:banded_item_ind", 'N'),
                       XMLELEMENT ("v1:order_type", ''),
                       XMLELEMENT ("v1:sale_type", ''),
                       XMLELEMENT ("v1:catch_weight_uom", ''),
                       XMLELEMENT ("v1:deposit_item_type", ''),
                       XMLELEMENT ("v1:inventory_ind", 'Y'),
                       XMLELEMENT ("v1:item_xform_ind", 'N'),
                       XMLELEMENT ("v1:container_item", ''),
                       XMLELEMENT ("v1:package_uom", '')) itemxml
              /* FROM apps.mtl_system_items_b msib,                                                --start commenting by BT Technology Team on 1/12/2014
                     apps.mtl_item_categories mic1,
                     --Added by Reddeiah #DFCT0010916
                     apps.mtl_categories mc1       --Added by Reddeiah #DFCT0010916
               WHERE               --and msib.inventory_item_status_code = 'Active'
                     msib.attribute11 IS NOT NULL
                 AND msib.attribute13 IS NOT NULL
                 AND msib.segment3 <> 'ALL'
                 AND msib.inventory_item_id = mic1.inventory_item_id
                 --Added by Reddeiah #DFCT0010916
                 AND msib.organization_id = mic1.organization_id
                 --Added by Reddeiah #DFCT0010916
                 AND mic1.category_id = mc1.category_id
                 --Added by Reddeiah #DFCT0010916
                 AND mc1.structure_id = 101        --Added by Reddeiah #DFCT0010916
                 AND mc1.segment4 <> 'SAMPLE'      --Added by Reddeiah #DFCT0010916
                 AND mic1.organization_id = 7      --Added by Reddeiah #DFCT0010916
       --   AND msib.segment1 NOT LIKE 'S%L' -- Commented by Reddeiah #DFCT0010916
     --   AND msib.segment1 NOT LIKE 'S%R' -- Commented by Reddeiah #DFCT0010916*/
              --ENd commenting by BT Technology Team on 1/12/2014
              FROM apps.xxd_common_items_v msib
             --start adding by BT Technology team on 05/12/2014
             WHERE     msib.upc_code IS NOT NULL
                   AND msib.size_scale_id IS NOT NULL
                   AND msib.item_type <> 'GENERIC'
                   --AND msib.master_class <> 'SAMPLE'  --Commented by BT Technology Team V1.1 08Mar2015
                   AND msib.item_type NOT IN
                           ('SAMPLE', 'SAMPLE-L', 'SAMPLE-R') --added by BT Technology Team V1.1 08Mar2015
                   AND msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   AND msib.inventory_item_id = pn_item_id
                   AND msib.organization_id = pn_orgn_id;

        --END Adding by BT Technology Team on 05/12/2014

        --CURSOR C_ITEMPUBLISH(PV_SEGMENT1 VARCHAR2, PN_ITEM_ID NUMBER) IS
        CURSOR c_itempublish IS
            SELECT *
              FROM xxdoinv006_int
             WHERE upc_status_flag = 'N' AND item_type = 'UPC';

        --AND UPPER(TRIM(STYLE))=UPPER(TRIM(PV_SEGMENT1))
        --AND INVENTORY_ITEM_ID = PN_ITEM_ID;
        CURSOR c_itemupcrepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006_int
             WHERE     upc_status_flag IN ('VE', 'P')
                   AND item_type = 'UPC'
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        req_data    := fnd_conc_global.request_data;
        l_rundate   := TRUNC (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'));

        IF (req_data IS NULL)
        THEN
            /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
            BEGIN
                SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                         --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                         'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                                  apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
                  INTO lv_wsdl_ip
                  FROM apps.fnd_product_groups;
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the File server name');
                    pv_retcode   := 2;
            END;

            /* Initializing the Item loc web service variables */
            lv_wsdl_url      :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService?WSDL';
            lv_namespace     :=
                'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
            lv_service       := 'XItemPublishingService';
            lv_port          := 'XItemPublishingPort';
            lv_operation     := 'publishXItemCreateUsingXItemDesc';
            lv_targetname    :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService';

            IF pv_reprocess = 'Y'
            THEN
                /* Retreive the data from the Staging table based on the dates */
                FOR rec_reprocess
                    IN c_itemupcrepublish (pv_fromdate, pv_todate)
                LOOP
                    /* Inserting the data into Staging table using the code */
                    FOR i
                        IN c_itemupc (rec_reprocess.inventory_item_id,
                                      rec_reprocess.organization_id,
                                      rec_reprocess.style, --Added for 3.2 by Infosys
                                      rec_reprocess.us_region_cost,
                                      rec_reprocess.us_region_price,
                                      rec_reprocess.uk_region_cost,
                                      rec_reprocess.uk_region_price,
                                      rec_reprocess.ca_region_cost,
                                      rec_reprocess.ca_region_price,
                                      rec_reprocess.cn_region_cost,
                                      rec_reprocess.cn_region_price,
                                      rec_reprocess.jp_region_cost,
                                      rec_reprocess.jp_region_price,
                                      rec_reprocess.fr_region_cost,
                                      rec_reprocess.fr_region_price,
                                      rec_reprocess.hk_region_cost,
                                      rec_reprocess.hk_region_price,
                                      rec_reprocess.department,
                                      rec_reprocess.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                         ,
                                      rec_reprocess.SUBCLASS-- End modification by BT Technology Team on 01/07/15
                                                            )
                    LOOP
                        BEGIN
                            UPDATE xxdoinv006_int
                               SET xdata   = XMLTYPE.getclobval (i.itemxml)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv006_int
                                   SET upc_status_flag = 'VE', errorcode = lv_errmsg, xdata = XMLTYPE.getclobval (i.itemxml)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */

                    /* Publish Item  */
                    IF rec_reprocess.operation = 'ITEM_CREATE'
                    THEN
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemCreateUsingXItemDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
          xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
          xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
          xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
          xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
          xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
          xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
          xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
          xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
          xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">

'
                                || rec_reprocess.xdata
                                || '</publishXItemCreateUsingXItemDesc>');
                    ELSE
                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXItemModifyUsingXItemDesc

xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"

xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"


xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXItemModifyUsingXItemDesc>');
                    END IF;

                    /* Calling the webservice here */
                    BEGIN
                        lx_xmltype_out   :=
                            xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                      , lx_xmltype_in);

                        IF lx_xmltype_out IS NOT NULL
                        THEN
                            fnd_file.put_line (
                                fnd_file.output,
                                'Response is stored in the staging table  ');
                            lc_return   :=
                                XMLTYPE.getclobval (lx_xmltype_out);

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', upc_status_flag = 'P',
                                   transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        ELSE
                            fnd_file.put_line (fnd_file.output,
                                               'Response is NULL  ');
                            lc_return   := NULL;

                            UPDATE xxdoinv006_int
                               SET retval = lc_return, upc_status_flag = 'VE', transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        END IF;

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv006_int
                               SET upc_status_flag = 'VE', errorcode = lv_errmsg
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                || SQLERRM);
                    END;                    /* End calling the webservice   */
                END LOOP;                                 /* For REPublish  */
            ELSE
                FOR rec_item IN c_item
                LOOP
                    ln_itemupccount    := NULL;
                    /*------ Start added for 3.2 by Infosys-------*/
                    ln_styledupcount   := NULL;
                    l_style            := NULL;


                    SELECT COUNT (1)
                      INTO ln_styledupcount
                      FROM mtl_system_items_b
                     WHERE TO_CHAR (inventory_item_id) = rec_item.style;


                    IF ln_styledupcount <> 0
                    THEN
                        l_style   := 'RMS-' || (rec_item.style);
                    ELSE
                        l_style   := rec_item.style;
                    END IF;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_styledupcount ' || ln_styledupcount);

                    fnd_file.put_line (fnd_file.LOG, 'l_style ' || l_style);

                    /*------ End--- added for 3.2 by Infosys-------*/
                    SELECT COUNT (1)
                      INTO ln_itemupccount
                      --FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod                                                -- commented by BT Tech team
                      FROM item_master@xxdo_retail_rms -- added by BT Tech team
                     WHERE     item = TO_CHAR (rec_item.upc_code)
                           AND item_parent =
                               TO_CHAR (rec_item.inventory_item_id)
                           AND item_level = 3;

                    IF ln_itemupccount >= 1
                    THEN --AND  UPPER(TRIM(REC_ITEM.Transmit_Item_RMS))='Y' THEN
                        lv_op_mode     := 'ITEM_UPDATE';
                        lv_operation   := 'publishXItemModifyUsingXItemDesc';

                        BEGIN
                            SELECT SUBSTR (item_desc, (INSTR (item_desc, ':', -1) + 1)), status
                              INTO lv_description, lv_itemstatus
                              --FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod                                        -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE     item = TO_CHAR (rec_item.upc_code)
                                   AND item_parent =
                                       TO_CHAR (rec_item.inventory_item_id)
                                   AND item_level = 3;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Exception occured while retrieing the item description ');
                        END;

                        IF ((NVL (UPPER (TRIM (lv_description)), '0') <> UPPER (TRIM (rec_item.description))))
                        THEN
                            lv_upc_status   := 'N';
                        ELSE
                            lv_upc_status   := 'NR';
                        END IF;
                    ELSE
                        ln_itemupccount   := NULL;

                        BEGIN
                            SELECT COUNT (1)
                              INTO ln_itemupccount
                              --FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod                                        -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms
                             -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (rec_item.inventory_item_id)
                                   AND item_level = 2;

                            IF ln_itemupccount >= 1
                            THEN
                                lv_op_mode      := 'ITEM_CREATE';
                                lv_operation    :=
                                    'publishXItemCreateUsingXItemDesc';
                                lv_upc_status   := 'N';
                            ELSE
                                lv_op_mode      := 'ITEM_CREATE';
                                lv_operation    :=
                                    'publishXItemCreateUsingXItemDesc';
                                lv_upc_status   := 'NP';
                            END IF;
                        END;
                    END IF;

                    IF    rec_item.dept IS NULL
                       OR rec_item.CLASS IS NULL
                       OR rec_item.scale_code_id IS NULL
                       -- Start modification by BT Technology Team on 01/07/15
                       OR rec_item.SUBCLASS IS NULL
                    -- End modification by BT Technology Team on 01/07/15
                    THEN
                        lv_upc_status   := 'NOCLASS';
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'Mandatory columns like Department, Class, Scale Code id either one or all of them is missing  for Item
'
                            || rec_item.upc_code);
                    END IF;

                    --      fnd_file.put_line(fnd_file.log, 'begin of I cursor'|| systimestamp);

                    /* Inserting the data into Staging table using the code */
                    FOR i IN c_itemupc (rec_item.inventory_item_id, rec_item.organization_id, l_style, --Added for 3.2 by Infosys
                                                                                                       rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, rec_item.dept
                                        , rec_item.CLASS-- Start modification by BT Technology Team on 01/07/15
                                                        , rec_item.SUBCLASS-- End modification by BT Technology Team on 01/07/15
                                                                           )
                    LOOP
                        lv_counter   := lv_counter + 1;

                        IF (lv_counter = 500)
                        THEN
                            COMMIT;
                            lv_counter   := 0;
                        END IF;

                        BEGIN
                            INSERT INTO xxdoinv006_int (slno, servicetype, item_type, operation, inventory_item_id, organization_id, style, color, sze, item_status, item_description, scale_code_id, department, CLASS, subclass, subclass_creation_date, subclass_update_date, subclass_updatedby, vertex_tax, vertex_creation_date, vertex_update_date, vertex_updatedby, us_region_cost, us_region_price, uk_region_cost, uk_region_price, ca_region_cost, ca_region_price, cn_region_cost, cn_region_price, jp_region_cost, jp_region_price, fr_region_cost, fr_region_price, hk_region_cost, hk_region_price, upc_status_flag, upc_value, xdata
                                                        , parent_request_id)
                                 VALUES (xxdoinv006_int_s.NEXTVAL, 'ITEM ', 'UPC', lv_op_mode, rec_item.inventory_item_id, rec_item.organization_id, --rec_item.style,          --commented for 3.2 by Infosys
                                                                                                                                                     l_style, --Added for 3.2 by Infosys
                                                                                                                                                              rec_item.color, rec_item.sze, rec_item.item_status, rec_item.description, rec_item.scale_code_id, rec_item.dept, rec_item.CLASS, rec_item.subclass, rec_item.subclass_create_date, rec_item.subclass_update_date, rec_item.subclass_updatedby, rec_item.vertex_tax, rec_item.vertex_create_date, rec_item.vertex_update_date, rec_item.vertex_updatedby, rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, lv_upc_status, rec_item.upc_code, XMLTYPE.getclobval (i.itemxml)
                                         , lv_request_id);
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                INSERT INTO xxdoinv006_int (
                                                servicetype,
                                                item_type,
                                                operation,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                item_status,
                                                item_description,
                                                scale_code_id,
                                                department,
                                                CLASS,
                                                subclass,
                                                subclass_creation_date,
                                                subclass_update_date,
                                                subclass_updatedby,
                                                vertex_tax,
                                                vertex_creation_date,
                                                vertex_update_date,
                                                vertex_updatedby,
                                                us_region_cost,
                                                us_region_price,
                                                uk_region_cost,
                                                uk_region_price,
                                                ca_region_cost,
                                                ca_region_price,
                                                cn_region_cost,
                                                cn_region_price,
                                                jp_region_cost,
                                                jp_region_price,
                                                fr_region_cost,
                                                fr_region_price,
                                                hk_region_cost,
                                                hk_region_price,
                                                upc_status_flag,
                                                errorcode,
                                                upc_value,
                                                xdata,
                                                parent_request_id)
                                     VALUES ('ITEM ', 'UPC', lv_op_mode,
                                             rec_item.inventory_item_id, rec_item.organization_id, --rec_item.style,         --commented for 3.2 by Infosys
                                                                                                   l_style, --Added for 3.2 by Infosys
                                                                                                            rec_item.color, rec_item.sze, rec_item.item_status, rec_item.description, rec_item.scale_code_id, rec_item.dept, rec_item.CLASS, rec_item.subclass, rec_item.subclass_create_date, rec_item.subclass_update_date, rec_item.subclass_updatedby, rec_item.vertex_tax, rec_item.vertex_create_date, rec_item.vertex_update_date, rec_item.vertex_updatedby, rec_item.us_region_cost, rec_item.us_region_price, rec_item.uk_region_cost, rec_item.uk_region_price, rec_item.ca_region_cost, rec_item.ca_region_price, rec_item.cn_region_cost, rec_item.cn_region_price, rec_item.jp_region_cost, rec_item.jp_region_price, rec_item.fr_region_cost, rec_item.fr_region_price, rec_item.hk_region_cost, rec_item.hk_region_price, 'VE', lv_errmsg, rec_item.upc_code, XMLTYPE.getclobval (i.itemxml)
                                             , lv_request_id);

                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */
                END LOOP;

                COMMIT;
            /*

            FOR j IN c_itempublish
            LOOP
               IF j.operation = 'ITEM_CREATE'
               THEN
                  lx_xmltype_in :=
                     SYS.XMLTYPE
                        (   '<publishXItemCreateUsingXItemDesc
                             xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                             xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                             xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                             xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                             xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                             xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                             xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                             xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                             xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                             xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                             xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                             xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                             xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                             xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                             xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                         || j.xdata
                         || '</publishXItemCreateUsingXItemDesc>'
                        );
               ELSE
                  lx_xmltype_in :=
                     SYS.XMLTYPE
                        (   '<publishXItemModifyUsingXItemDesc
                              xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                              xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                              xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                              xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                              xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                              xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                              xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                              xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                              xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                              xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                              xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                              xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                              xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                              xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                              xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                         || j.xdata
                         || '</publishXItemModifyUsingXItemDesc>'
                        );
               END IF;


               BEGIN
                  lx_xmltype_out :=
                     xxdo_invoke_webservice_f (lv_wsdl_url,
                                               lv_namespace,
                                               lv_targetname,
                                               lv_service,
                                               lv_port,
                                               lv_operation,
                                               lx_xmltype_in
                                              );

                  IF lx_xmltype_out IS NOT NULL
                  THEN
                     fnd_file.put_line
                                    (fnd_file.output,
                                     'Response is stored in the staging table  '
                                    );
                     lc_return := XMLTYPE.getclobval (lx_xmltype_out);

                     UPDATE xxdoinv006_int
                        SET retval = lc_return,
                            processed_flag = 'Y',
                            upc_status_flag = 'P',
                            transmission_date = SYSDATE
                      WHERE slno = j.slno;
                  ELSE
                     fnd_file.put_line (fnd_file.output, 'Response is NULL  ');
                     lc_return := NULL;

                     UPDATE xxdoinv006_int
                        SET retval = lc_return,
                            upc_status_flag = 'VE',
                            transmission_date = SYSDATE
                      WHERE slno = j.slno;
                  END IF;
               EXCEPTION
                  WHEN OTHERS
                  THEN
                     lv_errmsg := SQLERRM;

                     UPDATE xxdoinv006_int
                        SET upc_status_flag = 'VE',
                            errorcode = lv_errmsg
                      WHERE slno = j.slno;

                     COMMIT;
                     fnd_file.put_line
                        (fnd_file.LOG,
                            'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                         || SQLERRM
                        );
               END;

               lv_counter := lv_counter + 1;

               IF (lv_counter = 500)
               THEN
                  COMMIT;
                  lv_counter := 0;
               END IF;
            END LOOP;

            COMMIT;

            */
            END IF;

            /***********************************************************************************************************************************/
            fnd_file.put_line (fnd_file.LOG, '***Batching Started ***');

            BEGIN
                SELECT COUNT (*)
                  INTO lv_rec_count
                  FROM xxdoinv006_int
                 WHERE                                 -- processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Code :' || SQLCODE);
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_rec_count=' || lv_rec_count);

            BEGIN
                SELECT MIN (slno)
                  INTO lv_min_slno
                  FROM xxdoinv006_int
                 WHERE                                 -- processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            BEGIN
                SELECT MAX (slno)
                  INTO lv_max_slno
                  FROM xxdoinv006_int
                 WHERE                                 -- processed_flag = 'N'
                           NVL (processed_flag, 'N') = 'N'
                       AND parent_request_id = lv_request_id;
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_rec_count   := 0;
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'Error while finding the min no of records');
                    fnd_file.put_line (fnd_file.LOG,
                                       'SQL Error Message :' || SQLERRM);
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_min_slno=' || lv_min_slno);
            lv_batch_count   :=
                NVL (apps.fnd_profile.VALUE ('XXDO_ITEM_INT_CHILD_REQ'), 1);
            l_batch_size     := CEIL (lv_rec_count / lv_batch_count);

            --         IF l_batch_size = 1
            --         THEN
            --            lv_batch_count := 1;
            --         END IF;
            IF l_batch_size = 1
            THEN
                IF lv_rec_count = 1
                THEN
                    l_batch_size   := 1;
                ELSIF lv_rec_count = 2
                THEN
                    l_batch_size   := 2;
                END IF;

                lv_batch_count   := 1;
            END IF;

            fnd_file.put_line (
                fnd_file.LOG,
                '***Batching Started ***:lv_batch_count=' || lv_batch_count);

            FOR i IN 1 .. lv_batch_count
            LOOP
                IF i = 1
                THEN
                    lv_from_slno   := lv_min_slno;
                    lv_to_slno     := lv_from_slno + l_batch_size;
                ELSE
                    lv_from_slno   := lv_to_slno + 1;
                    lv_to_slno     := lv_from_slno + l_batch_size;
                END IF;

                IF lv_to_slno > lv_max_slno
                THEN
                    lv_to_slno   := lv_max_slno;
                END IF;

                fnd_file.put_line (fnd_file.LOG,
                                   'lv_from_slno' || lv_from_slno);
                fnd_file.put_line (fnd_file.LOG, 'lv_to_slno' || lv_to_slno);
                ln_request_id   :=
                    apps.fnd_request.submit_request (
                        application   => 'XXDO',
                        program       => 'XXDOINV006_ITEM_CALL_WEBSRV',
                        description   =>
                               'Child Request - Call UPC WEB Service - Deckers('
                            || i
                            || ')',
                        start_time    => SYSDATE,
                        sub_request   => TRUE,
                        argument1     => lv_from_slno,
                        argument2     => lv_to_slno,
                        argument3     => lv_request_id,
                        argument4     => 'ITEM_UPC');
                fnd_file.put_line (
                    fnd_file.LOG,
                    'Submitted BATCH ' || i || 'Request id ' || ln_request_id);

                IF ln_request_id IS NOT NULL
                THEN
                    COMMIT;
                ELSE
                    ROLLBACK;
                END IF;
            END LOOP;

            IF lv_batch_count > 0
            THEN
                apps.fnd_conc_global.set_req_globals (
                    conc_status    => 'PAUSED',
                    request_data   => TO_CHAR (ln_request_id));
            END IF;
        /***********************************************************************************************************************************/
        END IF;

        IF req_data IS NOT NULL
        THEN
            send_email_proc ('Item Integration UPC Program');
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Procedure and it is    '
                || SQLERRM);
            -- Email when program error out
            v_def_mail_recips   :=
                get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
            apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration UPC Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                                 , l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Type: multipart/mixed; boundary=boundarystring',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);

            BEGIN
                SELECT meaning
                  INTO l_primary_email
                  FROM fnd_lookup_values_vl
                 WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Too many primary email addresses.');
            END;

            apps.do_mail_utils.send_mail_line (
                   'Item Integration - UPC Program is completed with Error/Warning. Request ID='
                || fnd_global.conc_request_id,
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_close (l_ret_val);
    -- End Emial code
    END;

    PROCEDURE publish_itemcostchange_p (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                        , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    IS
        /***************************************************************************************


         (Modified the procedure by Vikranth Sunera on 10/06/2012)
            1. Modified the UK,Canada,Japan XML Data cursors to fetch the cost
            information from either Retail Tables or EBS Pricing Tables.

        Coding part is aaded to the stores part of japan region



        *******************************************************************************************/
        lv_wsdl_ip        VARCHAR2 (25);
        lv_wsdl_url       VARCHAR2 (4000);
        lv_namespace      VARCHAR2 (4000);
        lv_service        VARCHAR2 (4000);
        lv_port           VARCHAR2 (4000);
        lv_operation      VARCHAR2 (4000);
        lv_targetname     VARCHAR2 (4000);
        lx_xmltype_in     SYS.XMLTYPE;
        lx_xmltype_out    SYS.XMLTYPE;
        lc_return         CLOB;
        lv_reg_val        VARCHAR2 (10);
        lv_op_mode        VARCHAR2 (60);
        lv_errmsg         VARCHAR2 (240);
        lv_brand          VARCHAR2 (30);
        lv_concept        VARCHAR2 (30);
        lv_shoka          VARCHAR2 (30);
        ln_itemcost       NUMBER (10, 2);
        ln_us_cost        NUMBER (10, 2);
        ln_uk_cost        NUMBER (10, 2);
        ln_jp_cost        NUMBER (10, 2);
        ln_ca_cost        NUMBER (10, 2);
        ln_cn_cost        NUMBER (10, 2);
        ln_fr_cost        NUMBER (10, 2);
        lv_region_us      VARCHAR2 (10);
        lv_region_uk      VARCHAR2 (10);
        lv_region_jp      VARCHAR2 (10);
        lv_region_ca      VARCHAR2 (10);
        lv_region_cn      VARCHAR2 (10);
        lv_region_fr      VARCHAR2 (10);
        lv_region_hk      VARCHAR2 (10);
        lv_alu            VARCHAR2 (100);
        lv_counter        NUMBER := 0;
        ln_cad_exchange   NUMBER;

        CURSOR c_itemcost IS
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                    -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              'US' region,
                   xxdoinv006_pkg.get_cost_us_f (msib.inventory_item_id, msib.organization_id) us_region_cost
              FROM --apps.mtl_system_items_b msib,                                                                                    -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.mtl_item_categories mic, apps.mtl_categories mc,
                   apps.mtl_category_sets mcs, apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.segment3 <> 'ALL'                                                                                        -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   -- and MSIB.segment1 not like 'S%L' --Commented by Naga ENHC0011725
                   -- and MSIB.SEGMENT1 NOT LIKE 'S%R' --Commented by Naga ENHC0011725
                   --and MSIB.inventory_item_status_code = 'Active'
                   --  and msib.attribute11 is not null -- Commented by Naga ENHC0011725
                   -- and msib.attribute13 is not null -- Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                   AND qpa.product_attr_value = mc.category_id
                   --                and qpa.product_attr_value = to_char(mc.category_id)
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND mcs.category_set_name = 'Styles'                                                                                -- commented by BT Tech team
                   AND mcs.category_set_name = 'OM Sales Category'
                   -- added by BT Tech team
                   --AND msib.organization_id = 7                                                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qlh.NAME IN ('Wholesale - US', 'Retail - Outlet')
                   AND EXISTS
                           (SELECT 1
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                        -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (msib.inventory_item_id)
                                   AND item_level = tran_level)
            -- Added by Naga ENHC0011725
                 /*and exists ( SELECT 1
                         from  qp_pricing_attributes qpa1,
                           qp_list_lines qll1,
                           qp_list_headers qlh1,
                           mtl_categories_b mc1,
                           mtl_category_sets mcs1,
                           mtl_item_categories mic1,
                           mtl_system_items_b msib1
                         where qpa1.list_line_id =qll1.list_line_id
                                and qll1.list_header_id=qlh1.list_header_id
                                and mic1.inventory_item_id = msib1.inventory_item_id
                                and mic1.organization_id   = msib1.organization_id
                                and mc1.structure_id   = mcs1.structure_id
                                and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                and qpa1.product_attr_value = mc1.category_id
--                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                and mic1.category_id    = mc1.category_id
                                and mic1.category_set_id = mcs1.category_set_id
                                and msib1.organization_id = 7
                                --and msib1.inventory_item_status_code = 'Active'
                                and qpa1.product_attribute_context ='ITEM'
                                and  qlh1.name ='Retail - US'
                                and mcs1.category_set_name='Styles'
                                and msib1.inventory_item_id=msib.inventory_item_id
                                and msib.organization_id = msib1.organization_id
                                and rownum<=1)
                                AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                      msib.organization_id
                                     ) IS NOT NULL*/
            --Commented by Naga #ENH
            UNION
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                        -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              'US' region,
                   xxdoinv006_pkg.get_cost_us_f (msib.inventory_item_id, msib.organization_id) us_region_cost
              FROM --apps.mtl_system_items_b msib,                                                                                        -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.mtl_item_categories mic, apps.mtl_categories mc,
                   apps.mtl_category_sets mcs, apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.segment3 <> 'ALL'                                                                                            -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   --and MSIB.segment1 not like 'S%L' --Commented by Naga ENHC0011725
                   --and MSIB.SEGMENT1 NOT LIKE 'S%R' --Commented by Naga ENHC0011725
                   --and MSIB.inventory_item_status_code = 'Active'
                   --and msib.attribute11 is not null ---Commented by Naga ENHC0011725
                   --and msib.attribute13 is not null --Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --                and qpa.product_attr_value = to_char(mc.category_id)
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND msib.organization_id = 7                                                                                            -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qlh.NAME = 'Retail - Outlet'
                   --AND mcs.category_set_name = 'Styles'                                                                                    -- commented by BT Tech team
                   AND mcs.category_set_name = 'OM Sales Category'
                   -- added by BT Tech team
                   AND EXISTS
                           (SELECT 1
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                            -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /* and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib.organization_id = msib1.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        --Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_us (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('US')),
                       XMLELEMENT ("v1:origin_country_id", 'US'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT (
                           "v1:unit_cost",
                           xxdoinv006_pkg.get_cost_us_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code",
                                   xxdoinv006_pkg.get_curr_code_f ('US')),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND LANGUAGE = 'US'
                               AND description = 'US'
                               AND enabled_flag = 'Y')) itemcost
              FROM apps.mtl_system_items msib
             WHERE     msib.inventory_item_id = pn_itemid
                   AND msib.organization_id = pn_orgnid;

        CURSOR c_itemcost_uk IS
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                    -- commented by BT Tech team
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,                -- added by BT Tech team
                   /*xxdoinv006_pkg.get_region_cost_f                                                                                -- commented by BT Tech team - START
                                                  (msib.segment1,
                                                   msib.segment2,
                                                   msib.segment3,
                                                   'UK'
                                                  ) uk_region_cost */
                   -- commented by BT Tech team - END
                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, -- added by BT Tech team - START
                                                                        msib.color_code, msib.item_size
                                                     , 'UK') uk_region_cost -- added by BT Tech team - END
              FROM --apps.mtl_system_items_b msib,                                                                                    -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     /*msib.attribute13 is not null
                        AND msib.attribute11 IS NOT NULL*/
                       --Commented by Naga ENHC0011725
                       --msib.segment3 <> 'ALL'                                                                                        -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   --and MSIB.segment1 not like 'S%L' --Commented by Naga ENHC0011725
                   --and MSIB.SEGMENT1 NOT LIKE 'S%R' --Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   --AND msib.organization_id = 7                                                                                        -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END )
                   AND qlh.NAME = 'DEL GBP Inter Company Price list'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              --  FROM rms13prod.item_master@rmsprod     --rms13prod.item_master@rmsprod                                        -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /* and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib1.organization_id = msib.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL*/
        --Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_uk (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('UK')),
                       XMLELEMENT ("v1:origin_country_id", 'GB'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,                                                -- commented by BT Tech team - START
                                                                     msib.segment2,
                                                                     msib.segment3,
                                                                     'UK'
                                                                    )*/
                                   -- commented by BT Tech team - END
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, -- added by BT Tech team - START
                                                                                        msib.color_code, msib.item_size
                                                                     , 'UK') -- added by BT Tech team - END
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'GBP'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND enabled_flag = 'Y'
                               AND LANGUAGE = 'US'
                               AND description = 'UK')) itemcost
              --FROM mtl_system_items_b msib                                                                                            -- commented by BT Tech team
              FROM xxd_common_items_v msib            -- added by BT Tech team
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_jp IS
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                        -- commented by BT Tech team
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,                -- added by BT Tech team
                   /*xxdoinv006_pkg.get_region_cost_f                                                                                    -- commented by BT Tech team - START
                                                  (msib.segment1,
                                                   msib.segment2,
                                                   msib.segment3,
                                                   'JP'
                                                  ) jp_region_cost */
                   -- commented by BT Tech team - END
                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, -- added by BT Tech team - START
                                                                        msib.color_code, msib.item_size
                                                     , 'JP') jp_region_cost -- added by BT Tech team - END
              FROM --apps.mtl_system_items_b msib,                                                                                        -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.segment3 <> 'ALL'                                                                                            -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   and msib.attribute11 is not null
                   and msib.attribute13 is not null*/
                   -- Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   --AND msib.organization_id = 7                                                                                            -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qlh.NAME = 'Japan Retail Replenishment JPY'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                            -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level)
            -- Added by Naga ENHC0011725
            /* and exists ( SELECT 1
                         from  qp_pricing_attributes qpa1,
                           qp_list_lines qll1,
                           qp_list_headers qlh1,
                           mtl_categories_b mc1,
                           mtl_category_sets mcs1,
                           mtl_item_categories mic1,
                           mtl_system_items_b msib1
                         where qpa1.list_line_id =qll1.list_line_id
                                and qll1.list_header_id=qlh1.list_header_id
                                and mic1.inventory_item_id = msib1.inventory_item_id
                                and mic1.organization_id   = msib1.organization_id
                                and mc1.structure_id   = mcs1.structure_id
                                and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                and qpa1.product_attr_value = mc1.category_id
--                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                and mic1.category_id    = mc1.category_id
                                and mic1.category_set_id = mcs1.category_set_id
                                and msib1.organization_id = 7
                                --and msib1.inventory_item_status_code = 'Active'
                                and qpa1.product_attribute_context ='ITEM'
                                and  qlh1.name ='Retail - US'
                                and mcs1.category_set_name='Styles'
                                and msib1.inventory_item_id=msib.inventory_item_id
                                and msib1.organization_id = msib.organization_id
                                and rownum<=1)
                                AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                      msib.organization_id
                                     ) IS NOT NULL*/
            -- Commented by Naga ENHC0011725
            UNION
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                        -- commented by BT Tech team
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,        -- added by BT Tech team - START
                   /*xxdoinv006_pkg.get_region_cost_f                                                                                    -- commented by BT Tech team - START
                                                  (msib.segment1,
                                                   msib.segment2,
                                                   msib.segment3,
                                                   'JP'
                                                  ) jp_region_cost*/
                   -- commented by BT Tech team - END
                   xxdoinv006_pkg.get_region_cost_f -- added by BT Tech team - START
                                                    (msib.style_number, msib.color_code, msib.item_size
                                                     , 'JP') jp_region_cost
              -- added by BT Tech team - END
              FROM --apps.mtl_system_items_b msib,                                                                                        -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.mtl_item_categories mic, apps.mtl_categories mc,
                   apps.mtl_category_sets mcs, apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.segment3 <> 'ALL'                                                                                            -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   --and MSIB.inventory_item_status_code = 'Active'
                   and msib.attribute11 is not null
                   and msib.attribute13 is not null*/
                   -- Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE2'
                   AND qpa.product_attr_value = mc.category_id
                   --                and qpa.product_attr_value = to_char(mc.category_id)
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND mcs.category_set_name = 'Styles'                                                                                    -- commented by BT Tech team
                   AND mcs.category_set_name =
                       (SELECT structure_id   -- added by BT Tech team - START
                          FROM mtl_category_sets
                         WHERE category_set_name = 'OM Sales Category')
                   -- added by BT Tech team - END
                   -- AND msib.organization_id = 7                                                                                            -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qlh.NAME = 'Japan Retail Replenishment JPY'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                            -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item =
                                       TO_CHAR (msib.inventory_item_id)
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /*and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib.organization_id = msib1.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        -- Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_jp (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('JP')),
                       XMLELEMENT ("v1:origin_country_id", 'JP'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,                                                        -- commented by BT Tech team - START
                                                                     msib.segment2,
                                                                     msib.segment3,
                                                                     'JP'
                                                                    ) */
                                   -- commented by BT Tech team - END
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, -- added by BT Tech team - START
                                                                                        msib.color_code, msib.item_size
                                                                     , 'JP') -- added by BT Tech team - END
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'JPY'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND LANGUAGE = 'US'
                               AND enabled_flag = 'Y'
                               AND description = 'JP')) itemcost
              FROM --mtl_system_items_b msib                                                                                                -- commented by BT Tech team
                   apps.xxd_common_items_v msib       -- added by BT Tech team
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_ca (pn_cad_exchange NUMBER)
        IS
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                                            -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              ROUND (qll.operand, 2) ca_region_cost
              FROM --apps.mtl_system_items_b msib,                                                                                            -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.segment3 <> 'ALL'                                                                                                -- commented by BT Tech team
                       msib.item_type <> 'GENERIC'    -- added by BT Tech team
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   and msib.attribute11 is not null
                   and msib.attribute13 is not null*/
                   --Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   --AND msib.organization_id = 7                                                                                                -- commented by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND qlh.NAME = 'Retail Canada Replenishment  DC3'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              --FROM rms13prod.item_master@rmsprod --rms13prod.item_master@rmsprod                                                -- commented by BT Tech team
                              FROM item_master@xxdo_retail_rms -- added by BT Tech team
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /*and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib1.organization_id = msib.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        --Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_ca (pn_itemid NUMBER, pn_orgnid NUMBER, pn_region_cost NUMBER
                                    , pn_cad_exchange NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('US')),
                       XMLELEMENT ("v1:origin_country_id", 'US'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT (
                           "v1:unit_cost",
                           ROUND ((pn_region_cost * pn_cad_exchange), 2)),
                       --XXDOINV006_PKG.get_region_cost_f(msib.segment1,msib.segment2,msib.segment3,'CA')),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'USD'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND LANGUAGE = 'US'
                               AND enabled_flag = 'Y'
                               -- AND DESCRIPTION = 'CA'
                               AND lookup_code = 15205)) itemcost
              FROM --mtl_system_items_b msib                                                                                                -- commented by BT Tech team
                   apps.xxd_common_items_v msib       -- added by BT Tech team
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_cn IS
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --   msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                      -- commented by BT Tech team
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,                -- added by BT Tech team
                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                     , 'CN') cn_region_cost
              -- added by BT Tech team
              /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                 msib.segment2,
                                                 msib.segment3,
                                                 'CN'
                                                ) cn_region_cost*/
              --commented by BT Technology team on 05/12/2014
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib, --Added by BT Technology Team on 05/12/2014
                                            apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             -- WHERE msib.segment3 <> 'ALL'                                                        --commented by BT Technology team on 05/12/2014
             WHERE     msib.item_type <> 'GENERIC'
                   --Added by BT Technology Team on 05/12/2014
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   and msib.attribute11 is not null
                   and msib.attribute13 is not null*/
                   -- Commented by ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   --  AND msib.organization_id = 7                                                       --commented by BT Technology Team on 05/12/2014
                   AND msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   --Added by BT Technology team on 1/12/2014
                   AND qlh.NAME = 'Retail China Replenishment'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              -- FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod             --commented by BT Technology Team on 05/12/2014
                              FROM item_master@xxdo_retail_rms
                             --Added by BT TEchnology Team on 05/12/2014
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /*and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib1.organization_id = msib.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        -- Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_cn (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('CN')),
                       XMLELEMENT ("v1:origin_country_id", 'CN'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /* xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                      msib.segment2,
                                                                      msib.segment3,
                                                                      'CN'
                                                                     )*/
                                   --commented by BT Technology team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , 'CN') --Added by BT Technology Team on 05/12/2014
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'CNY'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND enabled_flag = 'Y'
                               AND LANGUAGE = 'US'
                               AND description = 'CN')) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        -- Added By Sivakumar Booththan For France
        CURSOR c_itemcost_fr IS
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --   msib.segment1 style, msib.segment2 color, msib.segment3 sze,                  --commented by BT Technology team on 05/12/2014
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,
                   --Added by BT Technology Team on 05/12/2014
                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                     , 'FR') fr_region_cost
              --Added by BT Technology Team on 05/12/2014
              /* xxdoinv006_pkg.get_region_cost_f(msib.segment1,
                                               msib.segment2,
                                               msib.segment3,
                                               'FR'
                                              ) fr_region_cost*/
              --commented by BT Technology Team on 05/12/2014
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib, --Added by BT Technology Team on 05/12/2014
                                            apps.qp_list_headers qlh, apps.qp_list_lines qll,
                   apps.qp_pricing_attributes qpa
             WHERE     --msib.attribute13 is not null -- Commented by Naga ENHC0011725
                       -- WHERE msib.segment3 <> 'ALL'                                                        --commented by BT Technology team on 05/12/2014
                       msib.item_type <> 'GENERIC'
                   --Added by BT Technology Team on 05/12/2014
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   and msib.attribute11 is not null*/
                   -- Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   --  AND msib.organization_id = 7                                                       --commented by BT Technology Team on 05/12/2014
                   AND msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   --Added by BT Technology team on 1/12/2014
                   AND qlh.NAME = 'EUR Retail Inter-company Price List (UK2)'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              -- FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod             --commented by BT Technology Team on 05/12/2014
                              FROM item_master@xxdo_retail_rms
                             --Added by BT TEchnology Team on 05/12/2014
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /*and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib1.organization_id = msib.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        -- Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_fr (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('FR')),
                       XMLELEMENT ("v1:origin_country_id", 'FR'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , 'FR') --Added by BT Technology Team on 05/12/2014
 /*xxdoinv006_pkg.get_region_cost_f(msib.segment1,
                    msib.segment2,
                    msib.segment3,
                    'FR'
                   ) fr_region_cost*/
                               --commented by BT Technology Team on 05/12/2014
                                   ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'EUR'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND LANGUAGE = 'US'
                               AND enabled_flag = 'Y'
                               AND description = 'FR')) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_hk IS
            SELECT msib.inventory_item_id,
                   msib.organization_id,
                   --   msib.segment1 style, msib.segment2 color, msib.segment3 sze,                  --commented by BT Technology team on 05/12/2014
                   msib.style_number style,
                   msib.color_code color,
                   msib.item_size sze,
                   --Added by BT Technology Team on 05/12/2014
                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                     , 'HK') hk_region_cost
              --Added by BT Technology Team on 05/12/2014
              /*  xxdoinv006_pkg.get_region_cost_f(msib.segment1,
                                              msib.segment2,
                                              msib.segment3,
                                              'HK'
                                             ) hk_region_cost*/
              --commented by BT Technology Team on 05/12/2014
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib, --Added by BT Technology Team on 05/12/2014
                                            qp_list_headers qlh, qp_list_lines qll,
                   qp_pricing_attributes qpa
             -- WHERE msib.segment3 <> 'ALL'                                                             --commented by BT Technology team on 05/12/2014
             WHERE     msib.item_type <> 'GENERIC'
                   --Added by BT Technology Team on 05/12/2014
                   AND TRUNC (qll.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   /*and MSIB.segment1 not like 'S%L'
                   and MSIB.SEGMENT1 NOT LIKE 'S%R'
                   and msib.attribute11 is not null
                   and msib.attribute13 is not null*/
                   -- Commented by Naga ENHC0011725
                   AND qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id
                   AND qpa.product_attribute = 'PRICING_ATTRIBUTE1'
                   AND qpa.product_attr_value = msib.inventory_item_id
                   --and msib.inventory_item_status_code = 'Active'
                   -- AND msib.organization_id = 7                                            --commented By BT Technology Team on 1/12/2014
                   AND msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   --Added by BT Technology team on 1/12/2014
                   AND qlh.NAME = 'Retail Hong Kong Replenishment'
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG'
                   AND EXISTS
                           (SELECT 1
                              -- FROM rms13prod.item_master@rmsprod  --rms13prod.item_master@rmsprod             --commented by BT Technology Team on 05/12/2014
                              FROM item_master@xxdo_retail_rms
                             --Added by BT TEchnology Team on 05/12/2014
                             WHERE     item = qpa.product_attr_value
                                   AND item_level = tran_level);

        -- Added by Naga ENHC0011725

        /*and exists ( SELECT 1
                                 from  qp_pricing_attributes qpa1,
                                   qp_list_lines qll1,
                                   qp_list_headers qlh1,
                                   mtl_categories_b mc1,
                                   mtl_category_sets mcs1,
                                   mtl_item_categories mic1,
                                   mtl_system_items_b msib1
                                 where qpa1.list_line_id =qll1.list_line_id
                                        and qll1.list_header_id=qlh1.list_header_id
                                        and mic1.inventory_item_id = msib1.inventory_item_id
                                        and mic1.organization_id   = msib1.organization_id
                                        and mc1.structure_id   = mcs1.structure_id
                                        and qpa1.product_attribute = 'PRICING_ATTRIBUTE2'
                                        and qpa1.product_attr_value = mc1.category_id
        --                                and qpa1.product_attr_value = to_char(mc1.category_id)
                                        and mic1.category_id    = mc1.category_id
                                        and mic1.category_set_id = mcs1.category_set_id
                                        and msib1.organization_id = 7
                                        --and msib1.inventory_item_status_code = 'Active'
                                        and qpa1.product_attribute_context ='ITEM'
                                        and  qlh1.name ='Retail - US'
                                        and mcs1.category_set_name='Styles'
                                        and msib1.inventory_item_id=msib.inventory_item_id
                                        and msib1.organization_id = msib.organization_id
                                        and rownum<=1)
                                        AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                              msib.organization_id
                                             ) IS NOT NULL;*/
        --Commented by Naga ENHC0011725
        CURSOR c_itemcostchange_hk (pn_itemid NUMBER, pn_orgnid NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('HK')),
                       XMLELEMENT ("v1:origin_country_id", 'HK'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , 'HK') --Added by BT Technology Team on 05/12/2014
                                                                            /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                                                msib.segment2,
                                                                                                msib.segment3,
                                                                                                'HK'
                                                                                               ) */
                                                                            --commented by BT Technology Team on 05/12/2014
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'HKD'),
                       XMLELEMENT ("v1:hier_level", 'W'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", lookup_code)))
                          FROM fnd_lookup_values
                         WHERE     lookup_type = 'XXDOINV007_WH'
                               AND LANGUAGE = 'US'
                               AND enabled_flag = 'Y'
                               AND description = 'HK')) itemcost
              -- FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_s_us (pn_item_id NUMBER, pn_orgnid NUMBER, pv_brand VARCHAR2, pv_region1 VARCHAR2, pv_outlet VARCHAR2, pv_shoka VARCHAR2
                                , pv_concept VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('US')),
                       XMLELEMENT ("v1:origin_country_id", 'US'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT (
                           "v1:unit_cost",
                           xxdoinv006_pkg.get_cost_us_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code",
                                   xxdoinv006_pkg.get_curr_code_f ('US')),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --  rms_store_id                --commented by BT Technology team on 05/12/2014
                                                                                                    lookup_code--Added by BT  Technology team on 05/12/2014
                                                                                                               )))
                          /*FROM stores@do_retail_datamart
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                            AND brand IN ('ALL', pv_brand))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               --Added by BT Technology Team on 05/12/2014
                               -- AND  (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                               AND attribute9 IN ('GENERIC', pv_brand))) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     msib.inventory_item_id = pn_item_id
                   AND msib.organization_id = pn_orgnid;

        CURSOR c_itemcost_s_uk (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('UK')),
                       XMLELEMENT ("v1:origin_country_id", 'GB'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*  xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                     msib.segment2,
                                                                     msib.segment3,
                                                                     'UK'
                                                                    )*/
                                   --commented by BT Technology Team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , 'UK') --added by BT Technology Team on 05/12/2014
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'GBP'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --   rms_store_id                    --commented by BT Technology Team on 05/12/2014
                                                                                                    lookup_code--added by BT Technology Team on 05/12/2014
                                                                                                               )))
                          /* FROM stores@do_retail_datamart
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                           -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                           AND brand IN ('ALL', 'UGG'))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))--added by BT Technology Team on 05/12/2014
                                                                    ) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     msib.inventory_item_id = pn_itemid
                   AND msib.organization_id = pn_orgnid;

        CURSOR c_itemcost_s_jp (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('JP')),
                       XMLELEMENT ("v1:origin_country_id", 'JP'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                      msib.segment2,
                                                                      msib.segment3,
                                                                      'JP'
                                                                     )*/
                                   --commented by BT technology team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , --Added  by BT Technology team on 05/12/2014
                                                                       'JP')),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'JPY'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --   rms_store_id                    --commented by BT Technology Team on 05/12/2014
                                                                                                    lookup_code--added by BT Technology Team on 05/12/2014
                                                                                                               )))
                          /* FROM stores@do_retail_datamart
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                           -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                           AND brand IN ('ALL', 'UGG'))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))--added by BT Technology Team on 05/12/2014
                                                                    ) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     msib.inventory_item_id = pn_itemid
                   AND msib.organization_id = pn_orgnid;

        CURSOR c_itemcost_s_ca (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('CA')),
                       XMLELEMENT ("v1:origin_country_id", 'CA'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,                                                        -- commented by BT Tech team - START
                                                                     msib.segment2,
                                                                     msib.segment3,
                                                                     'CA'
                                                                    ) */
                                   -- commented by BT Tech team - END
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, -- added by BT Tech team - START
                                                                                        msib.color_code, msib.item_size
                                                                     , 'CA') -- added by BT Tech team - END
                                                                            ),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'CAD'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --rms_store_id                          -- commented by BT Tech team
                                                                                                    lookup_code -- added by BT Tech team
                                                                                                               )))
                          /*FROM stores@do_retail_datamart                                                                                    -- commented by BT Tech team - START
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                           -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                           AND brand IN ('ALL', 'UGG')) */
                          -- commented by BT Tech team - END
                          FROM apps.fnd_lookup_values
                         -- added by BT Tech team - START
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))-- added by BT Tech team - END
                                                                    ) itemcost
              FROM --mtl_system_items_b msib                                                                                                -- commented by BT Tech team
                   apps.xxd_common_items_v msib       -- added by BT Tech team
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_s_cn (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('CN')),
                       XMLELEMENT ("v1:origin_country_id", 'CN'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                    msib.segment2,
                                                                    msib.segment3,
                                                                    'CN'
                                                                   )*/
                                   --commented by BT technology team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , --Added  by BT Technology team on 05/12/2014
                                                                       'CN')),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'CNY'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --   rms_store_id                    --commented by BT Technology Team on 05/12/2014
                                                                                                    lookup_code--added by BT Technology Team on 05/12/2014
                                                                                                               )))
                          /* FROM stores@do_retail_datamart
                          WHERE region = pv_region1
                            AND rms_store_id IS NOT NULL
                            -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                            AND brand IN ('ALL', 'UGG'))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))--added by BT Technology Team on 05/12/2014
                                                                    ) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid
                   AND xxdoinv006_pkg.get_brand_f (NULL,
                                                   msib.inventory_item_id,
                                                   msib.organization_id) =
                       'UGG';

        -- Added By Sivakumar Boothathan For FR
        CURSOR c_itemcost_s_fr (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('FR')),
                       XMLELEMENT ("v1:origin_country_id", 'FR'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                      msib.segment2,
                                                                      msib.segment3,
                                                                      'FR'
                                                                     )*/
                                   --commented by BT technology team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , --Added  by BT Technology team on 05/12/2014
                                                                       'FR')),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'EUR'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --   rms_store_id                    --commented by BT Technology Team on 05/12/2014
                                                                                                    lookup_code--added by BT Technology Team on 05/12/2014
                                                                                                               )))
                          /* FROM stores@do_retail_datamart
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                           -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                           AND brand IN ('ALL', 'UGG'))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = 'XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))--added by BT Technology Team on 05/12/2014
                                                                    ) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        CURSOR c_itemcost_s_hk (pn_itemid    NUMBER,
                                pn_orgnid    NUMBER,
                                pv_region1   VARCHAR2,
                                pv_outlet    VARCHAR2,
                                pv_shoka     VARCHAR2,
                                pv_concept   VARCHAR2)
        IS
            SELECT XMLELEMENT (
                       "v1:XCostChgDesc",
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       XMLELEMENT ("v1:supplier",
                                   xxdoinv006_pkg.get_vendor_id_f ('HK')),
                       XMLELEMENT ("v1:origin_country_id", 'HK'),
                       XMLELEMENT ("v1:diff_id", ''),
                       XMLELEMENT ("v1:unit_cost",
                                   /*xxdoinv006_pkg.get_region_cost_f (msib.segment1,
                                                                     msib.segment2,
                                                                     msib.segment3,
                                                                     'HK'
                                                                    )*/
                                   --commented by BT technology team on 05/12/2014
                                   xxdoinv006_pkg.get_region_cost_f (msib.style_number, msib.color_code, msib.item_size
                                                                     , --Added  by BT Technology team on 05/12/2014
                                                                       'HK')),
                       XMLELEMENT ("v1:recalc_ord_ind", 'N'),
                       XMLELEMENT ("v1:currency_code", 'HKD'),
                       XMLELEMENT ("v1:hier_level", 'S'),
                       (SELECT XMLAGG (XMLELEMENT ("v1:XCostChgHrDtl", XMLELEMENT ("v1:hier_value", --   rms_store_id                    --commented by BT Technology Team on 05/12/2014
                                                                                                    lookup_code--added by BT Technology Team on 05/12/2014
                                                                                                               )))
                          /* FROM stores@do_retail_datamart
                         WHERE region = pv_region1
                           AND rms_store_id IS NOT NULL
                           -- and (  UPPER(TRIM(store_type))     = PV_OUTLET  OR UPPER(TRIM(STORE_TYPE))  = PV_SHOKA OR UPPER(TRIM(STORE_TYPE))  = PV_CONCEPT )
                           AND brand IN ('ALL', 'UGG'))*/
                          --commented by BT Technology Team on 05/12/2014
                          FROM apps.fnd_lookup_values
                         WHERE     lookup_code = ' XXD_RETAIL_STORES'
                               AND lookup_code IS NOT NULL
                               AND attribute3 = pv_region1
                               AND attribute9 IN ('GENERIC', 'UGG'))--added by BT Technology Team on 05/12/2014
                                                                    ) itemcost
              --  FROM mtl_system_items_b msib                                              --commented by BT Technology team on 05/12/2014
              FROM xxd_common_items_v msib
             --Added by BT Technology Team on 05/12/2014
             WHERE     inventory_item_id = pn_itemid
                   AND organization_id = pn_orgnid;

        /***************************************************************************************************************************************************

        *******/
        CURSOR c_itemcostpublish IS
            SELECT *
              FROM xxdoinv010_int
             WHERE status_flag = 'N';

        CURSOR c_costrepublish (pv_fdate             VARCHAR2,
                                pv_tdate             VARCHAR2,
                                pv_store_warehouse   VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv010_int
             WHERE     status_flag IN ('VE', 'P')
                   AND store_warehouse = pv_store_warehouse
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        /* Query to fetch the conversion rate for Canada.  */
        ln_cad_exchange   := NULL;

        BEGIN
            SELECT exchange_rate
              INTO ln_cad_exchange
              --FROM rms13prod.currency_rates@rmsprod --rms13prod.currency_rates@rmsprod                                            -- commented by BT Tech team
              FROM currency_rates@xxdo_retail_rms     -- added by BT Tech team
             WHERE     exchange_type = 'C'
                   AND currency_code = 'CAD'
                   AND effective_date =
                       (SELECT MAX (effective_date)
                          --FROM rms13prod.currency_rates@rmsprod --rms13prod.currency_rates@rmsprod                              -- commented by BT Tech team
                          FROM currency_rates@xxdo_retail_rms
                         -- added by BT Tech team
                         WHERE exchange_type = 'C' AND currency_code = 'CAD');
        EXCEPTION
            WHEN OTHERS
            THEN
                fnd_file.put_line (
                    fnd_file.LOG,
                    'Error occured while fetching Canada Exchange Rate in Cost Change');
        END;

        /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
        BEGIN
            SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                     --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                     'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0

                                                                                                              apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
              INTO lv_wsdl_ip
              FROM apps.fnd_product_groups;
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Unable to fetch the File server name');
                pv_retcode   := 2;
        END;

        /* Initializing the Item cost web service variables */
        lv_wsdl_url       :=
               'http://'
            || lv_wsdl_ip
            || '/XCostChgPublishingBean/XCostChgPublishingService?WSDL';
        lv_namespace      :=
            'http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1';
        lv_service        := 'XCostChgPublishingService';
        lv_port           := 'XCostChgPublishingPort';
        lv_operation      := 'publishXCostChgModifyUsingXCostChgDesc';
        lv_targetname     :=
               'http://'
            || lv_wsdl_ip
            || '/XCostChgPublishingBean/XCostChgPublishingService';

        IF pv_reprocess = 'Y'
        THEN
            /* Retreive the data from the Staging table based on the dates */
            FOR rec_reprocess
                IN c_costrepublish (pv_fromdate, pv_todate, 'WH')
            LOOP
                /* cost program reprocess for US*/
                SELECT xxdoinv006_pkg.get_brand_f (NULL, rec_reprocess.inventory_item_id, rec_reprocess.organization_id)
                  INTO lv_brand
                  FROM DUAL;

                IF rec_reprocess.region_code = 'US'
                THEN
                    FOR us_cur
                        IN c_itemcostchange_us (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (us_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;
                        --   COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                /* End calling the webservice   */
                    END LOOP;                                     -- us cursor
                END IF;

                /*  cost program reprocess for UK  */
                IF rec_reprocess.region_code = 'UK'
                THEN
                    FOR uk_cur
                        IN c_itemcostchange_uk (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (uk_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*  Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                     -- End calling the webservice
                    END LOOP;                                     -- uk cursor
                END IF;

                /*  cost program reprocess for HK  */
                IF rec_reprocess.region_code = 'HK'
                THEN
                    FOR hk_cur
                        IN c_itemcostchange_hk (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (hk_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*  Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                     -- End calling the webservice
                    END LOOP;                                     -- HK cursor
                END IF;

                /* cost program reprocess for jp */
                IF rec_reprocess.region_code = 'JP'
                THEN
                    FOR jp_cur
                        IN c_itemcostchange_jp (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (jp_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*  Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*  Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                      --End calling the webservice
                    END LOOP;                                     -- jp cursor
                END IF;

                /*  cost program reprocess for CAN  */
                IF rec_reprocess.region_code = 'CA'
                THEN
                    FOR can_cur IN c_itemcostchange_ca (rec_reprocess.inventory_item_id, rec_reprocess.organization_id, rec_reprocess.region_cost
                                                        , ln_cad_exchange)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (can_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*    Updating the existing record to validation error and storing the error code  */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                      --End calling the webservice
                    END LOOP;                                 -- Canada cursor
                END IF;

                /* Cost Chnage for France */
                IF rec_reprocess.region_code = 'FR'
                THEN
                    FOR fr_cur
                        IN c_itemcostchange_fr (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (fr_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*    Updating the existing record to validation error and storing the error code  */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                      --End calling the webservice
                    END LOOP;                                 -- france cursor
                END IF;

                IF rec_reprocess.region_code = 'CN'
                THEN
                    FOR cn_cur
                        IN c_itemcostchange_cn (
                               rec_reprocess.inventory_item_id,
                               rec_reprocess.organization_id)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (cn_cur.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*    Updating the existing record to validation error and storing the error code  */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;                      --End calling the webservice
                    END LOOP;                                  -- china cursor
                END IF;
            /* cost program reprocess for CN */
            END LOOP;                                -- reprocess cursor close

            /*****************************************************************************************************************    */
            FOR rec_reprocess
                IN c_costrepublish (pv_fromdate, pv_todate, 'S')
            LOOP
                /* Condition to verify the brand of  style */
                BEGIN
                    lv_brand     := NULL;
                    lv_concept   := NULL;
                    lv_shoka     := NULL;

                    --    select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_REPROCESS.INVENTORY_ITEM_ID,REC_REPROCESS.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                    IF lv_brand = 'UGG'
                    THEN
                        lv_concept   := 'CONCEPT';
                        lv_shoka     := 'SHOKA';
                    ELSE
                        lv_concept   := NULL;
                        lv_shoka     := NULL;
                    END IF;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                            || SQLCODE
                            || SQLERRM);
                END;

                IF rec_reprocess.region_code = 'US'
                THEN
                    FOR rec_stores IN c_itemcost_s_us (rec_reprocess.inventory_item_id, rec_reprocess.organization_id, lv_brand, 'US', 'OUTLET', lv_shoka
                                                       , lv_concept)
                    LOOP
                        lv_op_mode   := 'ITEMCOST_UPDATE';

                        BEGIN
                            UPDATE xxdoinv010_int
                               SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /*   Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                        END;

                        lx_xmltype_in   :=
                            SYS.XMLTYPE (
                                   '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                || rec_reprocess.xdata
                                || '</publishXCostChgModifyUsingXCostChgDesc>');

                        BEGIN
                            lx_xmltype_out   :=
                                xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                          , lx_xmltype_in);

                            IF lx_xmltype_out IS NOT NULL
                            THEN
                                fnd_file.put_line (
                                    fnd_file.output,
                                    'Response is stored in the staging table  ');
                                lc_return   :=
                                    XMLTYPE.getclobval (lx_xmltype_out);

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                       transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            ELSE
                                fnd_file.put_line (fnd_file.output,
                                                   'Response is NULL  ');
                                lc_return   := NULL;

                                UPDATE xxdoinv010_int
                                   SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                 WHERE slno = rec_reprocess.slno;
                            END IF;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv010_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                       'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                    || SQLERRM);
                        END;
                    /* End calling the webservice */
                    END LOOP;                                  -- STORE CURSOR
                END IF;

                IF lv_brand = 'UGG'
                THEN
                    /* REPROCESS FOR UK */
                    IF rec_reprocess.region_code = 'UK'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_uk (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'UK',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;

                    /* REPROCESS FOR hk */
                    IF rec_reprocess.region_code = 'HK'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_hk (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'HK',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;

                    /* REPROCESS FOR JP */
                    IF rec_reprocess.region_code = 'JP'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_jp (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'JP',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;

                    /* REPROCESS FOR CA */
                    IF rec_reprocess.region_code = 'CA'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_ca (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'CA',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;

                    /* REPROCESS FOR CN */
                    IF rec_reprocess.region_code = 'CN'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_cn (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'CN',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;

                    /* recprocess for FR */
                    IF rec_reprocess.region_code = 'FR'
                    THEN
                        FOR rec_stores
                            IN c_itemcost_s_fr (
                                   rec_reprocess.inventory_item_id,
                                   rec_reprocess.organization_id,
                                   'FR',
                                   'OUTLET',
                                   lv_shoka,
                                   lv_concept)
                        LOOP
                            lv_op_mode   := 'ITEMCOST_UPDATE';

                            BEGIN
                                UPDATE xxdoinv010_int
                                   SET xdata = XMLTYPE.getclobval (rec_stores.itemcost)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /*   Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error for this reprocess record');
                            END;

                            lx_xmltype_in   :=
                                SYS.XMLTYPE (
                                       '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                                    || rec_reprocess.xdata
                                    || '</publishXCostChgModifyUsingXCostChgDesc>');

                            BEGIN
                                lx_xmltype_out   :=
                                    xxdo_invoke_webservice_f (lv_wsdl_url,
                                                              lv_namespace,
                                                              lv_targetname,
                                                              lv_service,
                                                              lv_port,
                                                              lv_operation,
                                                              lx_xmltype_in);

                                IF lx_xmltype_out IS NOT NULL
                                THEN
                                    fnd_file.put_line (
                                        fnd_file.output,
                                        'Response is stored in the staging table  ');
                                    lc_return   :=
                                        XMLTYPE.getclobval (lx_xmltype_out);

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                           transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                ELSE
                                    fnd_file.put_line (fnd_file.output,
                                                       'Response is NULL  ');
                                    lc_return   := NULL;

                                    UPDATE xxdoinv010_int
                                       SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                                     WHERE slno = rec_reprocess.slno;
                                END IF;

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE slno = rec_reprocess.slno;

                                    COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                           'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                        || SQLERRM);
                            END;
                        /* End calling the webservice */
                        END LOOP;                              -- STORE CURSOR
                    END IF;
                END IF;
            END LOOP;                                     --  REPROCESS CURSOR
        /*******************************************************************************************************/
        ELSE
            FOR rec_itemcost IN c_itemcost
            LOOP
                SELECT xxdoinv006_pkg.get_brand_f (NULL, rec_itemcost.inventory_item_id, rec_itemcost.organization_id)
                  INTO lv_brand
                  FROM DUAL;

                FOR us_cur
                    IN c_itemcostchange_us (rec_itemcost.inventory_item_id,
                                            rec_itemcost.organization_id)
                LOOP
                    lv_counter   := lv_counter + 1;

                    --fnd_file.put_line(fnd_file.log,'HALF');

                    /* CURSOR TO INSERT DATA FOR US  */
                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    /* CURSOR TO INSERT DATA FOR US  */
                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost.style
                               AND color = rec_itemcost.color
                               AND sze = rec_itemcost.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'US'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_itemcost.us_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost.style
                                           AND color = rec_itemcost.color
                                           AND sze = rec_itemcost.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'US');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost.inventory_item_id,
                                                    rec_itemcost.organization_id,
                                                    rec_itemcost.style,
                                                    rec_itemcost.color,
                                                    rec_itemcost.sze,
                                                    'US',
                                                    'N',
                                                    rec_itemcost.us_region_cost,
                                                    XMLTYPE.getclobval (
                                                        us_cur.itemcost),
                                                    'WH');

                                COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost.style
                                           AND color = rec_itemcost.color
                                           AND sze = rec_itemcost.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    --COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  US CURSOR */
            END LOOP;

            FOR rec_itemcost_uk IN c_itemcost_uk
            LOOP
                lv_counter   := 0;

                FOR uk_cur
                    IN c_itemcostchange_uk (
                           rec_itemcost_uk.inventory_item_id,
                           rec_itemcost_uk.organization_id)
                LOOP
                    /* CURSOR TO INSERT DATA FOR UK */
                    lv_counter   := lv_counter + 1;

                    --fnd_file.put_line(fnd_file.log,'HALF');

                    /* CURSOR TO INSERT DATA FOR US  */
                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_uk.style
                               AND color = rec_itemcost_uk.color
                               AND sze = rec_itemcost_uk.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'UK'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   rec_itemcost_uk.uk_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_uk.style
                                           AND color = rec_itemcost_uk.color
                                           AND sze = rec_itemcost_uk.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'UK');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_uk.inventory_item_id,
                                                    rec_itemcost_uk.organization_id,
                                                    rec_itemcost_uk.style,
                                                    rec_itemcost_uk.color,
                                                    rec_itemcost_uk.sze,
                                                    'UK',
                                                    'N',
                                                    rec_itemcost_uk.uk_region_cost,
                                                    XMLTYPE.getclobval (
                                                        uk_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_uk.style
                                           AND color = rec_itemcost_uk.color
                                           AND sze = rec_itemcost_uk.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  Uk CURSOR */
            END LOOP;                           -- FOR  REC_ITEMCOST_UK CURSOR

            FOR rec_itemcost_hk IN c_itemcost_hk
            LOOP
                lv_counter   := 0;

                FOR hk_cur
                    IN c_itemcostchange_hk (
                           rec_itemcost_hk.inventory_item_id,
                           rec_itemcost_hk.organization_id)
                LOOP
                    /* CURSOR TO INSERT DATA FOR HK */
                    lv_counter   := lv_counter + 1;

                    --fnd_file.put_line(fnd_file.log,'HALF');

                    /* CURSOR TO INSERT DATA FOR HK */
                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_hk.style
                               AND color = rec_itemcost_hk.color
                               AND sze = rec_itemcost_hk.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'HK'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   rec_itemcost_hk.hk_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_hk.style
                                           AND color = rec_itemcost_hk.color
                                           AND sze = rec_itemcost_hk.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'HK');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_hk.inventory_item_id,
                                                    rec_itemcost_hk.organization_id,
                                                    rec_itemcost_hk.style,
                                                    rec_itemcost_hk.color,
                                                    rec_itemcost_hk.sze,
                                                    'HK',
                                                    'N',
                                                    rec_itemcost_hk.hk_region_cost,
                                                    XMLTYPE.getclobval (
                                                        hk_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_hk.style
                                           AND color = rec_itemcost_hk.color
                                           AND sze = rec_itemcost_hk.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  Hk CURSOR */
            END LOOP;                           -- FOR  REC_ITEMCOST_HK CURSOR

            FOR rec_itemcost_cn IN c_itemcost_cn
            LOOP
                lv_counter   := 0;

                FOR cn_cur
                    IN c_itemcostchange_cn (
                           rec_itemcost_cn.inventory_item_id,
                           rec_itemcost_cn.organization_id)
                LOOP
                    /* CURSOR TO INSERT DATA FOR CN */
                    lv_counter   := lv_counter + 1;

                    --fnd_file.put_line(fnd_file.log,'HALF');

                    /* CURSOR TO INSERT DATA FOR CN */
                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_cn.style
                               AND color = rec_itemcost_cn.color
                               AND sze = rec_itemcost_cn.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'CN'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   rec_itemcost_cn.cn_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_cn.style
                                           AND color = rec_itemcost_cn.color
                                           AND sze = rec_itemcost_cn.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'CN');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_cn.inventory_item_id,
                                                    rec_itemcost_cn.organization_id,
                                                    rec_itemcost_cn.style,
                                                    rec_itemcost_cn.color,
                                                    rec_itemcost_cn.sze,
                                                    'CN',
                                                    'N',
                                                    rec_itemcost_cn.cn_region_cost,
                                                    XMLTYPE.getclobval (
                                                        cn_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_cn.style
                                           AND color = rec_itemcost_cn.color
                                           AND sze = rec_itemcost_cn.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  CN CURSOR */
            END LOOP;                           -- FOR  REC_ITEMCOST_CN CURSOR

            FOR rec_itemcost_jp IN c_itemcost_jp
            LOOP
                lv_counter   := 0;

                FOR jp_cur
                    IN c_itemcostchange_jp (
                           rec_itemcost_jp.inventory_item_id,
                           rec_itemcost_jp.organization_id)
                LOOP
                    /* CURSOR TO INSERT DATA FOR JP */
                    BEGIN
                        lv_counter    := lv_counter + 1;

                        --fnd_file.put_line(fnd_file.log,'HALF');

                        /* CURSOR TO INSERT DATA FOR US  */
                        IF (lv_counter = 500)
                        THEN
                            COMMIT;
                            lv_counter   := 0;
                        END IF;

                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_jp.style
                               AND color = rec_itemcost_jp.color
                               AND sze = rec_itemcost_jp.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'JP'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   rec_itemcost_jp.jp_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_jp.style
                                           AND color = rec_itemcost_jp.color
                                           AND sze = rec_itemcost_jp.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'JP');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_jp.inventory_item_id,
                                                    rec_itemcost_jp.organization_id,
                                                    rec_itemcost_jp.style,
                                                    rec_itemcost_jp.color,
                                                    rec_itemcost_jp.sze,
                                                    'JP',
                                                    'N',
                                                    rec_itemcost_jp.jp_region_cost,
                                                    XMLTYPE.getclobval (
                                                        jp_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_jp.style
                                           AND color = rec_itemcost_jp.color
                                           AND sze = rec_itemcost_jp.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  jp CURSOR */
            END LOOP;                            -- FOR REC_ITEMCOST_JP CURSOR

            FOR rec_itemcost_ca IN c_itemcost_ca (ln_cad_exchange)
            LOOP
                lv_counter   := 0;

                FOR can_cur IN c_itemcostchange_ca (rec_itemcost_ca.inventory_item_id, rec_itemcost_ca.organization_id, rec_itemcost_ca.ca_region_cost
                                                    , ln_cad_exchange)
                LOOP
                    /* CURSOR TO INSERT DATA FOR CA */
                    lv_counter   := lv_counter + 1;

                    --fnd_file.put_line(fnd_file.log,'HALF');

                    /* CURSOR TO INSERT DATA FOR US  */
                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_ca.style
                               AND color = rec_itemcost_ca.color
                               AND sze = rec_itemcost_ca.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'CA'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   ROUND (
                                       (rec_itemcost_ca.ca_region_cost * ln_cad_exchange),
                                       2)
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_ca.style
                                           AND color = rec_itemcost_ca.color
                                           AND sze = rec_itemcost_ca.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'CA');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_ca.inventory_item_id,
                                                    rec_itemcost_ca.organization_id,
                                                    rec_itemcost_ca.style,
                                                    rec_itemcost_ca.color,
                                                    rec_itemcost_ca.sze,
                                                    'CA',
                                                    'N',
                                                    rec_itemcost_ca.ca_region_cost,
                                                    XMLTYPE.getclobval (
                                                        can_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_ca.style
                                           AND color = rec_itemcost_ca.color
                                           AND sze = rec_itemcost_ca.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                /* For  CAN CURSOR */
            END LOOP;

            /* cursor fro France region Stores */
            FOR rec_itemcost_fr IN c_itemcost_fr
            LOOP
                lv_counter   := 0;

                FOR fr_cur
                    IN c_itemcostchange_fr (
                           rec_itemcost_fr.inventory_item_id,
                           rec_itemcost_fr.organization_id)
                LOOP
                    /* CURSOR TO INSERT DATA FOR FR */
                    BEGIN
                        lv_counter    := lv_counter + 1;

                        --fnd_file.put_line(fnd_file.log,'HALF');

                        /* CURSOR TO INSERT DATA FOR US  */
                        IF (lv_counter = 500)
                        THEN
                            COMMIT;
                            lv_counter   := 0;
                        END IF;

                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_itemcost_fr.style
                               AND color = rec_itemcost_fr.color
                               AND sze = rec_itemcost_fr.sze
                               AND store_warehouse = 'WH'
                               AND region_code = 'FR'
                               AND processed_flag = 'Y'
                               AND region_cost =
                                   rec_itemcost_fr.fr_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_itemcost_fr.style
                                           AND color = rec_itemcost_fr.color
                                           AND sze = rec_itemcost_fr.sze
                                           AND store_warehouse = 'WH'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'FR');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                region_cost,
                                                xdata,
                                                store_warehouse)
                                         VALUES (
                                                    xxdoinv010_int_s.NEXTVAL,
                                                    rec_itemcost_fr.inventory_item_id,
                                                    rec_itemcost_fr.organization_id,
                                                    rec_itemcost_fr.style,
                                                    rec_itemcost_fr.color,
                                                    rec_itemcost_fr.sze,
                                                    'FR',
                                                    'N',
                                                    rec_itemcost_fr.fr_region_cost,
                                                    XMLTYPE.getclobval (
                                                        fr_cur.itemcost),
                                                    'WH');
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_itemcost_fr.style
                                           AND color = rec_itemcost_fr.color
                                           AND sze = rec_itemcost_fr.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                 /* For  FR CURSOR */
            END LOOP;                            -- FOR REC_ITEMCOST_FR CURSOR

            /*********************************************************************************************************************************************/

            /* CURSOR FOR US STORES */
            FOR rec_us IN c_itemcost
            LOOP
                /* Condition to verify the brand of  style */
                BEGIN
                    lv_brand     := NULL;
                    lv_concept   := NULL;
                    lv_shoka     := NULL;

                    SELECT xxdoinv006_pkg.get_brand_f (NULL, rec_us.inventory_item_id, rec_us.organization_id)
                      INTO lv_brand
                      FROM DUAL;

                    IF lv_brand = 'UGG'
                    THEN
                        lv_concept   := 'CONCEPT';
                        lv_shoka     := 'SHOKA';
                    ELSE
                        lv_concept   := NULL;
                        lv_shoka     := NULL;
                    END IF;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'
                            || SQLCODE
                            || SQLERRM);
                END;

                FOR store_cur IN c_itemcost_s_us (rec_us.inventory_item_id, rec_us.organization_id, lv_brand, 'US', 'OUTLET', lv_shoka
                                                  , lv_concept)
                LOOP
                    lv_counter   := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_us.style
                               AND color = rec_us.color
                               AND sze = rec_us.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'US'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_us.us_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_us.style
                                           AND color = rec_us.color
                                           AND sze = rec_us.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'US');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_us.inventory_item_id, rec_us.organization_id, rec_us.style, rec_us.color, rec_us.sze, 'US', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_us.us_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_us.style
                                           AND color = rec_us.color
                                           AND sze = rec_us.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                  /* For  STORE US */
            END LOOP;                                   -- FOR STORE CURSOR */

            /* CURSOR FOR Uk STORES */
            FOR rec_uk IN c_itemcost_uk
            LOOP
                /* Condition to verify the brand of  style */

                /*   begin
                   LV_BRAND := NULL;
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_Uk.INVENTORY_ITEM_ID,REC_Uk.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                   IF   LV_BRAND = 'UGG' THEN
                   LV_CONCEPT := 'CONCEPT';
                   LV_SHOKA   := 'SHOKA';
                   ELSE
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   END IF;
                   EXCEPTION
                    WHEN OTHERS THEN
                   FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                   END;  */
                FOR store_cur
                    IN c_itemcost_s_uk (rec_uk.inventory_item_id, rec_uk.organization_id, 'UK'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    lv_counter   := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_uk.style
                               AND color = rec_uk.color
                               AND sze = rec_uk.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'UK'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_uk.uk_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_uk.style
                                           AND color = rec_uk.color
                                           AND sze = rec_uk.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'UK');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_uk.inventory_item_id, rec_uk.organization_id, rec_uk.style, rec_uk.color, rec_uk.sze, 'UK', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_uk.uk_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_uk.style
                                           AND color = rec_uk.color
                                           AND sze = rec_uk.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE UK*/
            END LOOP;                                   -- FOR STORE CURSOR */

            FOR rec_hk IN c_itemcost_hk
            LOOP
                /* Condition to verify the brand of  style */

                /*   begin
                   LV_BRAND := NULL;
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_Hk.INVENTORY_ITEM_ID,REC_Hk.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                   IF   LV_BRAND = 'UGG' THEN
                   LV_CONCEPT := 'CONCEPT';
                   LV_SHOKA   := 'SHOKA';
                   ELSE
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   END IF;
                   EXCEPTION
                    WHEN OTHERS THEN
                   FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                   END; */
                FOR store_cur
                    IN c_itemcost_s_hk (rec_hk.inventory_item_id, rec_hk.organization_id, 'HK'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    lv_counter   := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_hk.style
                               AND color = rec_hk.color
                               AND sze = rec_hk.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'HK'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_hk.hk_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_hk.style
                                           AND color = rec_hk.color
                                           AND sze = rec_hk.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'HK');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_hk.inventory_item_id, rec_hk.organization_id, rec_hk.style, rec_hk.color, rec_hk.sze, 'HK', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_hk.hk_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_hk.style
                                           AND color = rec_hk.color
                                           AND sze = rec_hk.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE HK*/
            END LOOP;                                   -- FOR STORE CURSOR */

            /* CURSOR FOR JP STORES */
            FOR rec_jp IN c_itemcost_jp
            LOOP
                /* Condition to verify the brand of  style */

                /*    begin
                    LV_BRAND := NULL;
                    LV_CONCEPT := NULL;
                    LV_SHOKA   := NULL;
                    select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_JP.INVENTORY_ITEM_ID,REC_JP.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                    IF   LV_BRAND = 'UGG' THEN
                    LV_CONCEPT := 'CONCEPT';
                    LV_SHOKA   := 'SHOKA';
                    ELSE
                    LV_CONCEPT := NULL;
                    LV_SHOKA   := NULL;
                    END IF;
                    EXCEPTION
                     WHEN OTHERS THEN
                    FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                    END;  */
                lv_counter   := 0;

                FOR store_cur
                    IN c_itemcost_s_jp (rec_jp.inventory_item_id, rec_jp.organization_id, 'JP'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    BEGIN
                        lv_counter    := lv_counter + 1;

                        IF (lv_counter = 500)
                        THEN
                            COMMIT;
                            lv_counter   := 0;
                        END IF;

                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_jp.style
                               AND color = rec_jp.color
                               AND sze = rec_jp.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'JP'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_jp.jp_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_jp.style
                                           AND color = rec_jp.color
                                           AND sze = rec_jp.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'JP');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_jp.inventory_item_id, rec_jp.organization_id, rec_jp.style, rec_jp.color, rec_jp.sze, 'JP', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_jp.jp_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_jp.style
                                           AND color = rec_jp.color
                                           AND sze = rec_jp.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    --COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE JP*/
            END LOOP;                                    -- FOR STORE cursor*/

            FOR rec_fr IN c_itemcost_fr
            LOOP
                /* Condition to verify the brand of  style */

                /*    begin
                     LV_BRAND := NULL;
                     LV_CONCEPT := NULL;
                     LV_SHOKA   := NULL;
                     select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_FR.INVENTORY_ITEM_ID,REC_FR.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                     IF   LV_BRAND = 'UGG' THEN
                     LV_CONCEPT := 'CONCEPT';
                     LV_SHOKA   := 'SHOKA';
                     ELSE
                     LV_CONCEPT := NULL;
                     LV_SHOKA   := NULL;
                     END IF;
                     EXCEPTION
                      WHEN OTHERS THEN
                     FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                     END;  */
                lv_counter   := 0;

                FOR store_cur
                    IN c_itemcost_s_fr (rec_fr.inventory_item_id, rec_fr.organization_id, 'FR'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    BEGIN
                        lv_counter    := lv_counter + 1;

                        IF (lv_counter = 500)
                        THEN
                            COMMIT;
                            lv_counter   := 0;
                        END IF;

                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_fr.style
                               AND color = rec_fr.color
                               AND sze = rec_fr.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'FR'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_fr.fr_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_fr.style
                                           AND color = rec_fr.color
                                           AND sze = rec_fr.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'FR');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_fr.inventory_item_id, rec_fr.organization_id, rec_fr.style, rec_fr.color, rec_fr.sze, 'FR', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_fr.fr_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_fr.style
                                           AND color = rec_fr.color
                                           AND sze = rec_fr.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    --COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE FR*/
            END LOOP;                                   /* for store cursor */

            /*************************************************************************************************/

            /* CURSOR FOR CA STORES */
            FOR rec_ca IN c_itemcost_ca (ln_cad_exchange)
            LOOP
                /* Condition to verify the brand of  style */

                /*    begin
                    LV_BRAND := NULL;
                    LV_CONCEPT := NULL;
                    LV_SHOKA   := NULL;
                    select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_CA.INVENTORY_ITEM_ID,REC_CA.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                    IF   LV_BRAND = 'UGG' THEN
                    LV_CONCEPT := 'CONCEPT';
                    LV_SHOKA   := 'SHOKA';
                    ELSE
                    LV_CONCEPT := NULL;
                    LV_SHOKA   := NULL;
                    END IF;
                    EXCEPTION
                     WHEN OTHERS THEN
                    FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                    END; */
                lv_counter   := 0;

                FOR store_cur
                    IN c_itemcost_s_ca (rec_ca.inventory_item_id, rec_ca.organization_id, 'CA'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    lv_counter   := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_ca.style
                               AND color = rec_ca.color
                               AND sze = rec_ca.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'CA'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_ca.ca_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_ca.style
                                           AND color = rec_ca.color
                                           AND sze = rec_ca.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'CA');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_ca.inventory_item_id, rec_ca.organization_id, rec_ca.style, rec_ca.color, rec_ca.sze, 'CA', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_ca.ca_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_ca.style
                                           AND color = rec_ca.color
                                           AND sze = rec_ca.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE CA*/
            END LOOP;                                   -- FOR STORE CURSOR */

            /* CURSOR FOR CN STORES */
            FOR rec_cn IN c_itemcost_cn
            LOOP
                /* Condition to verify the brand of  style */

                /*   begin
                   LV_BRAND := NULL;
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   select XXDOINV006_PKG.GET_BRAND_F(NULL,REC_CN.INVENTORY_ITEM_ID,REC_CN.ORGANIZATION_ID) INTO LV_BRAND FROM DUAL;
                   IF   LV_BRAND = 'UGG' THEN
                   LV_CONCEPT := 'CONCEPT';
                   LV_SHOKA   := 'SHOKA';
                   ELSE
                   LV_CONCEPT := NULL;
                   LV_SHOKA   := NULL;
                   END IF;
                   EXCEPTION
                    WHEN OTHERS THEN
                   FND_FILE. PUT_LINE( FND_FILE.LOG,'ERROR OCCURED IN ITEMLOC WHILE VERIFYING BRAND OF AN ITEM'||SQLCODE||SQLERRM);
                   END; */
                FOR store_cur
                    IN c_itemcost_s_cn (rec_cn.inventory_item_id, rec_cn.organization_id, 'CN'
                                        , 'OUTLET', lv_shoka, lv_concept)
                LOOP
                    lv_counter   := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    BEGIN
                        ln_itemcost   := NULL;

                        SELECT region_cost
                          INTO ln_itemcost
                          FROM xxdoinv010_int
                         WHERE     style = rec_cn.style
                               AND color = rec_cn.color
                               AND sze = rec_cn.sze
                               AND store_warehouse = 'S'
                               AND region_code = 'CN'
                               AND processed_flag = 'Y'
                               AND region_cost = rec_cn.cn_region_cost
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv010_int
                                     WHERE     style = rec_cn.style
                                           AND color = rec_cn.color
                                           AND sze = rec_cn.sze
                                           AND store_warehouse = 'S'
                                           AND processed_flag = 'Y'
                                           AND region_code = 'CN');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                INSERT INTO xxdoinv010_int (
                                                slno,
                                                inventory_item_id,
                                                organization_id,
                                                style,
                                                color,
                                                sze,
                                                region_code,
                                                status_flag,
                                                xdata,
                                                store_warehouse,
                                                region_cost)
                                     VALUES (xxdoinv010_int_s.NEXTVAL, rec_cn.inventory_item_id, rec_cn.organization_id, rec_cn.style, rec_cn.color, rec_cn.sze, 'CN', 'N', XMLTYPE.getclobval (store_cur.itemcost)
                                             , 'S', rec_cn.cn_region_cost);
                            --COMMIT;
                            EXCEPTION
                                WHEN OTHERS
                                THEN
                                    lv_errmsg   := SQLERRM;

                                    /* Updating the existing record to validation error and storing the error code */
                                    UPDATE xxdoinv010_int
                                       SET status_flag = 'VE', errorcode = lv_errmsg
                                     WHERE     style = rec_cn.style
                                           AND color = rec_cn.color
                                           AND sze = rec_cn.sze
                                           AND TRUNC (transmission_date) =
                                               TRUNC (SYSDATE);

                                    -- COMMIT;
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Debug point 1:  Exception occured and verify the table data with error ');
                            END;
                    END;
                END LOOP;                                   /* For  STORE CN*/
            END LOOP;                                   -- FOR STORE CURSOR */

            lv_counter   := 0;

            /***********************************************************************************************************************************/
            FOR j IN c_itemcostpublish
            LOOP
                lv_counter   := lv_counter + 1;

                IF (lv_counter = 500)
                THEN
                    COMMIT;
                    lv_counter   := 0;
                END IF;

                lx_xmltype_in   :=
                    SYS.XMLTYPE (
                           '<publishXCostChgModifyUsingXCostChgDesc xmlns="http://www.oracle.com/retail/igs/integration/services/XCostChgPublishingService/v1"
     xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XCostChgDesc/v1"
     xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXCostChgDesc/v1"
      xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXCostChgDesc/v1"
      xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXCostChgDesc/v1"
       xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXCostChgDesc/v1"
        xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXCostChgDesc/v1"
        xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXCostChgDesc/v1">'
                        || j.xdata
                        || '</publishXCostChgModifyUsingXCostChgDesc>');

                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);

                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Response is stored in the staging table  ');
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv010_int
                           SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                               transmission_date = SYSDATE
                         WHERE slno = j.slno;
                    ELSE
                        fnd_file.put_line (fnd_file.LOG,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv010_int
                           SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                         WHERE slno = j.slno;
                    END IF;
                --COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        /* Updating the existing record to validation error and storing the error code */
                        UPDATE xxdoinv010_int
                           SET status_flag = 'VE', errorcode = lv_errmsg
                         WHERE slno = j.slno;

                        -- COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM);
                END;                        /* End calling the webservice   */
            END LOOP;                                   /* For Publish cost */

            COMMIT;
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Cost Procedure and it is    '
                || SQLERRM);
    END;

    PROCEDURE publish_itemuda_update (pv_errorbuf OUT VARCHAR2, pv_retcode OUT VARCHAR2, pv_rundate VARCHAR2
                                      , pv_reprocess VARCHAR2, pv_fromdate VARCHAR2, pv_todate VARCHAR2)
    /**********************************************************************************************
    Procedure to Update TAX UDA
    *************************************************************************************************/
    IS
        lv_wsdl_ip             VARCHAR2 (25);
        lv_wsdl_url            VARCHAR2 (4000);
        lv_namespace           VARCHAR2 (4000);
        lv_service             VARCHAR2 (4000);
        lv_port                VARCHAR2 (4000);
        lv_operation           VARCHAR2 (4000);
        lv_targetname          VARCHAR2 (4000);
        lx_xmltype_in          SYS.XMLTYPE;
        lx_xmltype_out         SYS.XMLTYPE;
        lc_return              CLOB;
        lv_item_mdflag         VARCHAR2 (1) := 'N';
        ln_itemskucount        NUMBER;
        lv_op_mode             VARCHAR2 (60);
        lv_errmsg              VARCHAR2 (240);
        lv_sku_status          VARCHAR2 (10) := 'N';
        /* Modification variables test */
        lv_vertex              xxdoinv006g_int.vertex_tax%TYPE;
        lv_counter             NUMBER := 0;
        lv_rec_count           NUMBER;
        lv_min_slno            NUMBER;
        lv_max_slno            NUMBER;
        lv_from_slno           NUMBER;
        lv_to_slno             NUMBER;
        lv_batch_count         NUMBER;
        ln_request_id          NUMBER;
        lv_request_id          NUMBER := fnd_global.conc_request_id;
        lv_noof_items          NUMBER := 0;
        lv_item_cost           NUMBER := 0;
        lv_req_phase           VARCHAR2 (100);
        lv_req_status          VARCHAR2 (100);
        lv_req_dev_phase       VARCHAR2 (1000);
        lv_req_dev_status      VARCHAR2 (100);
        lv_req_message         VARCHAR2 (2400);
        lv_req_return_status   BOOLEAN;
        req_data               VARCHAR2 (20);
        l_batch_size           NUMBER := 1;
        l_rundate              DATE := NULL;
        lv_email_counter       NUMBER := 1;
        ln_uk_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_cn_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_hk_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_ca_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_jp_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_fr_cost             NUMBER := 0.01;            -- W.r.t version 3.0
        ln_styledupcount       NUMBER;             -- Added for 3.2 by Infosys
        l_style                VARCHAR2 (50);      -- Added for 3.2 by Infosys


        CURSOR c_item IS
            SELECT msib.inventory_item_id, msib.organization_id, --msib.segment1 style, msib.segment2 color, msib.segment3 sze,                                    -- commented by BT Tech team
                                                                 msib.style_number style,
                   msib.color_code color, msib.item_size sze, -- added by BT Tech team
                                                              msib.inventory_item_status_code item_status,
                   --msib.description, msib.attribute13 scale_code_id,                                                -- commented by BT Tech team
                   msib.item_description description, msib.size_scale_id scale_code_id, -- added by BT Tech team
                                                                                        mc1.segment1 vertex_tax
              FROM --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   /*qp_pricing_attributes qpa,
                   qp_list_lines qll,
                   qp_list_headers qlh,*/
                   --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   --mtl_system_items_b msib,                                                                        -- commented by BT Tech team
                   apps.xxd_common_items_v msib,      -- added by BT Tech team
                                                 mtl_item_categories mic1, mtl_categories mc1,
                   mtl_category_sets mcs1
             WHERE     --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                       1 = 1
                   /*qpa.list_line_id = qll.list_line_id
                   AND qll.list_header_id = qlh.list_header_id*/
                   --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   --AND qpa.product_attribute = 'PRICING_ATTRIBUTE2' --Commented for v1.3
                   --AND qpa.product_attr_value = mc.category_id --Commented for v1.3
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND msib.organization_id = 7                                                                        -- commented by BT Tech team
                   AND msib.organization_id IN
                           (SELECT ood.organization_id -- added by BT Tech team - START
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   AND msib.inventory_item_id = mic1.inventory_item_id
                   AND msib.organization_id = mic1.organization_id
                   AND mic1.category_id = mc1.category_id
                   AND mc1.structure_id = mcs1.structure_id
                   -- Start modification by BT Team on 29-Sep-15
                   AND mcs1.category_set_name = 'Tax Class'
                   -- End modification by BT Team on 29-Sep-15
                   AND TRUNC (mic1.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   --AND qpa.product_attribute_context = 'ITEM'--Commented for v1.3
                   --AND qlh.NAME = 'Retail - US'--Commented for v1.3
                   --            AND mcs.category_set_name = 'Styles'
                   AND mcs.category_set_name = 'OM Sales Category'
                   /*AND msib.segment1 NOT LIKE 'S%L'                                                                    -- commented by BT Tech team - START
                   AND msib.segment1 NOT LIKE 'S%R'
                   AND msib.segment3 <> 'ALL'
                   AND msib.attribute13 IS NOT NULL
                   AND msib.attribute11 IS NOT NULL */
                   -- commented by BT Tech team - END
                   --            AND msib.style_number NOT LIKE 'S%L'
                   -- added by BT Tech team - START
                   --            AND msib.style_number NOT LIKE 'S%R'
                   -- Start modification by BT Team on 29-Sep-15
                   --            AND NVL (msib.item_type,'X') <>
                   AND NVL (msib.item_type, 'X') NOT IN ('GENERIC', 'SAMPLE', 'SAMPLE-L',
                                                         'SAMPLE-R')
                   -- End modification by BT Team on 29-Sep-15
                   AND msib.size_scale_id IS NOT NULL
                   AND msib.upc_code IS NOT NULL -- added by BT Tech team - END
                   AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                      msib.organization_id)
                           IS NOT NULL
                   --AND msib.segment1 NOT IN (                                                                        -- commented by BT Tech team
                   AND msib.style_number NOT IN
                           (                          -- added by BT Tech team
                            SELECT description
                              FROM apps.fnd_lookup_values
                             WHERE     lookup_type = 'XXDOINV007_STYLE'
                                   AND enabled_flag = 'Y'
                                   AND LANGUAGE = 'US');

        CURSOR c_itemsku (pv_segment1 VARCHAR2, pv_style VARCHAR2, --Added for 3.2 by Infosys
                                                                   pn_item_id NUMBER
                          , pn_orgn_id NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XItemDesc",
                       xmlattributes (
                           'http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1'
                               AS "xmlns:v1"),
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       --XMLELEMENT ("v1:item_parent", msib.segment1),                                                                    -- commented by BT Tech team
                       --XMLELEMENT ("v1:item_parent", msib.style_number),      --commented for 3.2 by Infosys
                       XMLELEMENT ("v1:item_parent", pv_style), --Added for 3.2 by Infosys
                       -- added by BT Tech team
                       XMLELEMENT ("v1:item_grandparent", ''),
                       XMLELEMENT ("v1:pack_ind", 'N'),
                       XMLELEMENT ("v1:item_level", 2),
                       XMLELEMENT ("v1:tran_level", 2),
                       XMLELEMENT (
                           "v1:diff_1",
                           --xxdoinv006_pkg.get_color_flex_id_f (msib.segment2)                                                    -- commented by BT Tech team
                           xxdoinv006_pkg.get_color_flex_id_f (
                               msib.color_code)       -- added by BT Tech team
                                               ),
                       --XMLELEMENT ("v1:diff_2", msib.segment3),                                                                        -- commented by BT Tech team
                       XMLELEMENT ("v1:diff_2", msib.item_size),
                       -- added by BT Tech team
                       XMLELEMENT ("v1:diff_3", ''),
                       XMLELEMENT ("v1:diff_4", ''),
                       XMLELEMENT (
                           "v1:dept",
                           xxdoinv006_pkg.get_dept_num_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:class",
                           xxdoinv006_pkg.get_class_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:subclass",
                           xxdoinv006_pkg.get_class_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:item_desc",
                           --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                                    -- commented by BT Tech team
                           msib.item_number           -- added by BT Tech team
                                            || ':' || msib.item_description),
                       XMLELEMENT ("v1:iscloc_hier_level", 'RE'),
                       XMLELEMENT ("v1:izp_hier_level", 'RE'),
                       XMLELEMENT (
                           "v1:short_desc",
                              --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                                    -- commented by BT Tech team
                              --msib.style_number       --commented for 3.2 by Infosys
                              pv_style              --Added for 3.2 by Infosys
                           || ':'
                           || msib.color_code
                           || ':'
                           || msib.item_size          -- added by BT Tech team
                           || ':'
                           || msib.item_description),
                       XMLELEMENT ("v1:retail_zone_group_id", 1),
                       XMLELEMENT ("v1:cost_zone_group_id", 1000),
                       XMLELEMENT ("v1:standard_uom", 'EA'),
                       XMLELEMENT ("v1:store_ord_mult", 'E'),
                       XMLELEMENT ("v1:forecast_ind", 'N'),
                       XMLELEMENT ("v1:simple_pack_ind", 'N'),
                       XMLELEMENT ("v1:contains_inner_ind", 'N'),
                       XMLELEMENT ("v1:sellable_ind", 'Y'),
                       XMLELEMENT ("v1:orderable_ind", 'Y'),
                       XMLELEMENT ("v1:pack_type", ''),
                       XMLELEMENT ("v1:order_as_type", ''),
                       XMLELEMENT ("v1:create_datetime", ''),
                       XMLELEMENT ("v1:XItemCtryDesc",
                                   XMLELEMENT ("v1:country_id", 'US')),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('US')),
                           XMLELEMENT ("v1:primary_supp_ind", 'Y'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'US'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT (
                                   "v1:unit_cost",
                                   xxdoinv006_pkg.get_cost_us_f (
                                       msib.inventory_item_id,
                                       msib.organization_id)),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT (
                                       "v1:base_cost",
                                       xxdoinv006_pkg.get_cost_us_f (
                                           msib.inventory_item_id,
                                           msib.organization_id)),
                                   XMLELEMENT (
                                       "v1:negotiated_item_cost",
                                       xxdoinv006_pkg.get_cost_us_f (
                                           msib.inventory_item_id,
                                           msib.organization_id)),
                                   XMLELEMENT (
                                       "v1:extended_base_cost",
                                       xxdoinv006_pkg.get_cost_us_f (
                                           msib.inventory_item_id,
                                           msib.organization_id)),
                                   XMLELEMENT (
                                       "v1:inclusive_cost",
                                       xxdoinv006_pkg.get_cost_us_f (
                                           msib.inventory_item_id,
                                           msib.organization_id))),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc,
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('US')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('UK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'GB'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                                    -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'UK'
                                                                                          ) */
                                                           -- commented by BT Tech team - END
                                                           ln_uk_cost -- W.r.t version 3.0
                                                                     ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'UK'
                                                                                          ) */
                                                               ln_uk_cost -- W.r.t version 3.0
                                                                         ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'UK'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_uk_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'UK'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_uk_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'UK'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_uk_cost -- W.r.t version 3.0
                                                         )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('UK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('JP')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'JP'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'JP'
                                                                                          ) */
                                                           -- commented by BT Tech team - END
                                                           ln_jp_cost -- W.r.t version 3.0
                                                                     ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'JP'
                                                                                          ) */
                                                               -- commented by BT Tech team - END
                                                               ln_jp_cost -- W.r.t version 3.0
                                                                         ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'JP'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_jp_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'JP'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_jp_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'JP'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_jp_cost -- W.r.t version 3.0
                                                         )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('JP')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CA')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CA'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'CA'
                                                                                          ) */
                                                           -- commented by BT Tech team - END
                                                           ln_ca_cost -- added by BT Tech team - END
                                                                     ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'CA'
                                                                                          ) */
                                                               -- commented by BT Tech team - END
                                                               ln_ca_cost -- W.r.t version 3.0
                                                                         ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'CA'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_ca_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'CA'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_ca_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:inclusive_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'CA'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_ca_cost -- W.r.t version 3.0
                                                         )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CA')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('HK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'HK'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'HK'
                                                                                          ) */
                                                           -- commented by BT Tech team - END
                                                           ln_hk_cost -- W.r.t version 3.0
                                                                     ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'HK'
                                                                                          ) */
                                                               -- commented by BT Tech team - END
                                                               ln_hk_cost -- W.r.t version 3.0
                                                                         ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'HK'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_hk_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost", /* xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                                    (msib.segment1,
                                                                                                     msib.segment2,
                                                                                                     msib.segment3,
                                                                                                     'HK'
                                                                                                    ) */
                                            -- commented by BT Tech team - END
                                                ln_hk_cost -- W.r.t version 3.0
                                                          ),
                                   XMLELEMENT ("v1:inclusive_cost", /*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                               (msib.segment1,
                                                                                                msib.segment2,
                                                                                                msib.segment3,
                                                                                                'HK'
                                                                                               ) */
                                            -- commented by BT Tech team - END
                                                ln_hk_cost -- W.r.t version 3.0
                                                          )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('HK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CN')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''), --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CN'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'CN'
                                                                                          ) */
                                            -- commented by BT Tech team - END
                                            ln_cn_cost    -- W.r.t version 3.0
                                                      ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'CN'
                                                                                          ) */
                                            -- commented by BT Tech team - END
                                                ln_cn_cost -- W.r.t version 3.0
                                                          ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'CN'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_cn_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'CN'
                                                                                                   ) */
                                            -- commented by BT Tech team - END
                                                ln_cn_cost -- W.r.t version 3.0
                                                          ),
                                   XMLELEMENT ("v1:inclusive_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                               (msib.segment1,
                                                                                                msib.segment2,
                                                                                                msib.segment3,
                                                                                                'CN'
                                                                                               ) */
                                            -- commented by BT Tech team - END
                                                ln_cn_cost --W.r.t version 3.0
                                                          )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       UPPER (NVL (msib.weight_uom_code, ''))),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')),
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CN')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('FR')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'FR'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", /*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'FR'
                                                                                          ) */
                                            -- commented by BT Tech team - END
                                            ln_fr_cost    -- W.r.t version 3.0
                                                      ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                          (msib.segment1,
                                                                                           msib.segment2,
                                                                                           msib.segment3,
                                                                                           'FR'
                                                                                          ) */
                                            -- commented by BT Tech team - END
                                                ln_fr_cost -- W.r.t version 3.0
                                                          ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                          (msib.segment1,
                                                                           msib.segment2,
                                                                           msib.segment3,
                                                                           'FR'
                                                                          ) */
                                               -- commented by BT Tech team - END
                                               ln_fr_cost -- W.r.t version 3.0
                                                         ),
                                   XMLELEMENT ("v1:extended_base_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'FR'
                                                                                                   ) */
                                            -- commented by BT Tech team - END
                                                ln_fr_cost -- W.r.t version 3.0
                                                          ),
                                   XMLELEMENT ("v1:inclusive_cost", /*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                               (msib.segment1,
                                                                                                msib.segment2,
                                                                                                msib.segment3,
                                                                                                'FR'
                                                                                               ) */
                                            -- commented by BT Tech team - END
                                                ln_fr_cost -- W.r.t version 3.0
                                                          )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('FR')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemVATDesc",
                           XMLELEMENT ("v1:vat_type", 'B'),
                           XMLELEMENT ("v1:vat_region", '1000'),
                           XMLELEMENT ("v1:vat_code", 'S'),
                           XMLELEMENT (
                               "v1:active_date",
                                  TO_CHAR (SYSDATE, 'YYYY-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS'))),
                       --xmlitemzpdesc
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '101'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                               --qll.operand
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('US'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '102'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CA')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               /*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                            -- commented by BT Tech team - START
                                                                  msib.segment2,
                                                                  msib.segment3,
                                                                  'CA'
                                                                 ) */
                               -- commented by BT Tech team - END
                               --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                               --Commented and added below condition
                               /*xxdoinv006_pkg.get_region_price_f
                                  (msib.style_number,
                                   -- added by BT Tech team - START
                                   msib.color_code,
                                   msib.item_size,
                                   'CA'
                                  )*/
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('CA'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                        -- added by BT Tech team - END
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CA')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '200'),                                                    -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('UK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               /*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                            -- commented by BT Tech team - START
                                                                  msib.segment2,
                                                                  msib.segment3,
                                                                  'UK'
                                                                 ) */
                               -- commented by BT Tech team - END
                               --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                               --Commented and added below condition
                               /*xxdoinv006_pkg.get_region_price_f
                                  (msib.style_number,
                                   -- added by BT Tech team - START
                                   msib.color_code,
                                   msib.item_size,
                                   'UK'
                                  )*/
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('UK'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                        -- added by BT Tech team - END
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('UK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '301'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CN')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               /*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                                -- commented by BT Tech team - START
                                                                  msib.segment2,
                                                                  msib.segment3,
                                                                  'CN'
                                                                 ) */
                               -- commented by BT Tech team - END
                               --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                               --Commented and added below condition
                               /*xxdoinv006_pkg.get_region_price_f
                                  (msib.style_number,
                                   -- added by BT Tech team - START
                                   msib.color_code,
                                   msib.item_size,
                                   'CN'
                                  )*/
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('CN'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                        -- added by BT Tech team - END
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CN')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '300'),                                                    -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('JP')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               /*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                                -- commented by BT Tech team - START
                                                                  msib.segment2,
                                                                  msib.segment3,
                                                                  'JP'
                                                                 ) */
                               -- commented by BT Tech team - END
                               --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                               --Commented and added below condition
                               /*xxdoinv006_pkg.get_region_price_f
                                  (msib.style_number,
                                   -- added by BT Tech team - START
                                   msib.color_code,
                                   msib.item_size,
                                   'JP'
                                  )*/
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('JP'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                        -- added by BT Tech team - END
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('JP')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '101'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                               --qll.operand
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('US'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '212'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('FR')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                               --qll.operand
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('US'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('FR')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '305'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('HK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:selling_unit_retail",
                               --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                               --qll.operand
                               NVL (
                                   hsoe.get_price_list_value (
                                       xxdo_get_price_list ('US'),
                                       msib.inventory_item_id),
                                   0.01) --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                        ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('HK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 1),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_vertex_tax_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_vertex_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                               xxdoinv006_pkg.get_vertex_updatedate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_vertex_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 2),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv006_pkg.get_sub_group_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                               xxdoinv006_pkg.get_sub_group_createdate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                               xxdoinv006_pkg.get_sub_group_updatedate_f (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv006_pkg.get_sub_group_updatedby_f (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT ("v1:status", 'A'),
                       XMLELEMENT ("v1:uom_conv_factor", ''),
                       XMLELEMENT ("v1:package_size", 1),
                       XMLELEMENT ("v1:handling_temp", ''),
                       XMLELEMENT ("v1:handling_sensitivity", ''),
                       XMLELEMENT ("v1:mfg_rec_retail", ''),
                       XMLELEMENT ("v1:waste_type", ''),
                       XMLELEMENT ("v1:waste_pct", ''),
                       XMLELEMENT ("v1:item_number_type", 'MANL'),
                       XMLELEMENT ("v1:catch_weight_ind", 'N'),
                       XMLELEMENT ("v1:const_dimen_ind", 'N'),
                       XMLELEMENT ("v1:gift_wrap_ind", 'N'),
                       XMLELEMENT ("v1:ship_alone_ind", 'N'),
                       XMLELEMENT ("v1:ext_source_system", ''),
                       XMLELEMENT ("v1:size_group1", ''),
                       XMLELEMENT ("v1:size_group2", ''),
                       XMLELEMENT ("v1:size1", ''),
                       XMLELEMENT ("v1:size2", ''),
                       XMLELEMENT ("v1:color", ''),
                       XMLELEMENT ("v1:system_ind", ''),
                       XMLELEMENT ("v1:upc_supplement", ''),
                       XMLELEMENT ("v1:upc_type", ''),
                       XMLELEMENT ("v1:primary_upc_ind", ''),
                       XMLELEMENT ("v1:primary_repl_ind", ''),
                       XMLELEMENT ("v1:item_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_1_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_2_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_3_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_4_aggregate_ind", ''),
                       XMLELEMENT ("v1:perishable_ind", 'N'),
                       XMLELEMENT ("v1:notional_pack_ind", 'N'),
                       XMLELEMENT ("v1:soh_inquiry_at_pack_ind", 'N'),
                       XMLELEMENT ("v1:aip_case_type", ''),
                       XMLELEMENT ("v1:banded_item_ind", 'N'),
                       XMLELEMENT ("v1:order_type", ''),
                       XMLELEMENT ("v1:sale_type", ''),
                       XMLELEMENT ("v1:catch_weight_uom", ''),
                       XMLELEMENT ("v1:deposit_item_type", ''),
                       XMLELEMENT ("v1:inventory_ind", 'Y'),
                       XMLELEMENT ("v1:item_xform_ind", 'N'),
                       XMLELEMENT ("v1:container_item", ''),
                       XMLELEMENT ("v1:package_uom", '')) itemxml
              FROM --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   /*qp_pricing_attributes qpa,
                   qp_list_lines qll,
                   qp_list_headers qlh,*/
                   --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   --mtl_system_items_b msib                                                                    -- commendted by BT Tech team
                   apps.xxd_common_items_v msib        -- aded by BT Tech team
             WHERE     --Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                       1 = 1 /*qpa.list_line_id = qll.list_line_id
                         AND qll.list_header_id = qlh.list_header_id*/
                   --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   --AND qpa.product_attribute = 'PRICING_ATTRIBUTE2' --Commented for v1.3
                   --AND qpa.product_attr_value = mc.category_id --Commented for v1.3
                   --                and qpa.product_attr_value = to_char(mc.category_id)
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   --AND msib.organization_id = 7                                                                    -- commendted by BT Tech team
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          -- added by BT Tech team - START
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   -- added by BT Tech team - END
                   --and msib.inventory_item_status_code = 'Active'
                   --AND qpa.product_attribute_context = 'ITEM'--Commented for v1.3
                   --AND qlh.NAME = 'Retail - US'--Commented for v1.3
                   --AND mcs.category_set_name = 'Styles'                                                            -- commented by BT Tech team
                   AND mcs.category_set_name = 'OM Sales Category'
                   -- added by B Tech team
                   /*AND msib.attribute11 IS NOT NULL                                                                -- commented by BT Tech team - START
                   AND msib.attribute13 IS NOT NULL
                   AND msib.segment3 <> 'ALL'
                   AND msib.segment1 NOT LIKE 'S%L'
                   AND msib.segment1 NOT LIKE 'S%R'
                   AND (TRIM (msib.segment1)) = UPPER (TRIM (pv_segment1)) */
                   -- commented by BT Tech team - END
                   AND msib.upc_code IS NOT NULL -- added by BT Tech team - START
                   AND msib.size_scale_id IS NOT NULL
                   -- Start modification by BT team on 29-Sep-15
                   --            AND msib.item_type <> 'GENERIC'
                   AND msib.item_type NOT IN ('GENERIC', 'SAMPLE', 'SAMPLE-L',
                                              'SAMPLE-R')
                   --            AND msib.style_number NOT LIKE 'S%L'
                   --            AND msib.style_number NOT LIKE 'S%R'
                   -- End modification by BT team on 29-Sep-15
                   AND (TRIM (msib.style_number)) =
                       UPPER (TRIM (pv_segment1))
                   -- added by BT Tech team - END
                   AND msib.inventory_item_id = pn_item_id
                   AND msib.organization_id = pn_orgn_id;

        CURSOR c_itempublish (pv_segment1 VARCHAR2, pn_item_id NUMBER)
        IS
            SELECT *
              FROM xxdoinv006g_int
             WHERE     status_flag = 'N'
                   AND UPPER (TRIM (style)) = UPPER (TRIM (pv_segment1))
                   AND inventory_item_id = pn_item_id;

        CURSOR c_itemskurepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006g_int
             WHERE     status_flag IN ('VE', 'P')
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        req_data    := fnd_conc_global.request_data;
        l_rundate   := TRUNC (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'));

        IF (req_data IS NULL)
        THEN
            /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
            BEGIN
                SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                         --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                         'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0

                                                                                                                  apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
                  INTO lv_wsdl_ip
                  FROM apps.fnd_product_groups;
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the File server name');
                    pv_retcode   := 2;
            END;

            /* Initializing the Item loc web service variables */
            lv_wsdl_url    :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService?WSDL';
            lv_namespace   :=
                'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
            lv_service     := 'XItemPublishingService';
            lv_port        := 'XItemPublishingPort';
            lv_operation   := 'publishXItemUDAModifyUsingXItemDesc';
            lv_targetname   :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService';

            IF pv_reprocess = 'Y'
            THEN
                FOR rec_reprocess
                    IN c_itemskurepublish (pv_fromdate, pv_todate)
                LOOP
                    /* Inserting the data into Staging table using the code */
                    l_style   := NULL;             -- Added for 3.2 by Infosys
                    l_style   :=
                        SUBSTR (rec_reprocess.style,
                                INSTR (rec_reprocess.style, '-', 1) + 1); -- Added for 3.2 by Infosys

                    fnd_file.put_line (fnd_file.LOG,
                                       'reprocess-l_style ' || l_style);
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'rec_reprocess.style ' || rec_reprocess.style);

                    FOR i IN c_itemsku (UPPER (TRIM (l_style)), --Added for 3.2 by Infosys
                                                                UPPER (TRIM (rec_reprocess.style)), rec_reprocess.inventory_item_id
                                        , rec_reprocess.organization_id)
                    LOOP
                        BEGIN
                            UPDATE xxdoinv006g_int
                               SET xdata   = XMLTYPE.getclobval (i.itemxml)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv006g_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg, xdata = XMLTYPE.getclobval (i.itemxml)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */

                    /* Publish Item  */
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemUDAModifyUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || rec_reprocess.xdata
                            || '</publishXItemUDAModifyUsingXItemDesc>');

                    /* Calling the webservice here */
                    BEGIN
                        lx_xmltype_out   :=
                            xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                      , lx_xmltype_in);

                        IF lx_xmltype_out IS NOT NULL
                        THEN
                            fnd_file.put_line (
                                fnd_file.output,
                                'Response is stored in the staging table  ');
                            lc_return   :=
                                XMLTYPE.getclobval (lx_xmltype_out);

                            UPDATE xxdoinv006g_int
                               SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                   transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        ELSE
                            fnd_file.put_line (fnd_file.output,
                                               'Response is NULL  ');
                            lc_return   := NULL;

                            UPDATE xxdoinv006g_int
                               SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        END IF;

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv006g_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                || SQLERRM);
                    END;                    /* End calling the webservice   */
                END LOOP;                                 /* For REPublish  */
            ELSE
                FOR rec_item IN c_item
                LOOP
                    ln_itemskucount    := NULL;
                    lv_op_mode         := 'ITEM_UPDATE';
                    lv_operation       :=
                        'publishXItemUDAModifyUsingXItemDesc';
                    /*----Start----Added for 3.2 by Infosys-------------------*/
                    ln_styledupcount   := NULL;
                    l_style            := NULL;


                    SELECT COUNT (1)
                      INTO ln_styledupcount
                      FROM mtl_system_items_b
                     WHERE TO_CHAR (inventory_item_id) = rec_item.style;


                    IF ln_styledupcount <> 0
                    THEN
                        l_style   := 'RMS-' || (rec_item.style);
                    ELSE
                        l_style   := rec_item.style;
                    END IF;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_styledupcount ' || ln_styledupcount);

                    fnd_file.put_line (fnd_file.LOG, 'l_style ' || l_style);

                    /*-----End---------Added for 3.2 by Infosys------------------*/
                    /* Fetching the processed record of the Max transmission date */
                    BEGIN
                        SELECT vertex_tax
                          INTO lv_vertex
                          FROM xxdoinv006g_int
                         WHERE     --UPPER (TRIM (style)) = UPPER (TRIM (rec_item.style))      --commented for 3.2 by Infosys
                                   UPPER (TRIM (style)) =
                                   UPPER (TRIM (l_style)) --Added for 3.2 by Infosys
                               AND organization_id = rec_item.organization_id
                               AND inventory_item_id =
                                   rec_item.inventory_item_id
                               AND processed_flag = 'Y'
                               AND status_flag = 'P'
                               AND ROWNUM = 1
                               AND transmission_date =
                                   (SELECT MAX (transmission_date)
                                      FROM xxdoinv006g_int
                                     WHERE     UPPER (TRIM (style)) =
                                               --UPPER (TRIM (rec_item.style))    --commented for 3.2 by Infosys
                                               UPPER (TRIM (l_style)) --Added for 3.2 by Infosys
                                           AND organization_id =
                                               rec_item.organization_id
                                           AND inventory_item_id =
                                               rec_item.inventory_item_id
                                           AND processed_flag = 'Y'
                                           AND status_flag = 'P');
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            BEGIN
                                --Start W.r.t version 3.0
                                /*
                                BEGIN
                                   SELECT xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'UK'),
                                          xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'CN'),
                                          xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'HK'),
                                          xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'CA'),
                                          xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'JP'),
                                          xxdoinv006_pkg.get_region_cost_f (
                                             rec_item.style,
                                             rec_item.color,
                                             rec_item.sze,
                                             'FR')
                                     INTO ln_uk_cost,
                                          ln_cn_cost,
                                          ln_hk_cost,
                                          ln_ca_cost,
                                          ln_jp_cost,
                                          ln_fr_cost
                                     FROM DUAL;
                                EXCEPTION
                                   WHEN OTHERS
                                   THEN
                                      fnd_file.put_line (
                                         fnd_file.LOG,
                                         'Exception Occured while fetching region costs :: ');
                                      ln_uk_cost := 0.1;
                                      ln_cn_cost := 0.1;
                                      ln_hk_cost := 0.1;
                                      ln_ca_cost := 0.1;
                                      ln_jp_cost := 0.1;
                                      ln_fr_cost := 0.1;
                                END;
                                */
                                --End W.r.t version 3.0
                                FOR i
                                    IN c_itemsku (UPPER (TRIM (rec_item.style)), UPPER (TRIM (l_style)), --Added for 3.2 by Infosys
                                                                                                         rec_item.inventory_item_id
                                                  , rec_item.organization_id)
                                LOOP
                                    fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Before insert i= :: ');

                                    BEGIN
                                        lv_counter   := lv_counter + 1;

                                        IF (lv_counter = 500)
                                        THEN
                                            COMMIT;
                                            lv_counter   := 0;
                                        END IF;

                                        fnd_file.put_line (
                                            fnd_file.LOG,
                                               'Debug point 1:  lv_counter :: '
                                            || lv_counter);

                                        INSERT INTO xxdoinv006g_int (
                                                        slno,
                                                        servicetype,
                                                        operation,
                                                        inventory_item_id,
                                                        organization_id,
                                                        style,
                                                        color,
                                                        sze,
                                                        item_status,
                                                        vertex_tax,
                                                        status_flag,
                                                        xdata,
                                                        parent_request_id)
                                             VALUES (xxdoinv006g_int_s.NEXTVAL, 'ITEM ', lv_op_mode, rec_item.inventory_item_id, rec_item.organization_id, --rec_item.style,         --commented for 3.2 by Infosys
                                                                                                                                                           l_style, --Added for 3.2 by Infosys
                                                                                                                                                                    rec_item.color, rec_item.sze, rec_item.item_status, rec_item.vertex_tax, lv_sku_status, XMLTYPE.getclobval (i.itemxml)
                                                     , lv_request_id);
                                    EXCEPTION
                                        WHEN OTHERS
                                        THEN
                                            fnd_file.put_line (
                                                fnd_file.LOG,
                                                'Debug point 1:  Exception occured and verify the table data with error ');
                                    END;
                                END LOOP;                     /* For Style  */
                            END;
                    END;

                    COMMIT;
                /*
                FOR j IN c_itempublish (UPPER (TRIM (rec_item.style)),
                                        rec_item.inventory_item_id
                                       )
                LOOP
                   lx_xmltype_in :=
                      SYS.XMLTYPE
                         (   '<publishXItemUDAModifyUsingXItemDesc
                               xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                               xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                               xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                               xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                               xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                               xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                               xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                               xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                               xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                               xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                               xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                               xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                               xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                               xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                               xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                          || j.xdata
                          || '</publishXItemUDAModifyUsingXItemDesc>'
                         );

                   BEGIN
                      lx_xmltype_out :=
                         xxdo_invoke_webservice_f (lv_wsdl_url,
                                                   lv_namespace,
                                                   lv_targetname,
                                                   lv_service,
                                                   lv_port,
                                                   lv_operation,
                                                   lx_xmltype_in
                                                  );

                      IF lx_xmltype_out IS NOT NULL
                      THEN
                         fnd_file.put_line
                                     (fnd_file.output,
                                      'Response is stored in the staging table  '
                                     );
                         lc_return := XMLTYPE.getclobval (lx_xmltype_out);

                         UPDATE xxdoinv006g_int
                            SET retval = lc_return,
                                processed_flag = 'Y',
                                status_flag = 'P',
                                transmission_date = SYSDATE
                          WHERE slno = j.slno;
                      ELSE
                         fnd_file.put_line (fnd_file.output,
                                            'Response is NULL  ');
                         lc_return := NULL;

                         UPDATE xxdoinv006g_int
                            SET retval = lc_return,
                                status_flag = 'VE',
                                transmission_date = SYSDATE
                          WHERE slno = j.slno;
                      END IF;

                      COMMIT;
                   EXCEPTION
                      WHEN OTHERS
                      THEN
                         lv_errmsg := SQLERRM;
                         UPDATE xxdoinv006g_int
                            SET status_flag = 'VE',
                                errorcode = lv_errmsg
                          WHERE slno = j.slno;

                         COMMIT;
                         fnd_file.put_line
                            (fnd_file.LOG,
                                'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                             || SQLERRM
                            );
                   END;     */
                END LOOP;

                /***********************************************************************************************************************************/
                fnd_file.put_line (fnd_file.LOG, '***Batching Started ***');

                BEGIN
                    SELECT COUNT (*)
                      INTO lv_rec_count
                      FROM xxdoinv006g_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Code :' || SQLCODE);
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:lv_rec_count=' || lv_rec_count);

                BEGIN
                    SELECT MIN (slno)
                      INTO lv_min_slno
                      FROM xxdoinv006g_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the min no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                BEGIN
                    SELECT MAX (slno)
                      INTO lv_max_slno
                      FROM xxdoinv006g_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the min no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:lv_min_slno=' || lv_min_slno);
                lv_batch_count   :=
                    NVL (apps.fnd_profile.VALUE ('XXDO_ITEM_INT_CHILD_REQ'),
                         1);
                l_batch_size   := CEIL (lv_rec_count / lv_batch_count);

                --            IF l_batch_size = 1
                --            THEN
                --               lv_batch_count := 1;
                --            END IF;
                IF l_batch_size = 1
                THEN
                    IF lv_rec_count = 1
                    THEN
                        l_batch_size   := 1;
                    ELSIF lv_rec_count = 2
                    THEN
                        l_batch_size   := 2;
                    END IF;

                    lv_batch_count   := 1;
                END IF;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:l_batch_size=' || l_batch_size);

                FOR i IN 1 .. lv_batch_count
                LOOP
                    IF i = 1
                    THEN
                        lv_from_slno   := lv_min_slno;
                        lv_to_slno     := lv_from_slno + l_batch_size - 1;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** i=1 lv_from_slno'
                            || lv_from_slno
                            || ' AND lv_to_slno='
                            || lv_to_slno
                            || ' AND l_batch_size='
                            || l_batch_size);
                    ELSE
                        lv_from_slno   := lv_to_slno + 1;
                        lv_to_slno     := lv_from_slno + l_batch_size;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** i not 1 lv_from_slno'
                            || lv_from_slno
                            || ' AND lv_to_slno='
                            || lv_to_slno
                            || ' AND l_batch_size='
                            || l_batch_size);
                    END IF;

                    IF lv_to_slno > lv_max_slno
                    THEN
                        lv_to_slno   := lv_max_slno;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** lv_to_slno > lv_max_slno :: lv_to_slno='
                            || lv_to_slno);
                    END IF;

                    fnd_file.put_line (fnd_file.LOG,
                                       'lv_from_slno' || lv_from_slno);
                    fnd_file.put_line (fnd_file.LOG,
                                       'lv_to_slno' || lv_to_slno);
                    ln_request_id   :=
                        apps.fnd_request.submit_request (
                            application   => 'XXDO',
                            program       => 'XXDOINV006_ITEM_CALL_WEBSRV',
                            description   =>
                                   'Child Request - Call TAX UDA WEB Service('
                                || i
                                || ')',
                            start_time    => SYSDATE,
                            sub_request   => TRUE,
                            argument1     => lv_from_slno,
                            argument2     => lv_to_slno,
                            argument3     => lv_request_id,
                            argument4     => 'ITEM_TAX_UDA');
                    fnd_file.put_line (
                        fnd_file.LOG,
                           'Submitted BATCH '
                        || i
                        || 'Request id '
                        || ln_request_id);

                    IF ln_request_id IS NOT NULL
                    THEN
                        COMMIT;
                    ELSE
                        ROLLBACK;
                    END IF;
                END LOOP;

                IF lv_batch_count > 0
                THEN
                    apps.fnd_conc_global.set_req_globals (
                        conc_status    => 'PAUSED',
                        request_data   => TO_CHAR (ln_request_id));
                END IF;
            /***********************************************************************************************************************************/
            END IF;
        END IF;

        IF req_data IS NOT NULL
        THEN
            send_email_tax_uda_proc;
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Procedure and it is    '
                || SQLERRM);
            -- Email when program error out
            v_def_mail_recips   :=
                get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
            apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration TAX UDA Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY')
                                                 , l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Type: multipart/mixed; boundary=boundarystring',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);

            BEGIN
                SELECT meaning
                  INTO l_primary_email
                  FROM fnd_lookup_values_vl
                 WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Too many primary email addresses.');
            END;

            apps.do_mail_utils.send_mail_line (
                   'Item Integration - TAX UDA Program is completed with Error/Warning. Request ID='
                || fnd_global.conc_request_id,
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_close (l_ret_val);
    -- End Emial code
    END;

    --Added for change 2.1 - Start
    PROCEDURE publish_subdiv_itemuda_upd (pv_errorbuf    OUT VARCHAR2,
                                          pv_retcode     OUT VARCHAR2,
                                          pv_rundate         VARCHAR2,
                                          pv_reprocess       VARCHAR2,
                                          pv_fromdate        VARCHAR2,
                                          pv_todate          VARCHAR2,
                                          pv_style           VARCHAR2,
                                          pn_item_id         NUMBER)
    /**********************************************************************************************
    Procedure to process Sub-Division UDA
    *************************************************************************************************/
    IS
        lv_wsdl_ip             VARCHAR2 (25);
        lv_wsdl_url            VARCHAR2 (4000);
        lv_namespace           VARCHAR2 (4000);
        lv_service             VARCHAR2 (4000);
        lv_port                VARCHAR2 (4000);
        lv_operation           VARCHAR2 (4000);
        lv_targetname          VARCHAR2 (4000);
        lx_xmltype_in          SYS.XMLTYPE;
        lx_xmltype_out         SYS.XMLTYPE;
        lc_return              CLOB;
        lv_item_mdflag         VARCHAR2 (1) := 'N';
        ln_itemskucount        NUMBER;
        lv_op_mode             VARCHAR2 (60);
        lv_errmsg              VARCHAR2 (240);
        lv_sku_status          VARCHAR2 (10) := 'N';
        /* Modification variables test */
        lv_sub_division        xxdoinv006_sd_uda_int.sub_division%TYPE;
        lv_counter             NUMBER := 0;
        lv_rec_count           NUMBER;
        lv_min_slno            NUMBER;
        lv_max_slno            NUMBER;
        lv_from_slno           NUMBER;
        lv_to_slno             NUMBER;
        lv_batch_count         NUMBER;
        ln_request_id          NUMBER;
        lv_request_id          NUMBER := fnd_global.conc_request_id;
        lv_noof_items          NUMBER := 0;
        lv_item_cost           NUMBER := 0;
        lv_req_phase           VARCHAR2 (100);
        lv_req_status          VARCHAR2 (100);
        lv_req_dev_phase       VARCHAR2 (1000);
        lv_req_dev_status      VARCHAR2 (100);
        lv_req_message         VARCHAR2 (2400);
        lv_req_return_status   BOOLEAN;
        req_data               VARCHAR2 (20);
        l_batch_size           NUMBER := 1;
        l_rundate              DATE := NULL;
        lv_email_counter       NUMBER := 1;
        ln_subdiv_cnt          NUMBER;
        ln_item_cnt            NUMBER;
        ln_subdiv_uda_cnt      NUMBER;
        lv_appl_inst_name      VARCHAR2 (25);
        ln_styledupcount       NUMBER;             -- Added for 3.2 by Infosys
        l_style                VARCHAR2 (50);      -- Added for 3.2 by Infosys

        CURSOR c_item IS
            SELECT msib.inventory_item_id, msib.organization_id, msib.style_number style,
                   msib.color_code color, msib.item_size sze, msib.inventory_item_status_code item_status,
                   msib.item_description description, msib.size_scale_id scale_code_id, mc1.attribute5 sub_division
              FROM mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   apps.xxd_common_items_v msib, mtl_item_categories mic1, mtl_categories mc1,
                   mtl_category_sets mcs1
             WHERE     1 = 1
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   AND msib.organization_id IN
                           (SELECT ood.organization_id
                              FROM fnd_lookup_values flv, org_organization_definitions ood
                             WHERE     lookup_type =
                                       'XXD_1206_INV_ORG_MAPPING'
                                   AND lookup_code = 7
                                   AND flv.attribute1 = ood.organization_code
                                   AND LANGUAGE = USERENV ('LANG'))
                   AND msib.style_number = NVL (pv_style, msib.style_number)
                   AND msib.inventory_item_id =
                       NVL (pn_item_id, msib.inventory_item_id)
                   AND msib.inventory_item_id = mic1.inventory_item_id
                   AND msib.organization_id = mic1.organization_id
                   AND mic1.category_set_id = mcs1.category_set_id
                   AND mic1.category_id = mc1.category_id
                   AND mc1.structure_id = mcs1.structure_id
                   AND mc1.attribute5 IS NOT NULL                --Subdivision
                   AND mcs1.category_set_name = 'Inventory'
                   --AND TRUNC (msib.last_update_date) = NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)), TRUNC (SYSDATE))
                   AND TRUNC (mc1.last_update_date) =
                       NVL (TRUNC (fnd_date.canonical_to_date (pv_rundate)),
                            TRUNC (SYSDATE))
                   AND mcs.category_set_name = 'OM Sales Category'
                   AND NVL (msib.item_type, 'X') NOT IN ('GENERIC', 'SAMPLE', 'SAMPLE-L',
                                                         'SAMPLE-R')
                   AND msib.size_scale_id IS NOT NULL
                   AND msib.upc_code IS NOT NULL
                   --            AND msib.inventory_item_id = 16292398--14840754
                   AND xxdoinv006_pkg.get_dept_num_f (msib.inventory_item_id,
                                                      msib.organization_id)
                           IS NOT NULL
                   AND NOT EXISTS
                           (SELECT '1'
                              FROM apps.fnd_lookup_values
                             WHERE     lookup_type = 'XXDOINV007_STYLE'
                                   AND enabled_flag = 'Y'
                                   AND LANGUAGE = 'US'
                                   AND description = msib.style_number);


        CURSOR c_itemsku (pv_segment1 VARCHAR2, pv_style VARCHAR2, --Added for 3.2 by Infosys
                                                                   pn_item_id NUMBER
                          , pn_orgn_id NUMBER)
        IS
            SELECT XMLELEMENT (
                       "v1:XItemDesc",
                       xmlattributes (
                           'http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1'
                               AS "xmlns:v1"),
                       XMLELEMENT ("v1:item", msib.inventory_item_id),
                       --XMLELEMENT ("v1:item_parent", msib.segment1),                                                                    -- commented by BT Tech team
                       --XMLELEMENT ("v1:item_parent", msib.style_number),       --commented for 3.2 by Infosys
                       XMLELEMENT ("v1:item_parent", pv_style), --Added for 3.2 by Infosys
                       -- added by BT Tech team
                       XMLELEMENT ("v1:item_grandparent", ''),
                       XMLELEMENT ("v1:pack_ind", 'N'),
                       XMLELEMENT ("v1:item_level", 2),
                       XMLELEMENT ("v1:tran_level", 2),
                       XMLELEMENT (
                           "v1:diff_1",
                           --xxdoinv006_pkg.get_color_flex_id_f (msib.segment2)                                                    -- commented by BT Tech team
                           xxdoinv006_pkg.get_color_flex_id_f (
                               msib.color_code)-- added by BT Tech team
                                               ),
                       --XMLELEMENT ("v1:diff_2", msib.segment3),                                                                        -- commented by BT Tech team
                       XMLELEMENT ("v1:diff_2", msib.item_size),
                       -- added by BT Tech team
                       XMLELEMENT ("v1:diff_3", ''),
                       XMLELEMENT ("v1:diff_4", ''),
                       XMLELEMENT (
                           "v1:dept",
                           xxdoinv006_pkg.get_dept_num_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:class",
                           xxdoinv006_pkg.get_class_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:subclass",
                           xxdoinv006_pkg.get_class_f (
                               msib.inventory_item_id,
                               msib.organization_id)),
                       XMLELEMENT (
                           "v1:item_desc",
                           --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                                    -- commented by BT Tech team
                           msib.item_number           -- added by BT Tech team
                                            || ':' || msib.item_description),
                       XMLELEMENT ("v1:iscloc_hier_level", 'RE'),
                       XMLELEMENT ("v1:izp_hier_level", 'RE'),
                       XMLELEMENT (
                           "v1:short_desc",
                              --msib.segment1|| ':'|| msib.segment2|| ':'|| msib.segment3                                    -- commented by BT Tech team
                              --msib.style_number        --commented for 3.2 by Infosys
                              pv_style              --Added for 3.2 by Infosys
                           || ':'
                           || msib.color_code
                           || ':'
                           || msib.item_size          -- added by BT Tech team
                           || ':'
                           || msib.item_description),
                       XMLELEMENT ("v1:retail_zone_group_id", 1),
                       XMLELEMENT ("v1:cost_zone_group_id", 1000),
                       XMLELEMENT ("v1:standard_uom", 'EA'),
                       XMLELEMENT ("v1:store_ord_mult", 'E'),
                       XMLELEMENT ("v1:forecast_ind", 'N'),
                       XMLELEMENT ("v1:simple_pack_ind", 'N'),
                       XMLELEMENT ("v1:contains_inner_ind", 'N'),
                       XMLELEMENT ("v1:sellable_ind", 'Y'),
                       XMLELEMENT ("v1:orderable_ind", 'Y'),
                       XMLELEMENT ("v1:pack_type", ''),
                       XMLELEMENT ("v1:order_as_type", ''),
                       XMLELEMENT ("v1:create_datetime", ''),
                       XMLELEMENT ("v1:XItemCtryDesc",
                                   XMLELEMENT ("v1:country_id", 'US')),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('US')),
                           XMLELEMENT ("v1:primary_supp_ind", 'Y'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'US'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01--                                xxdoinv006_pkg.get_cost_us_f
                                                               --                                                      (msib.inventory_item_id,
                                                               --                                                       msib.organization_id
                                                               --                                                      )
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01--                                    xxdoinv006_pkg.get_cost_us_f
                                                                   --                                                      (msib.inventory_item_id,
                                                                   --                                                       msib.organization_id
                                                                   --                                                      )
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01--                                    xxdoinv006_pkg.get_cost_us_f
                                                   --                                                      (msib.inventory_item_id,
                                                   --                                                       msib.organization_id
                                                   --                                                      )
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01--                                    xxdoinv006_pkg.get_cost_us_f
                                                                            --                                                      (msib.inventory_item_id,
                                                                            --                                                       msib.organization_id
                                                                            --                                                      )
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01--                                    xxdoinv006_pkg.get_cost_us_f
                                                                        --                                                      (msib.inventory_item_id,
                                                                        --                                                       msib.organization_id
                                                                        --                                                      )
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc,
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('US')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('UK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'GB'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                                    -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'UK'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'UK'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'UK'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'UK'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'UK'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'UK'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                                       (msib.segment1,
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'UK'
                                                                                                       ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'UK'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'UK'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'UK'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('UK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('JP')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'JP'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                                -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'JP'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'JP'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'JP'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'JP'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'JP'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'JP'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                                       (msib.segment1,
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'JP'
                                                                                                       ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'JP'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'JP'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'JP'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('JP')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CA')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CA'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'CA'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'CA'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'CA'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'CA'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'CA'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'CA'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                       (msib.segment1,
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'CA'
                                                                                                       ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'CA'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'CA'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'CA'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --   xmlitemsupdesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CA')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('HK')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'HK'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'HK'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'HK'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'HK'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'HK'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'HK'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'HK'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/* xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                                        (msib.segment1,
                                                                                                         msib.segment2,
                                                                                                         msib.segment3,
                                                                                                         'HK'
                                                                                                        ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'HK'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                    -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'HK'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'HK'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", '1'),
                               XMLELEMENT ("v1:inner_pack_size", '1'),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('HK')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)),
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('CN')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''), --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'CN'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'CN'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'CN'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'CN'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'CN'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'CN'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'CN'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                       (msib.segment1,
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'CN'
                                                                                                       ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'CN'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'CN'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'CN'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XISCDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       UPPER (NVL (msib.weight_uom_code, ''))),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')),
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('CN')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemSupDesc",
                           XMLELEMENT ("v1:supplier",
                                       xxdoinv006_pkg.get_vendor_id_f ('FR')),
                           XMLELEMENT ("v1:primary_supp_ind", 'N'),
                           XMLELEMENT ("v1:vpn", ''),
                           XMLELEMENT ("v1:supp_label", ''),
                           --  XItemSupCtyDesc
                           XMLELEMENT (
                               "v1:XItemSupCtyDesc",
                               XMLELEMENT ("v1:origin_country_id", 'FR'),
                               XMLELEMENT ("v1:primary_country_ind", 'Y'),
                               XMLELEMENT ("v1:unit_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                            -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'FR'
                                                                                              ) */
                                                               -- commented by BT Tech team - END
                                                               --                                xxdoinv006_pkg.get_region_cost_f
                                                               --                                   (msib.style_number,
                                                               --                                    -- added by BT Tech team - START
                                                               --                                    msib.color_code,
                                                               --                                    msib.item_size,
                                                               --                                    'FR'
                                                               --                                   )            -- added by BT Tech team - END
                                                               ),
                               XMLELEMENT (
                                   "v1:XItemCostDesc",
                                   XMLELEMENT ("v1:delivery_country_id",
                                               'US'),
                                   XMLELEMENT ("v1:primary_dlvy_ctry_ind",
                                               'Y'),
                                   XMLELEMENT ("v1:nic_static_ind", 'Y'),
                                   XMLELEMENT ("v1:base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                              (msib.segment1,
                                                                                               msib.segment2,
                                                                                               msib.segment3,
                                                                                               'FR'
                                                                                              ) */
                                                                   -- commented by BT Tech team - END
                                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                                   --                                       (msib.style_number,
                                                                   --                                        -- added by BT Tech team - START
                                                                   --                                        msib.color_code,
                                                                   --                                        msib.item_size,
                                                                   --                                        'FR'
                                                                   --                                       )        -- added by BT Tech team - END
                                                                   ),
                                   XMLELEMENT ("v1:negotiated_item_cost",
                                               0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                              (msib.segment1,
                                                                               msib.segment2,
                                                                               msib.segment3,
                                                                               'FR'
                                                                              ) */
                                                   -- commented by BT Tech team - END
                                                   --                                    xxdoinv006_pkg.get_region_cost_f
                                                   --                                       (msib.style_number,
                                                   --                                        -- added by BT Tech team - START
                                                   --                                        msib.color_code,
                                                   --                                        msib.item_size,
                                                   --                                        'FR'
                                                   --                                       )        -- added by BT Tech team - END
                                                   ),
                                   XMLELEMENT ("v1:extended_base_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                       (msib.segment1,
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'FR'
                                                                                                       ) */
                                                                            -- commented by BT Tech team - END
                                                                            --                                    xxdoinv006_pkg.get_region_cost_f
                                                                            --                                       (msib.style_number,
                                                                            --                                        -- added by BT Tech team - START
                                                                            --                                        msib.color_code,
                                                                            --                                        msib.item_size,
                                                                            --                                        'FR'
                                                                            --                                       )        -- added by BT Tech team - END
                                                                            ),
                                   XMLELEMENT ("v1:inclusive_cost", 0.01/*xxdoinv006_pkg.get_region_cost_f                                                        -- commented by BT Tech team - START
                                                                                                   (msib.segment1,
                                                                                                    msib.segment2,
                                                                                                    msib.segment3,
                                                                                                    'FR'
                                                                                                   ) */
                                                                        -- commented by BT Tech team - END
                                                                        --                                    xxdoinv006_pkg.get_region_cost_f
                                                                        --                                       (msib.style_number,
                                                                        --                                        -- added by BT Tech team - START
                                                                        --                                        msib.color_code,
                                                                        --                                        msib.item_size,
                                                                        --                                        'FR'
                                                                        --                                       )        -- added by BT Tech team - END
                                                                        )),
                               XMLELEMENT ("v1:lead_time",
                                           msib.full_lead_time),
                               XMLELEMENT ("v1:min_order_qty",
                                           msib.minimum_order_quantity),
                               XMLELEMENT ("v1:max_order_qty",
                                           msib.maximum_order_quantity),
                               XMLELEMENT ("v1:supp_hier_lvl_1", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_2", ''),
                               XMLELEMENT ("v1:supp_hier_lvl_3", ''),
                               XMLELEMENT ("v1:default_uop", 'EA'),
                               XMLELEMENT ("v1:supp_pack_size", 1),
                               XMLELEMENT ("v1:inner_pack_size", 1),
                               XMLELEMENT ("v1:ti", 1),
                               XMLELEMENT ("v1:hi", 1),
                               XMLELEMENT (
                                   "v1:XIscDimDesc",
                                   XMLELEMENT ("v1:dim_object", 'EA'),
                                   XMLELEMENT ("v1:tare_weight", ''),
                                   XMLELEMENT ("v1:tare_type", ''),
                                   XMLELEMENT (
                                       "v1:lwh_uom",
                                       NVL (msib.dimension_uom_code, '')),
                                   XMLELEMENT (
                                       "v1:length",
                                       NVL (
                                           DECODE (SIGN (msib.unit_length),
                                                   1, msib.unit_length,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:width",
                                       NVL (
                                           DECODE (SIGN (msib.unit_width),
                                                   1, msib.unit_width,
                                                   ''),
                                           '')),
                                   XMLELEMENT (
                                       "v1:dim_height",
                                       NVL (
                                           DECODE (SIGN (msib.unit_height),
                                                   1, msib.unit_height,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:liquid_volume", NULL),
                                   XMLELEMENT ("v1:liquid_volume_uom", NULL),
                                   XMLELEMENT ("v1:stat_cube", ''),
                                   XMLELEMENT (
                                       "v1:weight_uom",
                                       NVL (UPPER (msib.weight_uom_code), '')),
                                   XMLELEMENT (
                                       "v1:weight",
                                       NVL (
                                           DECODE (SIGN (msib.unit_weight),
                                                   1, msib.unit_weight,
                                                   ''),
                                           '')),
                                   XMLELEMENT ("v1:net_weight", ''),
                                   XMLELEMENT ("v1:presentation_method", '')),
                               XMLELEMENT ("v1:Cost_uom", ''),
                               XMLELEMENT ("v1:Tolerance_type", ''),
                               XMLELEMENT ("v1:Min_tolerance", ''),
                               XMLELEMENT ("v1:Max_Tolerance", '')), --  XItemSupCtyDesc
                           XMLELEMENT ("v1:consignment_rate", ''),
                           XMLELEMENT ("v1:supp_discontinue_date", ''),
                           XMLELEMENT ("v1:direct_ship_ind", ''),
                           XMLELEMENT ("v1:pallet_name", ''),
                           XMLELEMENT ("v1:case_name", ''),
                           XMLELEMENT ("v1:inner_name", ''),
                           XMLELEMENT (
                               "v17:XItmSupCtyMfrDesc",
                               xmlattributes (
                                   'http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1'
                                       AS "xmlns:v17"),
                               XMLELEMENT (
                                   "v17:manufacturer_ctry_id",
                                   xxdoinv006_pkg.get_sup_country_f ('FR')),
                               XMLELEMENT (
                                   "v17:primary_manufacturer_ctry_ind",
                                   'Y')),
                           XMLELEMENT ("v1:primary_case_size", 1)), --xmlitemsupdesc
                       XMLELEMENT (
                           "v1:XItemVATDesc",
                           XMLELEMENT ("v1:vat_type", 'B'),
                           XMLELEMENT ("v1:vat_region", '1000'),
                           XMLELEMENT ("v1:vat_code", 'S'),
                           XMLELEMENT (
                               "v1:active_date",
                                  TO_CHAR (SYSDATE, 'YYYY-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS'))),
                       --xmlitemzpdesc
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '101'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01--Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     --qll.operand
                                                                     --                                         NVL(hsoe.get_price_list_value (xxdo_get_price_list ('US'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '102'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CA')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01/*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                            -- commented by BT Tech team - START
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'CA'
                                                                                                       ) */
                                                                     -- commented by BT Tech team - END
                                                                     --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     --Commented and added below condition
                                                                     /*xxdoinv006_pkg.get_region_price_f
                                                                        (msib.style_number,
                                                                         -- added by BT Tech team - START
                                                                         msib.color_code,
                                                                         msib.item_size,
                                                                         'CA'
                                                                        )*/
                                                                     --                            NVL(hsoe.get_price_list_value (xxdo_get_price_list ('CA'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     -- added by BT Tech team - END
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CA')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '200'),                                                    -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('UK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01/*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                            -- commented by BT Tech team - START
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'UK'
                                                                                                       ) */
                                                                     -- commented by BT Tech team - END
                                                                     --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     --Commented and added below condition
                                                                     /*xxdoinv006_pkg.get_region_price_f
                                                                        (msib.style_number,
                                                                         -- added by BT Tech team - START
                                                                         msib.color_code,
                                                                         msib.item_size,
                                                                         'UK'
                                                                        )*/
                                                                     --                            NVL(hsoe.get_price_list_value (xxdo_get_price_list ('UK'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     -- added by BT Tech team - END
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('UK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '301'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('CN')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01/*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                                -- commented by BT Tech team - START
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'CN'
                                                                                                       ) */
                                                                     -- commented by BT Tech team - END
                                                                     --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     --Commented and added below condition
                                                                     /*xxdoinv006_pkg.get_region_price_f
                                                                        (msib.style_number,
                                                                         -- added by BT Tech team - START
                                                                         msib.color_code,
                                                                         msib.item_size,
                                                                         'CN'
                                                                        )*/
                                                                     --                            NVL(hsoe.get_price_list_value (xxdo_get_price_list ('CN'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     -- added by BT Tech team - END
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('CN')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           -- XMLELEMENT ("v1:hier_id", '300'),                                                    -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('JP')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01/*xxdoinv006_pkg.get_region_price_f (msib.segment1,                                                -- commented by BT Tech team - START
                                                                                                        msib.segment2,
                                                                                                        msib.segment3,
                                                                                                        'JP'
                                                                                                       ) */
                                                                     -- commented by BT Tech team - END
                                                                     --Start Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     --Commented and added below condition
                                                                     /*xxdoinv006_pkg.get_region_price_f
                                                                        (msib.style_number,
                                                                         -- added by BT Tech team - START
                                                                         msib.color_code,
                                                                         msib.item_size,
                                                                         'JP'
                                                                        )*/
                                                                     --                            NVL(hsoe.get_price_list_value (xxdo_get_price_list ('JP'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect 3059 v1.2 on 08-OCT-2015
                                                                     -- added by BT Tech team - END
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('JP')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '101'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('US')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01--Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     --qll.operand
                                                                     --                                         NVL(hsoe.get_price_list_value (xxdo_get_price_list ('US'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('US')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '212'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('FR')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01--Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     --qll.operand
                                                                     --                                         NVL(hsoe.get_price_list_value (xxdo_get_price_list ('US'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('FR')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XIZPDesc",
                           --XMLELEMENT ("v1:hier_id", '305'),                                                -- Commented by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT (
                               "v1:hier_id",
                               xxdoinv006_pkg.get_country_code_f ('HK')), -- Added     by BT Technology Team V1.1 09Mar2015
                           XMLELEMENT ("v1:selling_unit_retail", 0.01--Start Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     --qll.operand
                                                                     --                                         NVL(hsoe.get_price_list_value (xxdo_get_price_list ('US'),msib.inventory_item_id),0.01)
                                                                     --End Modification by BT Technology Team for Defect **** v1.3 on 27-OCT-2015
                                                                     ),
                           XMLELEMENT ("v1:selling_uom", 'EA'),
                           XMLELEMENT ("v1:multi_selling_uom", ''),
                           XMLELEMENT ("v1:currency_code",
                                       xxdoinv006_pkg.get_curr_code_f ('HK')),
                           XMLELEMENT ("v1:multi_units", ''),
                           XMLELEMENT ("v1:multi_unit_retail", '')),
                       XMLELEMENT (
                           "v1:XItemUDADtl",
                           XMLELEMENT ("v1:uda_id", 103),
                           XMLELEMENT ("v1:display_type", 'FF'),
                           XMLELEMENT ("v1:uda_date", SYSDATE),
                           XMLELEMENT ("v1:uda_value", NULL),
                           XMLELEMENT (
                               "v1:uda_text",
                               xxdoinv_pitem_pkg1.get_item_sub_division (
                                   msib.inventory_item_id,
                                   msib.organization_id)),
                           XMLELEMENT (
                               "v1:create_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS')--                            xxdoinv_pitem_pkg1.get_item_sub_div_cre_dt
                                                                 --                                                      (msib.inventory_item_id,
                                                                 --                                                       msib.organization_id
                                                                 --                                                      )
                                                                 ),
                           XMLELEMENT (
                               "v1:last_update_datetime",
                                  TO_CHAR (SYSDATE, 'RRRR-MM-DD')
                               || 'T'
                               || TO_CHAR (SYSDATE, 'HH24:MI:SS')),
                           XMLELEMENT (
                               "v1:last_update_id",
                               xxdoinv_pitem_pkg1.get_item_sub_div_last_upd_by (
                                   msib.inventory_item_id,
                                   msib.organization_id))),
                       XMLELEMENT ("v1:status", 'A'),
                       XMLELEMENT ("v1:uom_conv_factor", ''),
                       XMLELEMENT ("v1:package_size", 1),
                       XMLELEMENT ("v1:handling_temp", ''),
                       XMLELEMENT ("v1:handling_sensitivity", ''),
                       XMLELEMENT ("v1:mfg_rec_retail", ''),
                       XMLELEMENT ("v1:waste_type", ''),
                       XMLELEMENT ("v1:waste_pct", ''),
                       XMLELEMENT ("v1:item_number_type", 'MANL'),
                       XMLELEMENT ("v1:catch_weight_ind", 'N'),
                       XMLELEMENT ("v1:const_dimen_ind", 'N'),
                       XMLELEMENT ("v1:gift_wrap_ind", 'N'),
                       XMLELEMENT ("v1:ship_alone_ind", 'N'),
                       XMLELEMENT ("v1:ext_source_system", ''),
                       XMLELEMENT ("v1:size_group1", ''),
                       XMLELEMENT ("v1:size_group2", ''),
                       XMLELEMENT ("v1:size1", ''),
                       XMLELEMENT ("v1:size2", ''),
                       XMLELEMENT ("v1:color", ''),
                       XMLELEMENT ("v1:system_ind", ''),
                       XMLELEMENT ("v1:upc_supplement", ''),
                       XMLELEMENT ("v1:upc_type", ''),
                       XMLELEMENT ("v1:primary_upc_ind", ''),
                       XMLELEMENT ("v1:primary_repl_ind", ''),
                       XMLELEMENT ("v1:item_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_1_aggregate_ind", 'N'),
                       XMLELEMENT ("v1:diff_2_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_3_aggregate_ind", ''),
                       XMLELEMENT ("v1:diff_4_aggregate_ind", ''),
                       XMLELEMENT ("v1:perishable_ind", 'N'),
                       XMLELEMENT ("v1:notional_pack_ind", 'N'),
                       XMLELEMENT ("v1:soh_inquiry_at_pack_ind", 'N'),
                       XMLELEMENT ("v1:aip_case_type", ''),
                       XMLELEMENT ("v1:banded_item_ind", 'N'),
                       XMLELEMENT ("v1:order_type", ''),
                       XMLELEMENT ("v1:sale_type", ''),
                       XMLELEMENT ("v1:catch_weight_uom", ''),
                       XMLELEMENT ("v1:deposit_item_type", ''),
                       XMLELEMENT ("v1:inventory_ind", 'Y'),
                       XMLELEMENT ("v1:item_xform_ind", 'N'),
                       XMLELEMENT ("v1:container_item", ''),
                       XMLELEMENT ("v1:package_uom", '')) itemxml
              FROM mtl_categories_b mc, mtl_category_sets mcs, mtl_item_categories mic,
                   apps.xxd_common_items_v msib
             WHERE     1 = 1
                   AND mic.inventory_item_id = msib.inventory_item_id
                   AND mic.organization_id = msib.organization_id
                   AND mc.structure_id = mcs.structure_id
                   AND mic.category_id = mc.category_id
                   AND mic.category_set_id = mcs.category_set_id
                   AND msib.organization_id =
                       (SELECT ood.organization_id
                          FROM apps.fnd_lookup_values flv, apps.org_organization_definitions ood
                         WHERE     lookup_type = 'XXD_1206_INV_ORG_MAPPING'
                               AND lookup_code = 7
                               AND flv.attribute1 = ood.organization_code
                               AND LANGUAGE = USERENV ('LANG'))
                   AND mcs.category_set_name = 'OM Sales Category'
                   AND msib.upc_code IS NOT NULL
                   AND msib.size_scale_id IS NOT NULL
                   AND msib.item_type NOT IN ('GENERIC', 'SAMPLE', 'SAMPLE-L',
                                              'SAMPLE-R')
                   AND (TRIM (msib.style_number)) =
                       UPPER (TRIM (pv_segment1))
                   AND msib.inventory_item_id = pn_item_id
                   AND msib.organization_id = pn_orgn_id;

        CURSOR c_itempublish (pv_segment1 VARCHAR2, pn_item_id NUMBER)
        IS
            SELECT *
              FROM xxdoinv006_sd_uda_int
             WHERE     status_flag = 'N'
                   AND UPPER (TRIM (style)) = UPPER (TRIM (pv_segment1))
                   AND inventory_item_id = pn_item_id;

        CURSOR c_itemskurepublish (pv_fdate VARCHAR2, pv_tdate VARCHAR2)
        IS
            SELECT *
              FROM xxdoinv006_sd_uda_int
             WHERE     status_flag IN ('VE', 'P')
                   AND TRUNC (transmission_date) BETWEEN TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_fdate))
                                                     AND TRUNC (
                                                             fnd_date.canonical_to_date (
                                                                 pv_tdate));
    BEGIN
        req_data    := fnd_conc_global.request_data;
        l_rundate   := TRUNC (TO_DATE (pv_rundate, 'YYYY/MM/DD HH24:MI:SS'));

        IF (req_data IS NULL)
        THEN
            /* Setting the Retail PROD/DEV Environment based on Oracle Prod / Dev Instances */
            BEGIN
                SELECT DECODE (applications_system_name, 'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
                  INTO lv_wsdl_ip
                  FROM apps.fnd_product_groups;
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the File server name');
                    pv_retcode   := 2;
            END;

            /* Initializing the Item UDA web service variables */
            lv_wsdl_url    :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService?WSDL';
            lv_namespace   :=
                'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
            lv_service     := 'XItemPublishingService';
            lv_port        := 'XItemPublishingPort';
            lv_operation   := 'publishXItemUDAModifyUsingXItemDesc';
            lv_targetname   :=
                   'http://'
                || lv_wsdl_ip
                || '/XItemPublishingBean/XItemPublishingService';

            IF pv_reprocess = 'Y'
            THEN
                FOR rec_reprocess
                    IN c_itemskurepublish (pv_fromdate, pv_todate)
                LOOP
                    /* Inserting the data into Staging table using the code */
                    l_style   := NULL;             -- Added for 3.2 by Infosys
                    l_style   :=
                        SUBSTR (rec_reprocess.style,
                                INSTR (rec_reprocess.style, '-', 1) + 1); -- Added for 3.2 by Infosys

                    fnd_file.put_line (fnd_file.LOG,
                                       'reprocess-l_style ' || l_style);
                    fnd_file.put_line (
                        fnd_file.LOG,
                        'rec_reprocess.style ' || rec_reprocess.style);

                    FOR i IN c_itemsku (UPPER (TRIM (l_style)), -- Added for 3.2 by Infosys
                                                                UPPER (TRIM (rec_reprocess.style)), rec_reprocess.inventory_item_id
                                        , rec_reprocess.organization_id)
                    LOOP
                        BEGIN
                            UPDATE xxdoinv006_sd_uda_int
                               SET xdata   = XMLTYPE.getclobval (i.itemxml)
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                        EXCEPTION
                            WHEN OTHERS
                            THEN
                                lv_errmsg   := SQLERRM;

                                /* Updating the existing record to validation error and storing the error code */
                                UPDATE xxdoinv006_sd_uda_int
                                   SET status_flag = 'VE', errorcode = lv_errmsg, xdata = XMLTYPE.getclobval (i.itemxml)
                                 WHERE slno = rec_reprocess.slno;

                                COMMIT;
                                fnd_file.put_line (
                                    fnd_file.LOG,
                                    'Debug point 1:  Exception occured and verify the table data with error ');
                        END;
                    END LOOP;                                 /* For Style  */

                    /* Publish Item  */
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemUDAModifyUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || rec_reprocess.xdata
                            || '</publishXItemUDAModifyUsingXItemDesc>');

                    /* Calling the webservice here */
                    BEGIN
                        lx_xmltype_out   :=
                            xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                      , lx_xmltype_in);

                        IF lx_xmltype_out IS NOT NULL
                        THEN
                            fnd_file.put_line (
                                fnd_file.output,
                                'Response is stored in the staging table  ');
                            lc_return   :=
                                XMLTYPE.getclobval (lx_xmltype_out);

                            UPDATE xxdoinv006_sd_uda_int
                               SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                                   transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        ELSE
                            fnd_file.put_line (fnd_file.output,
                                               'Response is NULL  ');
                            lc_return   := NULL;

                            UPDATE xxdoinv006_sd_uda_int
                               SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE
                             WHERE slno = rec_reprocess.slno;
                        END IF;

                        COMMIT;
                    EXCEPTION
                        WHEN OTHERS
                        THEN
                            lv_errmsg   := SQLERRM;

                            /* Updating the existing record to validation error and storing the error code */
                            UPDATE xxdoinv006_sd_uda_int
                               SET status_flag = 'VE', errorcode = lv_errmsg
                             WHERE slno = rec_reprocess.slno;

                            COMMIT;
                            fnd_file.put_line (
                                fnd_file.LOG,
                                   'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                                || SQLERRM);
                    END;                    /* End calling the webservice   */
                END LOOP;                                 /* For REPublish  */
            ELSE
                FOR rec_item IN c_item
                LOOP
                    ln_itemskucount    := NULL;
                    lv_op_mode         := NULL;
                    --lv_op_mode := 'ITEM_UPDATE';
                    --lv_operation := 'publishXItemUDAModifyUsingXItemDesc';

                    /*--START-------Added for 3.2 by Infosys----*/
                    ln_styledupcount   := NULL;
                    l_style            := NULL;


                    SELECT COUNT (1)
                      INTO ln_styledupcount
                      FROM mtl_system_items_b
                     WHERE TO_CHAR (inventory_item_id) = rec_item.style;


                    IF ln_styledupcount <> 0
                    THEN
                        l_style   := 'RMS-' || (rec_item.style);
                    ELSE
                        l_style   := rec_item.style;
                    END IF;

                    fnd_file.put_line (
                        fnd_file.LOG,
                        'ln_styledupcount ' || ln_styledupcount);

                    fnd_file.put_line (fnd_file.LOG, 'l_style ' || l_style);
                    /*--End------Added for 3.2 by Infosys----*/
                    ln_item_cnt        := 0;
                    ln_subdiv_cnt      := 0;

                    lv_counter         := lv_counter + 1;

                    IF (lv_counter = 500)
                    THEN
                        COMMIT;
                        lv_counter   := 0;
                    END IF;

                    --apps.fnd_file.put_line (fnd_file.LOG, 'Debug point 1:  lv_counter :: ' || lv_counter);

                    SELECT COUNT (1)
                      INTO ln_item_cnt
                      FROM item_master@xxdo_retail_rms im
                     WHERE     1 = 1
                           AND im.item_level = 2
                           AND im.item = TO_CHAR (rec_item.inventory_item_id);

                    --Item exists in Item Master
                    IF ln_item_cnt >= 1
                    THEN
                        --Checking if sib division UDA exists for this item
                        SELECT COUNT (1)
                          INTO ln_subdiv_cnt
                          FROM uda_item_ff@xxdo_retail_rms uif
                         WHERE     1 = 1
                               AND uif.uda_id = 103
                               AND uif.item =
                                   TO_CHAR (rec_item.inventory_item_id);

                        --Subdivision UDA exists in UDA_ITEM_FF
                        IF ln_subdiv_cnt >= 1
                        THEN
                            --Checking the existing subdivision in RMS is same as the one in EBS
                            SELECT COUNT (1)
                              INTO ln_subdiv_uda_cnt
                              FROM uda_item_ff@xxdo_retail_rms uif
                             WHERE     1 = 1
                                   AND uif.uda_id = 103
                                   AND uif.item =
                                       TO_CHAR (rec_item.inventory_item_id)
                                   AND uif.uda_text = rec_item.sub_division;

                            --Subdivision in RMS is same as EBS
                            IF ln_subdiv_uda_cnt >= 1
                            THEN
                                apps.fnd_file.put_line (
                                    apps.fnd_file.LOG,
                                       'Sub Division UDA exists for item: '
                                    || rec_item.inventory_item_id);
                            --Subdivision in RMS is not same as EBS, then we need to update the UDA in RMS(Send UDA update message)
                            ELSE
                                lv_op_mode   := 'ITEM_UPDATE';

                                --Inserting the data into the subdivision staging table with XML
                                BEGIN
                                    FOR i
                                        IN c_itemsku (
                                               UPPER (TRIM (rec_item.style)),
                                               UPPER (TRIM (l_style)), --Added for 3.2 by Infosys
                                               rec_item.inventory_item_id,
                                               rec_item.organization_id)
                                    LOOP
                                        apps.fnd_file.put_line (
                                            fnd_file.LOG,
                                            'Before insert i= :: ');

                                        BEGIN
                                            lv_counter   := lv_counter + 1;

                                            IF (lv_counter = 500)
                                            THEN
                                                COMMIT;
                                                lv_counter   := 0;
                                            END IF;

                                            apps.fnd_file.put_line (
                                                fnd_file.LOG,
                                                   'Debug point 1:  lv_counter :: '
                                                || lv_counter);

                                            INSERT INTO xxdoinv006_sd_uda_int (
                                                            slno,
                                                            servicetype,
                                                            operation,
                                                            inventory_item_id,
                                                            organization_id,
                                                            style,
                                                            color,
                                                            sze,
                                                            item_status,
                                                            sub_division,
                                                            status_flag,
                                                            xdata,
                                                            parent_request_id,
                                                            creation_date,
                                                            created_by,
                                                            last_update_date,
                                                            last_updated_by)
                                                     VALUES (
                                                                xxdoinv006_sd_uda_int_s.NEXTVAL,
                                                                'ITEM ',
                                                                lv_op_mode,
                                                                rec_item.inventory_item_id,
                                                                rec_item.organization_id,
                                                                --rec_item.style,          --commented for 3.2 by Infosys
                                                                l_style, --Added for 3.2 by Infosys
                                                                rec_item.color,
                                                                rec_item.sze,
                                                                rec_item.item_status,
                                                                rec_item.sub_division,
                                                                lv_sku_status,
                                                                XMLTYPE.getclobval (
                                                                    i.itemxml),
                                                                lv_request_id,
                                                                SYSDATE,
                                                                fnd_global.user_id,
                                                                SYSDATE,
                                                                fnd_global.user_id);
                                        EXCEPTION
                                            WHEN OTHERS
                                            THEN
                                                fnd_file.put_line (
                                                    fnd_file.LOG,
                                                    'Debug point 1:  Exception occured and verify the table data with error ');
                                        END;
                                    END LOOP;                     -- For Style
                                END; --End of inserting data into subdivision staging table
                            END IF;  --End of Subdivision Validation condition
                        --Subdivision UDA does not exists in UDA_ITEM_FF(Send UDA creation message)
                        ELSE
                            lv_op_mode   := 'ITEM_CREATE';

                            --Inserting the data into the subdivision staging table with XML
                            BEGIN
                                FOR i
                                    IN c_itemsku (UPPER (TRIM (rec_item.style)), UPPER (TRIM (l_style)), --Added for 3.2 by Infosys
                                                                                                         rec_item.inventory_item_id
                                                  , rec_item.organization_id)
                                LOOP
                                    apps.fnd_file.put_line (
                                        fnd_file.LOG,
                                        'Before insert i= :: ');

                                    BEGIN
                                        lv_counter   := lv_counter + 1;

                                        IF (lv_counter = 500)
                                        THEN
                                            COMMIT;
                                            lv_counter   := 0;
                                        END IF;

                                        apps.fnd_file.put_line (
                                            fnd_file.LOG,
                                               'Debug point 1:  lv_counter :: '
                                            || lv_counter);

                                        INSERT INTO xxdoinv006_sd_uda_int (
                                                        slno,
                                                        servicetype,
                                                        operation,
                                                        inventory_item_id,
                                                        organization_id,
                                                        style,
                                                        color,
                                                        sze,
                                                        item_status,
                                                        sub_division,
                                                        status_flag,
                                                        xdata,
                                                        parent_request_id,
                                                        creation_date,
                                                        created_by,
                                                        last_update_date,
                                                        last_updated_by)
                                                 VALUES (
                                                            xxdoinv006_sd_uda_int_s.NEXTVAL,
                                                            'ITEM ',
                                                            lv_op_mode,
                                                            rec_item.inventory_item_id,
                                                            rec_item.organization_id,
                                                            --rec_item.style,        --commented for 3.2 by Infosys
                                                            l_style, --Added for 3.2 by Infosys
                                                            rec_item.color,
                                                            rec_item.sze,
                                                            rec_item.item_status,
                                                            rec_item.sub_division,
                                                            lv_sku_status,
                                                            XMLTYPE.getclobval (
                                                                i.itemxml),
                                                            lv_request_id,
                                                            SYSDATE,
                                                            fnd_global.user_id,
                                                            SYSDATE,
                                                            fnd_global.user_id);
                                    EXCEPTION
                                        WHEN OTHERS
                                        THEN
                                            fnd_file.put_line (
                                                fnd_file.LOG,
                                                'Debug point 1:  Exception occured and verify the table data with error ');
                                    END;
                                END LOOP;                         -- For Style
                            END; --End of inserting data into subdivision staging table
                        END IF; --End of subdivision exists in UDA_ITEM_FF condition
                    END IF;      --End of item exists in ITEM_MASTER condition
                /* Fetching the processed record of the Max transmission date */
                /*--commented by kranthi
                BEGIN
                   SELECT sub_division
                     INTO lv_sub_division
                     FROM xxdoinv006_sd_uda_int
                    WHERE UPPER (TRIM (style)) = UPPER (TRIM (rec_item.style))
                      AND organization_id = rec_item.organization_id
                      AND inventory_item_id = rec_item.inventory_item_id
                      AND processed_flag = 'Y'
                      AND status_flag = 'P'
                      AND ROWNUM = 1
                      AND transmission_date =
                             (SELECT MAX (transmission_date)
                                FROM xxdoinv006_sd_uda_int
                               WHERE UPPER (TRIM (style)) =
                                                  UPPER (TRIM (rec_item.style))
                                 AND organization_id = rec_item.organization_id
                                 AND inventory_item_id =
                                                     rec_item.inventory_item_id
                                 AND processed_flag = 'Y'
                                 AND status_flag = 'P');
                EXCEPTION
                   WHEN OTHERS
                   THEN
                      BEGIN
                         FOR i IN c_itemsku (UPPER (TRIM (rec_item.style)),
                                             rec_item.inventory_item_id,
                                             rec_item.organization_id
                                            )
                         LOOP
                            fnd_file.put_line (fnd_file.LOG,
                                               'Before insert i= :: '
                                              );

                            BEGIN
                               lv_counter := lv_counter + 1;

                               IF (lv_counter = 500)
                               THEN
                                  COMMIT;
                                  lv_counter := 0;
                               END IF;

                               fnd_file.put_line
                                           (fnd_file.LOG,
                                               'Debug point 1:  lv_counter :: '
                                            || lv_counter
                                           );

                               INSERT INTO xxdoinv006_sd_uda_int
                                           (slno,
                                            servicetype, operation,
                                            inventory_item_id,
                                            organization_id,
                                            style, color,
                                            sze,
                                            item_status,
                                            sub_division,
                                            status_flag,
                                            xdata,
                                            parent_request_id,
                                            creation_date,
                                            created_by,
                                            last_update_date,
                                            last_updated_by
                                           )
                                    VALUES (xxdoinv006_sd_uda_int_s.NEXTVAL,
                                            'ITEM ', lv_op_mode,
                                            rec_item.inventory_item_id,
                                            rec_item.organization_id,
                                            rec_item.style, rec_item.color,
                                            rec_item.sze,
                                            rec_item.item_status,
                                            rec_item.sub_division,
                                            lv_sku_status,
                                            XMLTYPE.getclobval (i.itemxml),
                                            lv_request_id,
                                            SYSDATE,
                                            fnd_global.user_id,
                                            SYSDATE,
                                            fnd_global.user_id
                                           );
                            EXCEPTION
                               WHEN OTHERS
                               THEN
                                  fnd_file.put_line
                                     (fnd_file.LOG,
                                      'Debug point 1:  Exception occured and verify the table data with error '
                                     );
                            END;
                         END LOOP;                             -- For Style
                      END;
                END;*/
                --commented by kranthi

                --COMMIT;

                END LOOP;

                COMMIT;

                /******************************************************************************/

                apps.fnd_file.put_line (fnd_file.LOG,
                                        '***Batching Started ***');

                BEGIN
                    SELECT COUNT (*)
                      INTO lv_rec_count
                      FROM xxdoinv006_sd_uda_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Code :' || SQLCODE);
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:lv_rec_count=' || lv_rec_count);

                BEGIN
                    SELECT MIN (slno)
                      INTO lv_min_slno
                      FROM xxdoinv006_sd_uda_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the min no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                BEGIN
                    SELECT MAX (slno)
                      INTO lv_max_slno
                      FROM xxdoinv006_sd_uda_int
                     WHERE     processed_flag = 'N'
                           AND parent_request_id = lv_request_id;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_rec_count   := 0;
                        fnd_file.put_line (
                            fnd_file.LOG,
                            'Error while finding the min no of records');
                        fnd_file.put_line (fnd_file.LOG,
                                           'SQL Error Message :' || SQLERRM);
                END;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:lv_min_slno=' || lv_min_slno);
                lv_batch_count   :=
                    NVL (apps.fnd_profile.VALUE ('XXDO_ITEM_INT_CHILD_REQ'),
                         1);
                l_batch_size   := CEIL (lv_rec_count / lv_batch_count);

                IF l_batch_size = 1
                THEN
                    IF lv_rec_count = 1
                    THEN
                        l_batch_size   := 1;
                    ELSIF lv_rec_count = 2
                    THEN
                        l_batch_size   := 2;
                    END IF;

                    lv_batch_count   := 1;
                END IF;

                fnd_file.put_line (
                    fnd_file.LOG,
                    '***Batching Started ***:l_batch_size=' || l_batch_size);

                FOR i IN 1 .. lv_batch_count
                LOOP
                    IF i = 1
                    THEN
                        lv_from_slno   := lv_min_slno;
                        lv_to_slno     := lv_from_slno + l_batch_size - 1;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** i=1 lv_from_slno'
                            || lv_from_slno
                            || ' AND lv_to_slno='
                            || lv_to_slno
                            || ' AND l_batch_size='
                            || l_batch_size);
                    ELSE
                        lv_from_slno   := lv_to_slno + 1;
                        lv_to_slno     := lv_from_slno + l_batch_size;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** i not 1 lv_from_slno'
                            || lv_from_slno
                            || ' AND lv_to_slno='
                            || lv_to_slno
                            || ' AND l_batch_size='
                            || l_batch_size);
                    END IF;

                    IF lv_to_slno > lv_max_slno
                    THEN
                        lv_to_slno   := lv_max_slno;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               '*** lv_to_slno > lv_max_slno :: lv_to_slno='
                            || lv_to_slno);
                    END IF;

                    fnd_file.put_line (fnd_file.LOG,
                                       'lv_from_slno' || lv_from_slno);
                    fnd_file.put_line (fnd_file.LOG,
                                       'lv_to_slno' || lv_to_slno);
                    ln_request_id   :=
                        apps.fnd_request.submit_request (
                            application   => 'XXDO',
                            program       => 'XXDOINV006_ITEM_CALL_WEBSRV',
                            description   =>
                                   'Child Request - Call Subdivision UDA WEB Service('
                                || i
                                || ')',
                            start_time    => SYSDATE,
                            sub_request   => TRUE,
                            argument1     => lv_from_slno,
                            argument2     => lv_to_slno,
                            argument3     => lv_request_id,
                            argument4     => 'ITEM_SUBDIV_UDA');
                    fnd_file.put_line (
                        fnd_file.LOG,
                           'Submitted BATCH '
                        || i
                        || 'Request id '
                        || ln_request_id);

                    IF ln_request_id IS NOT NULL
                    THEN
                        COMMIT;
                    ELSE
                        ROLLBACK;
                    END IF;
                END LOOP;

                IF lv_batch_count > 0
                THEN
                    apps.fnd_conc_global.set_req_globals (
                        conc_status    => 'PAUSED',
                        request_data   => TO_CHAR (ln_request_id));
                END IF;
            /***********************************************************************************************************************************/

            END IF;
        END IF;

        IF req_data IS NOT NULL
        THEN
            --Calling subdivision email procedure to send email to respective people
            send_email_subdiv_uda_proc;
        END IF;
    EXCEPTION
        WHEN OTHERS
        THEN
            --Getting the instance name
            BEGIN
                SELECT applications_system_name
                  INTO lv_appl_inst_name
                  FROM apps.fnd_product_groups;
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Unable to fetch the Application instance name in Subdivision UDA email program');
            END;

            fnd_file.put_line (
                fnd_file.LOG,
                'Exception Occured in Item Procedure and it is ' || SQLERRM);
            -- Email when program error out
            v_def_mail_recips   :=
                get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
            apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration Subdivision UDA Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY') || ' from ' || lv_appl_inst_name || ' instance'
                                                 , l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Type: multipart/mixed; boundary=boundarystring',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);

            BEGIN
                SELECT meaning
                  INTO l_primary_email
                  FROM fnd_lookup_values_vl
                 WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
            EXCEPTION
                WHEN OTHERS
                THEN
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                        'Too many primary email addresses.');
            END;

            apps.do_mail_utils.send_mail_line (
                   'Item Integration - Subdivision UDA Program is completed with Error/Warning. Request ID='
                || fnd_global.conc_request_id,
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_close (l_ret_val);
    -- End Email code

    END publish_subdiv_itemuda_upd;

    --Added publish_subdiv_itemuda_upd procedure for change 2.1 - End

    PROCEDURE rms_batch_item_p (errbuf OUT VARCHAR2, retcode OUT VARCHAR2, p_slno_from IN NUMBER
                                , p_slno_to IN NUMBER, p_parent_request_id IN NUMBER, program_name IN VARCHAR2)
    IS
        ---------------------------------------------
        -- cursor cur_int_atr_pub is to
        -- retrive the records from the staging table
        -- and then publish it to the 2nd staging tabl
        -- for sending the xml data to RMS
        ---------------------------------------------
        /*  CURSOR c_item_publish
          IS
             SELECT *
               FROM xxdoinv006_int
              WHERE STYLE_STATUS_FLAG ='N'
                AND ITEM_TYPE='STYLE'
                AND slno BETWEEN p_slno_from AND p_slno_to
                AND parent_request_id = p_parent_request_id;

          CURSOR c_sku_publish
          IS
             SELECT *
               FROM xxdoinv006_int
              WHERE SKU_STATUS_FLAG ='N'
                AND ITEM_TYPE='SKU'
                AND slno BETWEEN p_slno_from AND p_slno_to
                AND parent_request_id = p_parent_request_id;

          CURSOR c_upc_publish
          IS
             SELECT *
               FROM xxdoinv006_int
              WHERE UPC_STATUS_FLAG ='N'
                AND ITEM_TYPE='UPC'
                AND slno BETWEEN p_slno_from AND p_slno_to
                AND parent_request_id = p_parent_request_id;  */
        CURSOR c_item_tax_uda IS
            SELECT *
              FROM xxdoinv006g_int
             WHERE     status_flag = 'N'
                   AND slno BETWEEN p_slno_from AND p_slno_to
                   AND parent_request_id = p_parent_request_id;

        --Added c_item_subdiv_uda cursor for change 2.1
        CURSOR c_item_subdiv_uda IS
            SELECT *
              FROM xxdoinv006_sd_uda_int
             WHERE     status_flag = 'N'
                   AND slno BETWEEN p_slno_from AND p_slno_to
                   AND parent_request_id = p_parent_request_id;

        c_item_publish       SYS_REFCURSOR;
        l_query              VARCHAR2 (10000);
        l_ref_record         xxdoinv006_int%ROWTYPE;

        ----------------------
        -- Declaring Variables
        ----------------------
        lv_wsdl_ip           VARCHAR2 (25) := NULL;
        lv_wsdl_url          VARCHAR2 (4000) := NULL;
        lv_namespace         VARCHAR2 (4000) := NULL;
        lv_service           VARCHAR2 (4000) := NULL;
        lv_port              VARCHAR2 (4000) := NULL;
        lv_operation         VARCHAR2 (4000) := NULL;
        lv_targetname        VARCHAR2 (4000) := NULL;
        lx_xmltype_in        SYS.XMLTYPE;
        lx_xmltype_out       SYS.XMLTYPE;
        v_xml_data           CLOB;
        lc_return            CLOB;
        lv_errmsg            VARCHAR2 (240) := NULL;
        v_item_id            NUMBER := 0;
        v_user_id            VARCHAR2 (240) := 0;
        v_po_nbr             VARCHAR2 (240) := NULL;
        v_doc_type           VARCHAR2 (240) := NULL;
        v_aux_reason_code    VARCHAR2 (240) := NULL;
        v_weight             NUMBER := 0;
        v_weight_uom         VARCHAR2 (240) := NULL;
        v_unit_cost          NUMBER := 0;
        v_status             VARCHAR2 (240) := NULL;
        v_creation_date      DATE;
        v_created_by         NUMBER := 0;
        v_last_update_date   DATE;
        v_last_update_by     NUMBER := 0;
        --      v_s_no                     number           := 0                       ;
        v_seq_no             NUMBER := 0;
        l_cur_limit          NUMBER := 0;
        l_cnt                NUMBER := 0;
        l_request_id         NUMBER := fnd_global.conc_request_id;
        l_dc_dest_id         NUMBER := 0;
        ln_cad_exchange      NUMBER;
        l_xmldata            SYS.XMLTYPE;
    -- pragma autonomous_transaction;

    ---------------------------------
    -- Beginning of the procedure
    --------------------------------
    BEGIN
        /* Initializing the web service variables */
        fnd_file.put_line (fnd_file.LOG, '*** Child Request ***');
        l_query        :=
               'SELECT * FROM xxdoinv006_int WHERE 1=1 AND slno BETWEEN '
            || p_slno_from
            || ' AND '
            || p_slno_to
            || ' AND parent_request_id = '
            || p_parent_request_id;

        IF program_name = 'ITEM_STYLE'
        THEN
            l_query   :=
                   l_query
                || ' AND ITEM_TYPE=''STYLE'' AND STYLE_STATUS_FLAG =''N''';
        ELSIF program_name = 'ITEM_SKU'
        THEN
            l_query   :=
                   l_query
                || ' AND ITEM_TYPE=''SKU'' AND SKU_STATUS_FLAG =''N'' ';
        ELSIF program_name = 'ITEM_UPC'
        THEN
            l_query   :=
                   l_query
                || ' AND ITEM_TYPE=''UPC'' AND UPC_STATUS_FLAG =''N'' ';
        END IF;

        --fnd_file.put_line (fnd_file.LOG, '***l_query=' || l_query); --Commented here and added in IF condition which checks for Style, SKU and UPC for change 2.1

        BEGIN
            SELECT DECODE (applications_system_name, -- Start of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                     --'PROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'),
                                                     'EBSPROD', apps.fnd_profile.VALUE ('XXDO: RETAIL PROD'), -- End of modification by BT Technology Team on 17-Feb-2016 V2.0
                                                                                                              apps.fnd_profile.VALUE ('XXDO: RETAIL TEST')) file_server_name
              INTO lv_wsdl_ip
              FROM apps.fnd_product_groups;
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Unable to fetch the File server name');
                retcode   := 2;
        END;

        lv_wsdl_url    :=
               'http://'
            || lv_wsdl_ip
            || '/XItemPublishingBean/XItemPublishingService?WSDL';
        lv_namespace   :=
            'http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1';
        lv_service     := 'XItemPublishingService';
        lv_port        := 'XItemPublishingPort';
        lv_operation   := 'publishXItemCreateUsingXItemDesc';
        lv_targetname   :=
               'http://'
            || lv_wsdl_ip
            || '/XItemPublishingBean/XItemPublishingService';

        --IF UPPER (program_name) <> 'ITEM_TAX_UDA'-- Commented for change 2.1
        IF UPPER (program_name) IN ('ITEM_STYLE', 'ITEM_SKU', 'ITEM_UPC') --Changed the if condition to explicitly check for program names for change 2.1
        THEN
            fnd_file.put_line (fnd_file.LOG, '***l_query=' || l_query); --Added here after commenting from the above section for change 2.1

            -- FOR j IN c_item_publish
            OPEN c_item_publish FOR l_query;

            LOOP
                FETCH c_item_publish INTO l_ref_record;

                EXIT WHEN c_item_publish%NOTFOUND;

                IF l_ref_record.operation = 'ITEM_CREATE'
                THEN
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemCreateUsingXItemDesc
                          xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                          xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                          xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                          xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                          xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                          xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                          xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                          xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                          xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                          xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                          xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                          xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                          xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                          xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                          xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || l_ref_record.xdata
                            || '</publishXItemCreateUsingXItemDesc>');
                ELSE
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemModifyUsingXItemDesc
                            xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                            xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                            xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                            xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                            xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                            xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                            xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                            xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                            xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                            xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                            xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                            xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                            xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                            xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                            xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || l_ref_record.xdata
                            || '</publishXItemModifyUsingXItemDesc>');
                END IF;

                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);

                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        IF program_name = 'ITEM_STYLE'
                        THEN
                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', style_status_flag = 'P',
                                   transmission_date = SYSDATE, child_request_id = fnd_global.conc_request_id
                             WHERE slno = l_ref_record.slno;
                        ELSIF program_name = 'ITEM_SKU'
                        THEN
                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', sku_status_flag = 'P',
                                   transmission_date = SYSDATE, child_request_id = fnd_global.conc_request_id
                             WHERE slno = l_ref_record.slno;
                        ELSIF program_name = 'ITEM_UPC'
                        THEN
                            UPDATE xxdoinv006_int
                               SET retval = lc_return, processed_flag = 'Y', upc_status_flag = 'P',
                                   transmission_date = SYSDATE, child_request_id = fnd_global.conc_request_id
                             WHERE slno = l_ref_record.slno;
                        END IF;
                    ELSE
                        fnd_file.put_line (fnd_file.LOG,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv006_int
                           SET retval = lc_return, style_status_flag = 'VE', transmission_date = SYSDATE,
                               child_request_id = fnd_global.conc_request_id
                         WHERE slno = l_ref_record.slno;
                    END IF;

                    COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        /* Updating the existing record to validation error and storing the error code */
                        UPDATE xxdoinv006_int
                           SET style_status_flag = 'VE', errorcode = lv_errmsg, child_request_id = fnd_global.conc_request_id
                         WHERE slno = l_ref_record.slno;

                        -- COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM);
                END;
            END LOOP;
        ELSIF UPPER (program_name) = 'ITEM_SUBDIV_UDA' --Added elsif for change 2.1
        THEN
            FOR rec_item_subdiv_uda IN c_item_subdiv_uda
            LOOP
                IF rec_item_subdiv_uda.operation = 'ITEM_UPDATE'
                THEN
                    lv_operation   := 'publishXItemUDAModifyUsingXItemDesc';

                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemUDAModifyUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || rec_item_subdiv_uda.xdata
                            || '</publishXItemUDAModifyUsingXItemDesc>');
                ELSIF rec_item_subdiv_uda.operation = 'ITEM_CREATE'
                THEN
                    lv_operation   := 'publishXItemUDACreateUsingXItemDesc';
                    lx_xmltype_in   :=
                        SYS.XMLTYPE (
                               '<publishXItemUDACreateUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                            || rec_item_subdiv_uda.xdata
                            || '</publishXItemUDACreateUsingXItemDesc>');
                END IF;

                /* Calling the webservice here */
                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);


                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        fnd_file.put_line (
                            fnd_file.output,
                            'Response is stored in the staging table ');
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv006_sd_uda_int
                           SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                               transmission_date = SYSDATE, child_request_id = fnd_global.conc_request_id
                         WHERE slno = rec_item_subdiv_uda.slno;
                    ELSE
                        fnd_file.put_line (fnd_file.output,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv006_sd_uda_int
                           SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE,
                               child_request_id = fnd_global.conc_request_id
                         WHERE slno = rec_item_subdiv_uda.slno;
                    END IF;

                    COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        UPDATE xxdoinv006_sd_uda_int
                           SET status_flag = 'VE', errorcode = lv_errmsg, child_request_id = fnd_global.conc_request_id
                         WHERE slno = rec_item_subdiv_uda.slno;

                        COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'problem in sending the message details stored in the errorcode of the staging table '
                            || SQLERRM);
                END;
            END LOOP;
        ELSE
            FOR j IN c_item_tax_uda
            LOOP
                lx_xmltype_in   :=
                    SYS.XMLTYPE (
                           '<publishXItemUDAModifyUsingXItemDesc
                           xmlns="http://www.oracle.com/retail/igs/integration/services/XItemPublishingService/v1"
                           xmlns:v1="http://www.oracle.com/retail/integration/base/bo/XItemDesc/v1"
                           xmlns:v11="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItemDesc/v1"
                           xmlns:v110="http://www.oracle.com/retail/integration/localization/bo/InXItmSupCtyMfrDesc/v1"
                           xmlns:v111="http://www.oracle.com/retail/integration/custom/bo/EOfInXItmSupCtyMfrDesc/v1"
                           xmlns:v112="http://www.oracle.com/retail/integration/localization/bo/BrXItmSupCtyMfrDesc/v1"
                           xmlns:v113="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItmSupCtyMfrDesc/v1"
                           xmlns:v12="http://www.oracle.com/retail/integration/base/bo/LocOfXItemDesc/v1"
                           xmlns:v13="http://www.oracle.com/retail/integration/localization/bo/InXItemDesc/v1"
                           xmlns:v14="http://www.oracle.com/retail/integration/custom/bo/EOfInXItemDesc/v1"
                           xmlns:v15="http://www.oracle.com/retail/integration/localization/bo/BrXItemDesc/v1"
                           xmlns:v16="http://www.oracle.com/retail/integration/custom/bo/EOfBrXItemDesc/v1"
                           xmlns:v17="http://www.oracle.com/retail/integration/base/bo/XItmSupCtyMfrDesc/v1"
                           xmlns:v18="http://www.oracle.com/retail/integration/custom/bo/ExtOfXItmSupCtyMfrDesc/v1"
                           xmlns:v19="http://www.oracle.com/retail/integration/base/bo/LocOfXItmSupCtyMfrDesc/v1">'
                        || j.xdata
                        || '</publishXItemUDAModifyUsingXItemDesc>');

                /* Calling the webservice here */
                BEGIN
                    lx_xmltype_out   :=
                        xxdo_invoke_webservice_f (lv_wsdl_url, lv_namespace, lv_targetname, lv_service, lv_port, lv_operation
                                                  , lx_xmltype_in);

                    IF lx_xmltype_out IS NOT NULL
                    THEN
                        fnd_file.put_line (
                            fnd_file.output,
                            'Response is stored in the staging table  ');
                        lc_return   := XMLTYPE.getclobval (lx_xmltype_out);

                        UPDATE xxdoinv006g_int
                           SET retval = lc_return, processed_flag = 'Y', status_flag = 'P',
                               transmission_date = SYSDATE, child_request_id = fnd_global.conc_request_id
                         WHERE slno = j.slno;
                    ELSE
                        fnd_file.put_line (fnd_file.output,
                                           'Response is NULL  ');
                        lc_return   := NULL;

                        UPDATE xxdoinv006g_int
                           SET retval = lc_return, status_flag = 'VE', transmission_date = SYSDATE,
                               child_request_id = fnd_global.conc_request_id
                         WHERE slno = j.slno;
                    END IF;

                    COMMIT;
                EXCEPTION
                    WHEN OTHERS
                    THEN
                        lv_errmsg   := SQLERRM;

                        UPDATE xxdoinv006g_int
                           SET status_flag = 'VE', errorcode = lv_errmsg, child_request_id = fnd_global.conc_request_id
                         WHERE slno = j.slno;

                        COMMIT;
                        fnd_file.put_line (
                            fnd_file.LOG,
                               'PROBLEM IN SENDING THE MESSAGE DETAILS STORED IN THE ERRORCODE OF THE STAGING TABLE   '
                            || SQLERRM);
                END;
            END LOOP;
        END IF;

        COMMIT;
    EXCEPTION
        WHEN OTHERS
        THEN
            fnd_file.put_line (
                fnd_file.LOG,
                   'Exception Occured in Item Style Procedure and it is    '
                || SQLERRM);
    END rms_batch_item_p;

    --Start of change 2.1(Added below 3 functions)
    --Function to Get Sub-Division of an item
    FUNCTION get_item_sub_division (p_inventory_item_id   IN NUMBER,
                                    p_organization_id     IN NUMBER)
        RETURN VARCHAR2
    IS
        lv_sub_div   VARCHAR2 (150) := NULL;
    BEGIN
        BEGIN
            ---Sub-Division Query
            SELECT mc.attribute5 sub_division
              INTO lv_sub_div
              FROM apps.mtl_item_categories mic, apps.mtl_category_sets mcs, apps.mtl_categories mc
             WHERE     1 = 1
                   AND mic.category_set_id = mcs.category_set_id
                   AND mic.category_id = mc.category_id
                   AND mc.structure_id = mcs.structure_id
                   AND mc.attribute_category = 'Item Categories'
                   AND mcs.category_set_name = 'Inventory'
                   AND mic.inventory_item_id = p_inventory_item_id
                   AND mic.organization_id = p_organization_id;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                lv_sub_div   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Function: Inventory Category is not assigned for Item Id:'
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Function: No Data Found Error Mesg is:'
                    || SQLERRM);
            WHEN OTHERS
            THEN
                lv_sub_div   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Exception in getting sub-division for Item Id '
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Sub-division Function Error Message is ' || SQLERRM);
        END;


        RETURN lv_sub_div;
    EXCEPTION
        WHEN OTHERS
        THEN
            lv_sub_div   := NULL;
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                   'Main Exception in getting sub-division for Item Id '
                || p_inventory_item_id);
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                'Sub-division Function Main Exception is: ' || SQLERRM);
            RETURN lv_sub_div;
    END get_item_sub_division;

    FUNCTION get_item_sub_div_cre_dt (p_inventory_item_id   IN NUMBER,
                                      p_organization_id     IN NUMBER)
        RETURN VARCHAR2
    IS
        ld_sub_div_creation_date   DATE := NULL;
        lv_sub_div_cre_dt          VARCHAR2 (50) := NULL;
    BEGIN
        BEGIN
            SELECT mc.creation_date
              INTO ld_sub_div_creation_date
              FROM apps.mtl_item_categories mic, apps.mtl_category_sets mcs, apps.mtl_categories mc
             WHERE     1 = 1
                   AND mic.category_set_id = mcs.category_set_id
                   AND mic.category_id = mc.category_id
                   AND mc.structure_id = mcs.structure_id
                   AND mc.attribute_category = 'Item Categories'
                   AND mcs.category_set_name = 'Inventory'
                   AND mic.inventory_item_id = p_inventory_item_id
                   AND mic.organization_id = p_organization_id;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                lv_sub_div_cre_dt   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Function: Inventory Category is not assigned for Item Id:'
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Function: No Data Found Error Mesg is:'
                    || SQLERRM);
            WHEN OTHERS
            THEN
                lv_sub_div_cre_dt   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Exception in getting sub-division creation date for Item Id '
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division creation date Function Error Message is '
                    || SQLERRM);
        END;

        lv_sub_div_cre_dt   :=
               TO_CHAR (ld_sub_div_creation_date, 'YYYY-MM-DD')
            || 'T'
            || TO_CHAR (ld_sub_div_creation_date, 'HH24:MI:SS');

        RETURN lv_sub_div_cre_dt;
    EXCEPTION
        WHEN OTHERS
        THEN
            lv_sub_div_cre_dt   := NULL;
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                   'Main Exception in getting sub-division creation date for Item Id '
                || p_inventory_item_id);
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                   'Sub-division creation date Function Main Exception is: '
                || SQLERRM);
            RETURN lv_sub_div_cre_dt;
    END get_item_sub_div_cre_dt;

    FUNCTION get_item_sub_div_last_upd_by (p_inventory_item_id   IN NUMBER,
                                           p_organization_id     IN NUMBER)
        RETURN VARCHAR2
    IS
        ln_sub_div_last_upd_by        NUMBER := NULL;
        lv_sub_div_last_upd_by_name   VARCHAR2 (100) := NULL;
    BEGIN
        BEGIN
            SELECT mc.last_updated_by
              INTO ln_sub_div_last_upd_by
              FROM apps.mtl_item_categories mic, apps.mtl_category_sets mcs, apps.mtl_categories mc
             WHERE     1 = 1
                   AND mic.category_set_id = mcs.category_set_id
                   AND mic.category_id = mc.category_id
                   AND mc.structure_id = mcs.structure_id
                   AND mc.attribute_category = 'Item Categories'
                   AND mcs.category_set_name = 'Inventory'
                   AND mic.inventory_item_id = p_inventory_item_id
                   AND mic.organization_id = p_organization_id;
        EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
                ln_sub_div_last_upd_by   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Last updated by Function: Inventory Category is not assigned for Item Id:'
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division Last updated by Function: No Data Found Error Mesg is:'
                    || SQLERRM);
            WHEN OTHERS
            THEN
                ln_sub_div_last_upd_by   := NULL;
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Exception in getting sub-division last updated by for Item Id '
                    || p_inventory_item_id);
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                       'Sub-division last updated by Function Error Message is '
                    || SQLERRM);
        END;

        IF ln_sub_div_last_upd_by IS NOT NULL
        THEN
            BEGIN
                SELECT fu.user_name
                  INTO lv_sub_div_last_upd_by_name
                  FROM apps.fnd_user fu
                 WHERE     user_id = ln_sub_div_last_upd_by
                       AND TRUNC (SYSDATE) BETWEEN NVL (TRUNC (start_date),
                                                        TRUNC (SYSDATE))
                                               AND NVL (TRUNC (end_date),
                                                        TRUNC (SYSDATE));
            EXCEPTION
                WHEN OTHERS
                THEN
                    lv_sub_div_last_upd_by_name   := NULL;
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                           'Exception in getting user name for sub-division last updated by for Item Id '
                        || p_inventory_item_id);
                    apps.fnd_file.put_line (
                        apps.fnd_file.LOG,
                           'Sub-division last updated by Function Error Message in getting user name is '
                        || SQLERRM);
            END;
        ELSE
            lv_sub_div_last_upd_by_name   := NULL;
        END IF;

        RETURN lv_sub_div_last_upd_by_name;
    EXCEPTION
        WHEN OTHERS
        THEN
            lv_sub_div_last_upd_by_name   := NULL;
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                   'Main Exception in getting sub-division last updated by for Item Id '
                || p_inventory_item_id);
            apps.fnd_file.put_line (
                apps.fnd_file.LOG,
                   'Sub-division last updated by Function Main Exception is: '
                || SQLERRM);
            RETURN lv_sub_div_last_upd_by_name;
    END get_item_sub_div_last_upd_by;

    PROCEDURE send_email_subdiv_uda_proc
    IS
        CURSOR c_error_recs IS
            SELECT servicetype, item_type, operation,
                   inventory_item_id, organization_id, style,
                   color, sze, item_status,
                   sub_division, status_flag, processed_flag,
                   transmission_date, errorcode
              FROM xxdoinv006_sd_uda_int
             WHERE     status_flag = 'VE'
                   AND parent_request_id = fnd_global.conc_request_id;

        lv_appl_inst_name   VARCHAR2 (25);
    BEGIN
        BEGIN
            SELECT applications_system_name
              INTO lv_appl_inst_name
              FROM apps.fnd_product_groups;
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (
                    apps.fnd_file.LOG,
                    'Unable to fetch the File server name in Subdivision UDA email program');
        END;

        -- No.of records processed
        fnd_file.put_line (
            fnd_file.LOG,
               '*** In Subdivision UDA Email program parent_request_id ='
            || fnd_global.conc_request_id);

        SELECT COUNT (*)
          INTO l_total_recs
          FROM xxdoinv006_sd_uda_int
         WHERE 1 = 1 AND parent_request_id = fnd_global.conc_request_id;

        -- No.of Error records
        SELECT COUNT (*)
          INTO l_total_err_recs
          FROM xxdoinv006_sd_uda_int
         WHERE     status_flag = 'VE'
               AND parent_request_id = fnd_global.conc_request_id;

        v_def_mail_recips   := get_email_recips ('XXDO_ITEM_INT_EMAIL_LIST');
        apps.do_mail_utils.send_mail_header (fnd_profile.VALUE ('DO_DEF_ALERT_SENDER'), v_def_mail_recips, 'Item Integration Subdivision UDA Program - ' || TO_CHAR (SYSDATE, 'MM/DD/YYYY HH24MISS') || ' from ' || lv_appl_inst_name || ' instance'
                                             , l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Content-Type: multipart/mixed; boundary=boundarystring',
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
        apps.do_mail_utils.send_mail_line ('Content-Type: text/plain',
                                           l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);

        BEGIN
            SELECT meaning
              INTO l_primary_email
              FROM fnd_lookup_values_vl
             WHERE lookup_type = 'XXDO_ITEM_INT_EMAIL_LIST' AND tag = 'P';
        EXCEPTION
            WHEN OTHERS
            THEN
                apps.fnd_file.put_line (apps.fnd_file.LOG,
                                        'Too many primary email addresses.');
        END;

        apps.do_mail_utils.send_mail_line (
               'Item Integration - Subdivision UDA Program is completed Successfully. Request ID='
            || fnd_global.conc_request_id,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of records processed = ' || l_total_recs,
            l_ret_val);
        apps.do_mail_utils.send_mail_line ('', l_ret_val);
        apps.do_mail_utils.send_mail_line (
            'Total number of errored records = ' || l_total_err_recs,
            l_ret_val);

        IF l_total_err_recs > 0
        THEN
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'See attachment for report details.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Please contact ' || l_primary_email || ' for any queries.',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('--boundarystring', l_ret_val);
            apps.do_mail_utils.send_mail_line ('Content-Type: text/xls',
                                               l_ret_val);
            apps.do_mail_utils.send_mail_line (
                'Content-Disposition: attachment; filename="Item Integration Subdivision UDA.xls"',
                l_ret_val);
            apps.do_mail_utils.send_mail_line ('', l_ret_val);
            apps.do_mail_utils.send_mail_line (
                   'SERVICETYPE'
                || CHR (9)
                || 'ITEM_TYPE'
                || CHR (9)
                || 'OPERATION'
                || CHR (9)
                || 'INVENTORY_ITEM_ID'
                || CHR (9)
                || 'ORGANIZATION_ID'
                || CHR (9)
                || 'STYLE'
                || CHR (9)
                || 'COLOR'
                || CHR (9)
                || 'SIZE'
                || CHR (9)
                || 'ITEM_STATUS'
                || CHR (9)
                || 'SUB_DIVISION'
                || CHR (9)
                || 'STATUS_FLAG'
                || CHR (9)
                || 'PROCESSED_FLAG'
                || CHR (9)
                || 'TRANSMISSION_DATE'
                || CHR (9)
                || 'ERRORCODE'
                || CHR (9),
                l_ret_val);

            FOR rec IN c_error_recs
            LOOP
                v_out_line   := NULL;
                v_out_line   :=
                       rec.servicetype
                    || CHR (9)
                    || rec.operation
                    || CHR (9)
                    || rec.inventory_item_id
                    || CHR (9)
                    || rec.organization_id
                    || CHR (9)
                    || rec.style
                    || CHR (9)
                    || rec.color
                    || CHR (9)
                    || rec.sze
                    || CHR (9)
                    || rec.item_status
                    || CHR (9)
                    || rec.sub_division
                    || CHR (9)
                    || rec.status_flag
                    || CHR (9)
                    || rec.processed_flag
                    || CHR (9)
                    || rec.transmission_date
                    || CHR (9)
                    || rec.errorcode
                    || CHR (9);
                apps.do_mail_utils.send_mail_line (v_out_line, l_ret_val);
                l_counter    := l_counter + 1;
            END LOOP;
        END IF;

        apps.do_mail_utils.send_mail_close (l_ret_val);
    END send_email_subdiv_uda_proc;
--End of change 2.1

END XXDOINV_PITEM_PKG1;
/
